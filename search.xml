<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>docker-redis</title>
    <url>/2020/09/12/docker-redis/</url>
    <content><![CDATA[<p>本文使用基于alpine的redis镜像。简单的配置一个redis集群。</p>
<a id="more"></a>
<h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h2><h3 id="1-1-镜像下载"><a href="#1-1-镜像下载" class="headerlink" title="1.1 镜像下载"></a>1.1 镜像下载</h3><p>可以去dockerhub上搜索redis镜像的各种tag，文章发布时使用的版本<code>redis:alpine3.12</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:docker pull redis:alpine3.12</span><br></pre></td></tr></table></figure>
<h3 id="1-2-运行单实例"><a href="#1-2-运行单实例" class="headerlink" title="1.2 运行单实例"></a>1.2 运行单实例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:docker run --name redis-test -p 6379:6379 -v /etc/localtime:/etc/localtime:ro -itd redis:alpine3.12</span><br></pre></td></tr></table></figure>
<h3 id="1-3-运行集群"><a href="#1-3-运行集群" class="headerlink" title="1.3 运行集群"></a>1.3 运行集群</h3><h4 id="1-3-1-创建redis管理的集群"><a href="#1-3-1-创建redis管理的集群" class="headerlink" title="1.3.1 创建redis管理的集群"></a>1.3.1 创建redis管理的集群</h4><h4 id="1-3-2-创建k8s管理的集群"><a href="#1-3-2-创建k8s管理的集群" class="headerlink" title="1.3.2 创建k8s管理的集群"></a>1.3.2 创建k8s管理的集群</h4>]]></content>
  </entry>
  <entry>
    <title>docker-kafka</title>
    <url>/2020/09/12/docker-kafka/</url>
    <content><![CDATA[<p>文章简介</p>
<a id="more"></a>
<h2 id="1-配置"><a href="#1-配置" class="headerlink" title="1. 配置"></a>1. 配置</h2><h3 id="1-1-下载镜像"><a href="#1-1-下载镜像" class="headerlink" title="1.1 下载镜像"></a>1.1 下载镜像</h3><h3 id="1-2-运行单实例"><a href="#1-2-运行单实例" class="headerlink" title="1.2 运行单实例"></a>1.2 运行单实例</h3><h3 id="1-3-运行集群"><a href="#1-3-运行集群" class="headerlink" title="1.3 运行集群"></a>1.3 运行集群</h3><h4 id="1-3-1-创建zookeeper管理的集群"><a href="#1-3-1-创建zookeeper管理的集群" class="headerlink" title="1.3.1 创建zookeeper管理的集群"></a>1.3.1 创建zookeeper管理的集群</h4><h4 id="1-3-2-创建k8s管理的集群"><a href="#1-3-2-创建k8s管理的集群" class="headerlink" title="1.3.2 创建k8s管理的集群"></a>1.3.2 创建k8s管理的集群</h4>]]></content>
  </entry>
  <entry>
    <title>docker-nas-samba</title>
    <url>/2020/09/20/docker-nas-samba/</url>
    <content><![CDATA[<p>使用docker搭建samba nas</p>
<a id="more"></a>
<h2 id="1-镜像"><a href="#1-镜像" class="headerlink" title="1. 镜像"></a>1. 镜像</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker pull dperson/samba</span><br></pre></td></tr></table></figure>
<h2 id="2-创建容器"><a href="#2-创建容器" class="headerlink" title="2. 创建容器"></a>2. 创建容器</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run -it --name samba_docker -p 139:139 -p 445:445 -v /home/user_name/nas_data:/home/shares/shareA -d dperson/samba -w &quot;WORKGROUP&quot; -u &quot;userA;123456789&quot; -s &quot;shareA;/home/shares/shareA;yes;no;no;userA;userA;userA&quot;</span><br><span class="line"></span><br><span class="line">docker run -it --name samba_docker -p 139:139 -p 445:445 -p 137:137/udp -p 138:138/udp -v /run/media/nomq/linux_work/work/mi-camera:/home/shares/shareA -d dperson/samba -w &quot;WORKGROUP&quot; -u &quot;userA;123456789&quot; -s &quot;shareA;/home/shares/shareA;yes;no;no;userA;userA;userA&quot; -n</span><br></pre></td></tr></table></figure>
<p>参数说明<br>139/445端口 samba默认使用的两个端口<br>-n  开启nmbd广播进程，samba使用nmbd做局域网广播，一些iot设备只支持扫描发现nas，不支持手动输入ip，所以要开启nmbd服务<br>137-138/udb nmbd默认使用这两个端口做udp广播<br>-w 工作组<br>-u 用户名和密码<br>-s samba配置文件新增配置节点<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">shareA;/home/shares/shareA;yes;no;no;userA;userA;userA</span><br><span class="line">shareA 节点shareA</span><br><span class="line">/home/shares/shareA 共享目录/home/shares/shareA</span><br><span class="line">yes 共享名称对所有工作组用户可见</span><br><span class="line">no 不是只读（也就是说可写）</span><br><span class="line">no 不允许guest用户</span><br><span class="line">userA 指定共享的所有权用户</span><br><span class="line">userA 指定共享的超级用户</span><br><span class="line">userA 指定具有写权限的用户</span><br></pre></td></tr></table></figure></p>
<h2 id="3-其他配置"><a href="#3-其他配置" class="headerlink" title="3. 其他配置"></a>3. 其他配置</h2><p>上边创建的容器没有挂载samba的配置文件smb.cnf， samba配置文件默认位于 /etc/samba/smb.conf。<br>我们可以通过docker cp执行覆盖</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 从容器里复制出来</span><br><span class="line">~:docker cp samba_docker:/etc/samba/smb.conf ./smb.conf</span><br><span class="line"></span><br><span class="line"># 复制到容器里</span><br><span class="line">~:docker cp ./smb.conf samba_docker:/etc/samba/smb.conf</span><br></pre></td></tr></table></figure>
<p>一般要修改的可能是降低samba的协议版本，以兼容某些旧的客户端（比如app或者iot设备），协议版本位于 global节点<br>这里把协议降低到smbv1 -&gt; NT1<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server min protocol = NT1</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>nas</category>
      </categories>
      <tags>
        <tag>nas</tag>
        <tag>samba</tag>
        <tag>linux</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>docker-rocketmq</title>
    <url>/2020/09/12/docker-rocketmq/</url>
    <content><![CDATA[<p>rocketmq自带高可用的集群配置组件，本文将介绍单机和集群的配置</p>
<a id="more"></a>
<h2 id="1-rocketmq-简介"><a href="#1-rocketmq-简介" class="headerlink" title="1. rocketmq 简介"></a>1. rocketmq 简介</h2><p>rocketmq 是一款高性能高可用的mq中间件。支持分布式集群。发布/订阅的核心叫做broker，高可用依赖nameserver（类似于注册中心），rocketmq自带这两个部分。</p>
<p>在直接安装或docker配置时，要分别配置nameserver和broker。</p>
<h2 id="2-配置"><a href="#2-配置" class="headerlink" title="2. 配置"></a>2. 配置</h2><h3 id="2-1-下载镜像"><a href="#2-1-下载镜像" class="headerlink" title="2.1 下载镜像"></a>2.1 下载镜像</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:docker pull rocketmqinc/rocketmq</span><br></pre></td></tr></table></figure>
<h3 id="2-2-运行单实例"><a href="#2-2-运行单实例" class="headerlink" title="2.2 运行单实例"></a>2.2 运行单实例</h3><h4 id="2-2-1-运行nameserver"><a href="#2-2-1-运行nameserver" class="headerlink" title="2.2.1 运行nameserver"></a>2.2.1 运行nameserver</h4><p>rocketmq-nameserver默认9876端口</p>
<p>测试环境不需要配置日志</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:docker run -p 9876:9876 --name rmqserver -v /etc/localtime:/etc/localtime:ro -d rocketmqinc/rocketmq sh mqnamesrv</span><br></pre></td></tr></table></figure>
<p>这里在docker环境启动了一个叫做 rmqserver 的实例</p>
<h4 id="2-2-2-运行broker"><a href="#2-2-2-运行broker" class="headerlink" title="2.2.2 运行broker"></a>2.2.2 运行broker</h4><p>rocketmq-broker默认10911端口，集群环境下默认的主从复制端口10912，vip借口10909一般不需要</p>
<p>user.home指定到物理机目录下</p>
<p>测试环境使用默认配置，不需要额外配置日志，数据目录，也不需要配置文件</p>
<p>注意需要挂在配置文件和指定配置，因为要配置broker监听，不配置监听会导致宿主机无法连接docker里的rocketmq</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:docker run --name rmqbroker --link rmqserver:namesrv \</span><br><span class="line"> -p 10911:10911 -p 10909:10909 \</span><br><span class="line"> -v /etc/localtime:/etc/localtime:ro \</span><br><span class="line"> -v /home/nomq/work/docker_data/rocketmq/conf:/etc/rocketmq/conf:ro \</span><br><span class="line"> -e &quot;NAMESRV_ADDR=namesrv:9876&quot; -e &quot;JAVA_OPTS=-Duser.home=/opt&quot; \</span><br><span class="line"> -e &quot;JAVA_OPT_EXT=-server -Xms128m -Xmx128m&quot; \</span><br><span class="line"> -d rocketmqinc/rocketmq \</span><br><span class="line"> sh mqbroker -c /etc/rocketmq/conf/broker.conf</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Licensed to the Apache Software Foundation (ASF) under one or more</span><br><span class="line"># contributor license agreements.  See the NOTICE file distributed with</span><br><span class="line"># this work for additional information regarding copyright ownership.</span><br><span class="line"># The ASF licenses this file to You under the Apache License, Version 2.0</span><br><span class="line"># (the &quot;License&quot;); you may not use this file except in compliance with</span><br><span class="line"># the License.  You may obtain a copy of the License at</span><br><span class="line">#</span><br><span class="line">#     http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="line">#</span><br><span class="line">#  Unless required by applicable law or agreed to in writing, software</span><br><span class="line">#  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="line">#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="line">#  See the License for the specific language governing permissions and</span><br><span class="line">#  limitations under the License.</span><br><span class="line"></span><br><span class="line">brokerClusterName = DefaultCluster</span><br><span class="line">brokerName = broker-a</span><br><span class="line">brokerId = 0</span><br><span class="line">deleteWhen = 04</span><br><span class="line">fileReservedTime = 48</span><br><span class="line">brokerRole = ASYNC_MASTER</span><br><span class="line">flushDiskType = ASYNC_FLUSH</span><br><span class="line"># broker服务器会监听这个地址的消息，填写宿主机ip</span><br><span class="line">brokerIP1=192.168.0.106</span><br></pre></td></tr></table></figure>
<h4 id="2-2-3-控制台"><a href="#2-2-3-控制台" class="headerlink" title="2.2.3 控制台"></a>2.2.3 控制台</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:docker pull styletang/rocketmq-console-ng</span><br><span class="line">~:docker run --name rmqconsole -p 8080:8080 -v /etc/localtime:/etc/localtime:ro -e &quot;JAVA_OPTS=-Drocketmq.config.namesrvAddr=192.168.0.106:9876 -Drocketmq.config.isVIPChannel=false&quot; -itd styletang/rocketmq-console-ng</span><br></pre></td></tr></table></figure>
<h3 id="2-3-运行集群"><a href="#2-3-运行集群" class="headerlink" title="2.3 运行集群"></a>2.3 运行集群</h3><h4 id="2-3-1-创建rocketmq管理的集群"><a href="#2-3-1-创建rocketmq管理的集群" class="headerlink" title="2.3.1 创建rocketmq管理的集群"></a>2.3.1 创建rocketmq管理的集群</h4><h4 id="2-3-2-创建k8s管理的集群"><a href="#2-3-2-创建k8s管理的集群" class="headerlink" title="2.3.2 创建k8s管理的集群"></a>2.3.2 创建k8s管理的集群</h4>]]></content>
  </entry>
  <entry>
    <title>k8s使用minikube安装单机集群</title>
    <url>/2020/04/25/k8s%E4%BD%BF%E7%94%A8minikube%E5%AE%89%E8%A3%85%E5%8D%95%E6%9C%BA%E9%9B%86%E7%BE%A4/</url>
    <content><![CDATA[<p>k8s能够管理docker集群，自动扩缩容，简化了运维工作量。使用k8s加docker部署本地测试环境也很方便，免去了很多软件安装配置，随时用随时启动。<br>这里介绍minikube+本机docker的方式，在本地搭建docker集群。</p>
<a id="more"></a>
<p>(1) minikube介绍</p>
<p>k8s本身的集群组件会以docker容器的形式运行，所以minikube实际做的工作就是在物理机或虚拟机上安装docker，然后下载k8s组件的镜像，并提供参数启动容器。<br>minikube可以使用虚拟机或者物理机，这个参数是可以通过命令控制的，这里仅介绍物理机的方式，即minikube直接操作本机安装的docker。简单介绍下虚拟机的方式，minikube首先创建虚拟机，然后在虚拟机上安装docker并配置k8s的镜像和实例，用户要手动管理虚拟机上的docker时需要ssh连接到虚拟机上。<br>由于minikube默认使用的k8s镜像源都在国外，会很满，所以使用国内镜像，然后重命名或者通过minikube参数的形式使用国内镜像创建k8s容器集群。</p>
]]></content>
      <categories>
        <category>k8s</category>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>docker数据持久化</title>
    <url>/2020/06/17/docker%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/</url>
    <content><![CDATA[<p>docker容器是无状态的，所有的写入如果不做持久化，容器删除时，写入的数据也会删除。<br>本文容器数据持久化常用的两种方式，volume方式和bind mount方式。</p>
<a id="more"></a>
<p>容器的数据持久化实际是通过挂载宿主机目录到容器目录上实现的。<br>在dockerfile的或者run命令参数可以实现目录挂载。但挂载分为两种方式，volume和bind mount。</p>
<p>volume是最常用的方式，它类似于一个容器但只提供存储功能，所以它是由docker管理的，可以在dockerfile里创建，或volume命令创建，也可以在run命令里通过-v参数或mount参数创建或绑定已有的volume。</p>
<p>由于volume是docker管理的，更适合移植，所以可以在dockerfile里创建。</p>
<p>通过run命令创建并绑定一个volume，假设名字是 test-volume且之前不存在</p>
<p>docker run mysql:5.7 -v test-volume:/usr/lib/mysql … -&gt; 这会创建一个名为test-volume的volume，并且会使用容器里的/usr/lib/mysql数据做覆盖</p>
<p>最新的docker更推荐使用mount参数 —mount source=test-volume target=/usr/lib/mysql</p>
<p>通过run命令绑定一个已存在的volume</p>
<p>通过volume创建一个volume</p>
<p>dockerfile里创建volume</p>
<p>bind mount 是挂载宿主机物理路径的方式，适用于测试环境，配置简单，但由于绑定了真实路径导致无法移植，不能在dockerfile里用这种方式。</p>
<p>在 run命令里 使用绝对路径表示挂载卷就是以bind mount的方式绑定了宿主机上的真实路径。</p>
<p>druid log4j 日志开关<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 上面的druid的配置 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"log-filter"</span> <span class="attr">class</span>=<span class="string">"com.alibaba.druid.filter.logging.Log4j2Filter"</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 所有连接相关的日志 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"connectionLogEnabled"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 所有Statement相关的日志 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"statementLogEnabled"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 是否显示结果集 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"resultSetLogEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 是否显示SQL语句 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"statementExecutableSqlLogEnable"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><code>web-stat-filter</code> 用于采集数据web接口关联的jdbc监控数据</p>
<p><code>stat-view-servlet</code> 用于展示监控数据的servlet提供ui界面。</p>
]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>k8s dashboard安装和配置</title>
    <url>/2020/04/25/k8s-dashboard%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>文章简介</p>
<a id="more"></a>
<p>正文</p>
]]></content>
  </entry>
  <entry>
    <title>spring项目打包docker镜像</title>
    <url>/2020/05/10/spring%E9%A1%B9%E7%9B%AE%E6%89%93%E5%8C%85docker%E9%95%9C%E5%83%8F/</url>
    <content><![CDATA[<p>使用dockerfile maven插件把spring项目打包成docker镜像。<br>本文除了打包，还包含加载镜像创建容器，把镜像上传到nexus私服。</p>
<a id="more"></a>
<h2 id="1-pom配置"><a href="#1-pom配置" class="headerlink" title="1. pom配置"></a>1. pom配置</h2><p>spring项目一般会配置 spring maven插件。<br>本文打包需要 dockerfile maven插件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="2-linux-docker配置"><a href="#2-linux-docker配置" class="headerlink" title="2. linux docker配置"></a>2. linux docker配置</h2><p>docker 守护进程默认只开启了 unix socket 监听，对应的进程文件为 /var/run/docker.sock，当然你也可以在service文件里修改。默认的这个文件归属于docker用户组和超级用户，普通用户组没有权限操作这个文件，所以普通用户需要添加到docker组。</p>
<p>可能系统默认不开启docker，开启之后会影响性能尤其是安装了k8s之后，所以可能需要手动开启docker进程。</p>
<ul>
<li><p>命令：添加到docker用户组</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo gpasswd -a user_name docker</span><br></pre></td></tr></table></figure>
</li>
<li><p>权限生效，命令或重启电脑</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 刷新用户组，只对当前会话有效</span><br><span class="line">~:newgrp docker</span><br></pre></td></tr></table></figure>
</li>
<li><p>命令：从docker用户组删除用户</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo gpasswd -d user_name docker</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>docker也支持tcp监听，本地测试不需要开启。在service里配置，一般开启远程就是指开启tcp监听，如果需要在远程服务器上上传镜像，一般是需要开启这个的。</p>
]]></content>
  </entry>
  <entry>
    <title>tensorflow-1 衣物分类</title>
    <url>/2019/08/02/tensorflow-1-%E8%A1%A3%E7%89%A9%E5%88%86%E7%B1%BB/</url>
    <content><![CDATA[<p>使用keras构造神经网络。<br>输入层，隐藏层，输出层。激活函数的选择，损失函数的选择，损失函数优化器的选择。<br>对图像的扁平化处理。</p>
<a id="more"></a>
<p>tensorflow目前</p>
]]></content>
  </entry>
  <entry>
    <title>tensorflow-2-影评正负分类</title>
    <url>/2019/08/08/tensorflow-2-%E5%BD%B1%E8%AF%84%E6%AD%A3%E8%B4%9F%E5%88%86%E7%B1%BB/</url>
    <content><![CDATA[<p>文章简介</p>
<a id="more"></a>
<p>正文</p>
]]></content>
  </entry>
  <entry>
    <title>tensorflow-3-燃烧效率回归分析</title>
    <url>/2019/08/08/tensorflow-3-%E7%87%83%E7%83%A7%E6%95%88%E7%8E%87%E5%9B%9E%E5%BD%92%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<p>文章简介</p>
<a id="more"></a>
<p>正文</p>
]]></content>
  </entry>
  <entry>
    <title>tf.keras卷积神经网络</title>
    <url>/2019/08/15/tf-keras%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/</url>
    <content><![CDATA[<p>文章简介</p>
<a id="more"></a>
<p>正文</p>
]]></content>
  </entry>
  <entry>
    <title>卷积神经网络</title>
    <url>/2019/08/15/%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/</url>
    <content><![CDATA[<p>文章简介</p>
<a id="more"></a>
<p>卷积神经网络相比于传统的神经网络，增加了卷积层和池化层。</p>
<p>卷积层，主要由卷积核对输入做卷积操作。</p>
<p>一个卷积核通常是一个小的矩阵，比如 3*3矩阵，卷积操作就是卷积核在图像上滑动，把覆盖区域点积或其他方式（比如对应位置相乘然后求和），得到一个值。<br>滑动的长度就是步长。</p>
<p>卷积核（或者叫感受野）能够提取特定的特征，所以通常一个卷积层会有多个卷积核，每个卷积核提取不同的特征。<br>（这个过程类似于动物视觉系统的细胞，某些细胞对边缘特征敏感则提取边缘信息，而某些细胞对颜色敏感提取颜色。而更高级的则对形状或者其他高级特征敏感）<br>卷积层逐渐卷积出更复杂的特征。</p>
<p>池化层， 池化层（或者叫下采样层），可以降维，比如最大池化和平均池化。池化也是使用一个矩阵在输入上滑动，最大池化就是取出矩阵范围内最大的值作为输出。</p>
<p>此外还有激活层。 卷积层后接激活层，这样的激活层通常使用relu。一个完整的cnn模型，通常是 卷积+激活， 或卷积+激活+池化。池化层在激活层后边。然后最后是一个全连接网络。</p>
<p>比如： 输入-&gt;[卷积-&gt;激活]-&gt;[卷积-&gt;激活]-&gt;[卷积-&gt;激活-&gt;池化]-&gt;[卷积-&gt;激活-&gt;池化]-&gt;全连接网络</p>
<p>图像的特征是，相邻像素高度相关，而传统的全连接网络会把距离较远的像素做相关处理，学习到无用的特征，容易过拟合。</p>
<p>一个卷积核可能是10<em>10矩阵，但是对于一个1000</em>1000的图片来说，卷积核可以作用于全图。参数数量减少很多。而下采样再次降低参数数量。在反向传播时，卷积核仍然是卷积操作，而下采样可以把采样值作为1，未采样的置0.对于平均采样来说，可以是平均值。</p>
]]></content>
  </entry>
  <entry>
    <title>反向传播</title>
    <url>/2019/08/08/%E5%8F%8D%E5%90%91%E4%BC%A0%E6%92%AD/</url>
    <content><![CDATA[<p>文章简介</p>
<a id="more"></a>
<p>正文</p>
]]></content>
  </entry>
  <entry>
    <title>常用的损失函数</title>
    <url>/2019/08/08/%E5%B8%B8%E7%94%A8%E7%9A%84%E6%8D%9F%E5%A4%B1%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<p>文章简介</p>
<a id="more"></a>
<p>交叉熵 有多种交叉熵</p>
<p>什么是交叉熵</p>
<p>事件发生的概率 p(x)</p>
<p>事件信息量， 越可能发生的事件发生了，其信息量越小； 越不可能发生的事件发生了，其信息量越大。<br>I(x) = -log(p(x)) 概率的负对数， 与概率成负相关。</p>
<p>熵， 事件信息量的期望，(对应于统计学算数平均值，也可以是加权平均值，到概率论就是事件与发生概率的乘积的和)<br>H = -Ep(x)log(p(x))</p>
<p>相对熵(KL散度)<br>用于衡量同一个随机变量两种分布的差异， 比如p(x) x的真实分布， q(x) 预测的x的分布概率</p>
<p>Ep(x)log(p(x)/q(x)), 由这个公式可知 值越小二者越接近</p>
<p>交叉熵</p>
<p>把KL散度拆开</p>
<p>Ep(x)log(p(x)/q(x)) = Ep(x)log(p(x)) - Ep(x)log(q(x)) = -H(p) + H(p,q)</p>
<p>H(p) 就是真实分布的熵，是一个统计值（基于已有数据计算得来），不变的值; H(p, q)，就是交叉熵，所以这部分越小，就表示q与真实分布越接近。通常可以把交叉熵用做分类模型损失函数。 而回归则使用mse一类的损失函数</p>
<p>(2) 交叉熵</p>
<p>交叉熵会让分类错误的一结果消失， 分类正确的结果增大。</p>
<p>(3) mse</p>
<p>在sigmoid激活函数里，函数的两端偏导数接近0，导致w,b的梯度消失</p>
<p>交叉熵不会。</p>
<p>所以交叉熵更适合离散数据，分类模型。而对于连续的求值型使用mse这类合适.</p>
]]></content>
  </entry>
  <entry>
    <title>微积分基础</title>
    <url>/2019/08/08/%E5%BE%AE%E7%A7%AF%E5%88%86%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<p>文章简介</p>
<a id="more"></a>
<p>正文</p>
]]></content>
  </entry>
  <entry>
    <title>梯度下降-数学</title>
    <url>/2019/08/08/%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D-%E6%95%B0%E5%AD%A6/</url>
    <content><![CDATA[<p>文章简介</p>
<a id="more"></a>
<h3 id="2-常用数学知识"><a href="#2-常用数学知识" class="headerlink" title="(2) 常用数学知识"></a>(2) 常用数学知识</h3><ul>
<li><ol>
<li>导数/微分/偏微分和偏导数</li>
</ol>
</li>
<li><ol>
<li>梯度</li>
</ol>
</li>
<li><ol>
<li>梯度方向</li>
</ol>
</li>
<li><ol>
<li>下降</li>
</ol>
</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>概率论与线代基础</title>
    <url>/2019/08/08/%E6%A6%82%E7%8E%87%E8%AE%BA%E4%B8%8E%E7%BA%BF%E4%BB%A3%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<p>文章简介</p>
<a id="more"></a>
<h3 id="2-常用的数学名词"><a href="#2-常用的数学名词" class="headerlink" title="(2) 常用的数学名词"></a>(2) 常用的数学名词</h3><ul>
<li><ol>
<li>转置</li>
</ol>
</li>
<li><ol>
<li>逆</li>
</ol>
</li>
<li><ol>
<li>稀疏矩阵</li>
</ol>
</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>模型评估(函数)-数学</title>
    <url>/2019/08/08/%E6%A8%A1%E5%9E%8B%E8%AF%84%E4%BB%B7%E6%8C%87%E6%A0%87-%E5%87%BD%E6%95%B0-%E6%95%B0%E5%AD%A6/</url>
    <content><![CDATA[<p>文章简介</p>
<a id="more"></a>
<h3 id="1-评价指标"><a href="#1-评价指标" class="headerlink" title="(1) 评价指标"></a>(1) 评价指标</h3><p>模型的评价指标就是评估模型的好坏。听起来类似于损失函数。但它是一个区别于损失函数的独立的模块，虽然二者有共通之处。<br>在分类模型中，用正确率评估好坏。<br>而在回归模型中，用拟合度评估好坏。在当前的学习进度中可以可以使用r方也就是 r square 计算拟合度。 具体就是 1-(mse/方差)</p>
<h3 id="2-涉及的数学概念"><a href="#2-涉及的数学概念" class="headerlink" title="(2) 涉及的数学概念"></a>(2) 涉及的数学概念</h3><p>残差， 预测值和真实值的差。</p>
<p>r squre，展开来就会有 mse(均方误差), rmse(均方根误差), mae(平均绝对误差), r square(r方)</p>
<p>交叉熵</p>
]]></content>
  </entry>
  <entry>
    <title>微服务架构演进</title>
    <url>/2020/04/22/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E6%BC%94%E8%BF%9B/</url>
    <content><![CDATA[<p>文章简介</p>
<a id="more"></a>
<p>正文</p>
]]></content>
  </entry>
  <entry>
    <title>正则化</title>
    <url>/2019/08/09/%E6%AD%A3%E5%88%99%E5%8C%96/</url>
    <content><![CDATA[<p>文章简介</p>
<a id="more"></a>
<p>正则化用于防止模型过拟合。</p>
<p>过拟合直观上就是模型过多的学习了训练集上的特征，使得超线性方程能够覆盖每个数据点。<br>这通常是因为模型太复杂，学习到了无用的特征。模型的复杂度对应了它的参数分布的熵（也可以理解为参数的分布有序程度），熵大则复杂，熵小则简单。通过熵公式可知，降低熵可以通过减少参数，或通过降低参数的值来达到目的。<br>过拟合，模型在很小的区间上就会出现剧烈的抖动，在数学上表现为导数很大。而导数很大通常是因为系数很大，也就是模型的权重过大。权重过大也符合熵增的特点。<br>通常不会减少参数数量，因为模型学习的潜力也会下降。所以就通过降低参数值来降低复杂度， 这就是参数正则化。</p>
<p>正则化通过给损失函数(目标函数)增加一个正则项来防止过拟合。</p>
<p>正则项有两种， l1和l2</p>
<p>l1正则使用权重绝对值的和构造 (λ/2n)E(|w|), λ是正则化参数，是一个学习参数</p>
<p>l2又称为权重衰减，使用权重平方和构造, (λ/2n)E(w^2)</p>
<p>假设原始的损失函数C0，正则项为r，新的损失函数就是<br>C = C0 + r</p>
<p>梯度下降求收敛和优化模型的过程变化</p>
<p>回顾下模型的优化过程，每次预测结果出来，根据结果反推出一个权重增量d(w)， 如果结果小于真实值则让权重增加一点，如果结果偏大则让权重减小一点。</p>
<p>w = w - αd(w)，α是最初的学习率。</p>
<p>对于增量的求解的变化， 在鸢尾花中的例子里,预测值反推出模型，反推出的结果和已有的模型差值作为增量， 而到adaline中训练的方式从单个数据变成了一个训练集，并且产生了损失函数，损失函数是一个关于模型的函数，而损失函数的优化等价于模型的优化，使用梯度下降来优化损失函数。</p>
<p>梯度下降的原理是，在梯度方向上使权重变化一个极小的值，逐步使损失函数收敛。而梯度下降的优势是下降速度快。</p>
<p>在加入正则项之后，梯度下降的微分变成 d(C)/d(w) = d(C0)/d(w) + d(r)/d(w)</p>
<p>l2正则化损失函数的微分</p>
<p> = d(C0)/d(w) + (λ/n)w，λ作为超参，通常使用固定值，在训练过程中根据需要改变，就像学习率，在开始比较大，在结束时比较小，<br> 梯度下降就变成了 w-η(d(C0)/d(w) + (λ/n)w) = (1-(ηλ/n))w-ηd(C0)/d(w)， λ过大就导致一个梯度下降之后权重迅速下降趋近于0，模型复杂度迅速下降，而那些错误的特征权重会快速逼近0。</p>
<p> l1正则项因为符合拉普拉斯分布，最优值通常出现在坐标轴上，造成某些维度的权重为0， 产生权重的稀疏矩阵，降低复杂度，避免学习无用的特征防止过拟合。</p>
<p> l2正则项符合高斯分布，最后也是降低参数值防止过拟合。</p>
]]></content>
  </entry>
  <entry>
    <title>(1) android studio cmake</title>
    <url>/2019/07/26/android-native/1-android-studio-cmake/</url>
    <content><![CDATA[<p>android studio jni调用native的cmake脚本和代码示例。</p>
<a id="more"></a>
<p>core file CMakeLists.txt<br>path: application_module/CMakeLists.txt</p>
<h3 id="1-example"><a href="#1-example" class="headerlink" title="1. example"></a><strong>1. example</strong></h3><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># For more information about using CMake with Android Studio, read the</span></span><br><span class="line"><span class="comment"># documentation: https://d.android.com/studio/projects/add-native-code.html</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Sets the minimum version of CMake required to build the native library.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.4</span>.<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Creates and names a library, sets it as either STATIC</span></span><br><span class="line"><span class="comment"># or SHARED, and provides the relative paths to its source code.</span></span><br><span class="line"><span class="comment"># You can define multiple libraries, and CMake builds them for you.</span></span><br><span class="line"><span class="comment"># Gradle automatically packages shared libraries with your APK.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">add_library</span>( <span class="comment"># Sets the name of the library.</span></span><br><span class="line">             native-lib</span><br><span class="line"></span><br><span class="line">             <span class="comment"># Sets the library as a shared library.</span></span><br><span class="line">             SHARED</span><br><span class="line"></span><br><span class="line">             <span class="comment"># Provides a relative path to your source file(s).</span></span><br><span class="line">             src/main/cpp/native-lib.cpp</span><br><span class="line">             )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">add_library</span>( <span class="comment"># Sets the name of the library.</span></span><br><span class="line">             my-lib</span><br><span class="line"></span><br><span class="line">             <span class="comment"># Sets the library as a shared library.</span></span><br><span class="line">             SHARED</span><br><span class="line"></span><br><span class="line">             <span class="comment"># Provides a relative path to your source file(s).</span></span><br><span class="line">             src/main/cpp/my-lib.cpp</span><br><span class="line">             )</span><br><span class="line"></span><br><span class="line"><span class="comment"># Searches for a specified prebuilt library and stores the path as a</span></span><br><span class="line"><span class="comment"># variable. Because CMake includes system libraries in the search path by</span></span><br><span class="line"><span class="comment"># default, you only need to specify the name of the public NDK library</span></span><br><span class="line"><span class="comment"># you want to add. CMake verifies that the library exists before</span></span><br><span class="line"><span class="comment"># completing its build.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">find_library</span>( <span class="comment"># Sets the name of the path variable.</span></span><br><span class="line">              log-lib</span><br><span class="line"></span><br><span class="line">              <span class="comment"># Specifies the name of the NDK library that</span></span><br><span class="line">              <span class="comment"># you want CMake to locate.</span></span><br><span class="line">              log )</span><br><span class="line"></span><br><span class="line"><span class="comment"># Specifies libraries CMake should link to your target library. You</span></span><br><span class="line"><span class="comment"># can link multiple libraries, such as libraries you define in this</span></span><br><span class="line"><span class="comment"># build script, prebuilt third-party libraries, or system libraries.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">target_link_libraries</span>( <span class="comment"># Specifies the target library.</span></span><br><span class="line">                       native-lib</span><br><span class="line"></span><br><span class="line">                       <span class="comment"># Links the target library to the log library</span></span><br><span class="line">                       <span class="comment"># included in the NDK.</span></span><br><span class="line">                       <span class="variable">$&#123;log-lib&#125;</span> )</span><br></pre></td></tr></table></figure>
<p>multiple library for more than one class file.</p>
<h3 id="2-cpp-for-jni"><a href="#2-cpp-for-jni" class="headerlink" title="2. cpp for jni"></a><strong>2. cpp for jni</strong></h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;jni.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="string">"C"</span></span><br><span class="line">JNIEXPORT jstring JNICALL</span><br><span class="line">Java_com_example_username_helloworld_MainActivity_stringFromJNI(</span><br><span class="line">        JNIEnv *env,</span><br><span class="line">        jobject <span class="comment">/* this */</span>) &#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> hello = <span class="string">"Hello from C++"</span>;</span><br><span class="line">    <span class="keyword">return</span> env-&gt;NewStringUTF(hello.c_str());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>Java_com_example_username_helloworld_MainActivity_stringFromJNI</code><br><code>Java</code> means for jni<br><code>com_example_username_helloworld_MainActivity</code> is package name<br><code>stringFromJNI</code> is method name</p>
<h3 id="3-java-code"><a href="#3-java-code" class="headerlink" title="3. java code"></a><strong>3. java code</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.username.helloworld;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NativeHelper</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        <span class="comment">// (1)</span></span><br><span class="line">        System.loadLibrary(<span class="string">"my-lib"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// (2) </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">native</span> String <span class="title">getAppKey</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>(1)</code> load library<br><code>(2)</code> declare the native method, keep the method name same with cpp code</p>
]]></content>
      <categories>
        <category>Android native</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>native</tag>
        <tag>jni</tag>
        <tag>cmake</tag>
      </tags>
  </entry>
  <entry>
    <title>1 - gradle intall</title>
    <url>/2019/07/26/android-native/1-gradle-intall/</url>
    <content><![CDATA[<p>gradle编译工具的安装和环境变量配置。</p>
<a id="more"></a>
<h3 id="1-download-binary"><a href="#1-download-binary" class="headerlink" title="1. download binary"></a><strong>1. download binary</strong></h3><h3 id="2-unzip"><a href="#2-unzip" class="headerlink" title="2. unzip"></a><strong>2. unzip</strong></h3><h3 id="3-etc-profile"><a href="#3-etc-profile" class="headerlink" title="3. /etc/profile"></a><strong>3. /etc/profile</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GRADLE_HOME=...</span><br><span class="line">PATH=$PATH:$&#123;GRADLE_HOME&#125;</span><br><span class="line">export PATH</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Android native</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>gradle</tag>
      </tags>
  </entry>
  <entry>
    <title>(2) android develop environment</title>
    <url>/2019/07/26/android-native/2-android-develop-environment/</url>
    <content><![CDATA[<p>配置android开发环境。<br>sdk和adb命令行操作命令。</p>
<a id="more"></a>
<h3 id="1-jdk"><a href="#1-jdk" class="headerlink" title="1. jdk"></a><strong>1. jdk</strong></h3><p>global jdk environment</p>
<h3 id="2-sdk"><a href="#2-sdk" class="headerlink" title="2. sdk"></a><strong>2. sdk</strong></h3><p>android sdk tools<br>android sdk platform-tools<br>android sdk platform<br>android sdk build-tools<br>intel images<br>android sdk sources </p>
<h3 id="3-sdk-manager"><a href="#3-sdk-manager" class="headerlink" title="3. sdk manager"></a><strong>3. sdk manager</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:cd sdk/tools</span><br><span class="line">~:./android</span><br><span class="line">~:./emulator -avd Nexus_5 -qemu -m 2047 -enable-kvm</span><br></pre></td></tr></table></figure>
<h3 id="4-adb"><a href="#4-adb" class="headerlink" title="4. adb"></a><strong>4. adb</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:cd sdk/platform-tools</span><br><span class="line">~:sudo ./adb devices</span><br><span class="line">~:sudo ./adb kill-server</span><br><span class="line">~:sudo ./adb start-server</span><br></pre></td></tr></table></figure>
<h3 id="5-connect-to-emulator"><a href="#5-connect-to-emulator" class="headerlink" title="5. connect to emulator"></a><strong>5. connect to emulator</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:./adb -s emulator-5554 shell</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Android native</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>native</tag>
        <tag>adb shell</tag>
      </tags>
  </entry>
  <entry>
    <title>2 - gradle usage</title>
    <url>/2019/07/26/android-native/2-gradle-usage/</url>
    <content><![CDATA[<p>gradle 简单使用</p>
<a id="more"></a>
<h3 id="1-project-amp-task"><a href="#1-project-amp-task" class="headerlink" title="1. project &amp; task"></a><strong>1. project &amp; task</strong></h3><ul>
<li><h4 id="1-1-build-gradle"><a href="#1-1-build-gradle" class="headerlink" title="1.1 build.gradle"></a>1.1 build.gradle</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">task hello &#123;</span><br><span class="line">doLast &#123;</span><br><span class="line">    println &quot;hello&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:gradle -q hello</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="1-2-task-with-doLast"><a href="#1-2-task-with-doLast" class="headerlink" title="1.2 task with doLast"></a>1.2 task with doLast</h4><p>  (&lt;&lt; deprecated)</p>
<ul>
<li>包含doLast的任务只有在依赖或直接运行时才会执行</li>
<li>不包含doLast的任务每次执行gradle命令都会执行</li>
</ul>
</li>
</ul>
<h3 id="3-编译android-project"><a href="#3-编译android-project" class="headerlink" title="3. 编译android project"></a><strong>3. 编译android project</strong></h3>]]></content>
      <categories>
        <category>Android native</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>gradle</tag>
      </tags>
  </entry>
  <entry>
    <title>3 - avd error</title>
    <url>/2019/07/26/android-native/3-avd-error/</url>
    <content><![CDATA[<p>Android虚拟器常见启动错误和解决办法。</p>
<a id="more"></a>
<h3 id="1-启动闪退"><a href="#1-启动闪退" class="headerlink" title="1. 启动闪退"></a><strong>1. 启动闪退</strong></h3><p>信号139<br>降低虚拟机 image 版本</p>
<h3 id="2-启动黑屏"><a href="#2-启动黑屏" class="headerlink" title="2. 启动黑屏"></a><strong>2. 启动黑屏</strong></h3><p>使用了nexus 5x 5p,切换其他机型;</p>
]]></content>
      <categories>
        <category>Android native</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>avd</tag>
      </tags>
  </entry>
  <entry>
    <title>4 - gradle error</title>
    <url>/2019/07/26/android-native/4-gradle-error/</url>
    <content><![CDATA[<p>gradle常见错误和解决办法。</p>
<a id="more"></a>
<h3 id="1-can’t-create-parent-lock"><a href="#1-can’t-create-parent-lock" class="headerlink" title="1. can’t create parent lock"></a><strong>1. can’t create parent lock</strong></h3><p>gradle同步错误<br>无法创建文件锁，因为当前用户对本机gradle目录没有写权限，把gradle home目录配置到当前用户的写权限范围内。</p>
<h3 id="2-Unsupported-method"><a href="#2-Unsupported-method" class="headerlink" title="2. Unsupported method:"></a><strong>2. Unsupported method:</strong></h3><p>gradle同步错误<br>gradle 插件版本太高或者gradle版本太高。降低gradle一个大版本，并使用wapper的gradle。</p>
<h3 id="2-cpu-support-x86-armv7…"><a href="#2-cpu-support-x86-armv7…" class="headerlink" title="2. cpu support (x86, armv7…)"></a><strong>2. cpu support (x86, armv7…)</strong></h3><p>gradle 编译时使用了不同的指令集导致ndk应用兼容性错误。<br>build.gradle-&gt;productFlavors 配置了多个ndk可用的指令集环境， Build Variants -&gt; Build Variant 对相应的模块选择不同指令集，这里的指令集就来自于productFlavors的配置。productFlavors类似于 maven-&gt;profile。</p>
]]></content>
      <categories>
        <category>Android native</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>gradle</tag>
      </tags>
  </entry>
  <entry>
    <title>5 - hello-jni in studio</title>
    <url>/2019/07/26/android-native/5-hello-jni-in-studio/</url>
    <content><![CDATA[<p>Android studio 运行 hello-jni官方demo</p>
<a id="more"></a>
<h3 id="1-下载-ndk-示例代码"><a href="#1-下载-ndk-示例代码" class="headerlink" title="1. 下载 ndk 示例代码"></a><strong>1. 下载 ndk 示例代码</strong></h3><p>github 地址: <a href="https://github.com/googlesamples/android-ndk" target="_blank" rel="noopener">https://github.com/googlesamples/android-ndk</a></p>
<h3 id="2-打开第一项目-注意配置-配置项目的环境-jdk，-sdk，-ndk，以及cmake和ndk-build环境变量"><a href="#2-打开第一项目-注意配置-配置项目的环境-jdk，-sdk，-ndk，以及cmake和ndk-build环境变量" class="headerlink" title="2. 打开第一项目 注意配置 配置项目的环境 jdk， sdk， ndk，以及cmake和ndk-build环境变量"></a><strong>2. 打开第一项目 注意配置 配置项目的环境 jdk， sdk， ndk，以及cmake和ndk-build环境变量</strong></h3><p>cmake和ndk-build位于sdk目录</p>
<h3 id="3-配置虚拟机-avd"><a href="#3-配置虚拟机-avd" class="headerlink" title="3. 配置虚拟机( avd )"></a><strong>3. 配置虚拟机( avd )</strong></h3><p>正常运行</p>
<h3 id="4-配置build-gradle的阿里云仓库，gradle插件改为3-2-1"><a href="#4-配置build-gradle的阿里云仓库，gradle插件改为3-2-1" class="headerlink" title="4. 配置build.gradle的阿里云仓库，gradle插件改为3.2.1"></a><strong>4. 配置build.gradle的阿里云仓库，gradle插件改为3.2.1</strong></h3><h3 id="5-android-studio—-gt-build-variants-选择cpu指令集为x86"><a href="#5-android-studio—-gt-build-variants-选择cpu指令集为x86" class="headerlink" title="5. android studio—&gt;build variants 选择cpu指令集为x86"></a><strong>5. android studio—&gt;build variants 选择cpu指令集为x86</strong></h3><h3 id="6-同步gradle"><a href="#6-同步gradle" class="headerlink" title="6. 同步gradle"></a><strong>6. 同步gradle</strong></h3><p>Sync project with gradle files</p>
<h3 id="7-运行项目选择创建的虚拟机"><a href="#7-运行项目选择创建的虚拟机" class="headerlink" title="7. 运行项目选择创建的虚拟机"></a><strong>7. 运行项目选择创建的虚拟机</strong></h3>]]></content>
      <categories>
        <category>Android native</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>jni</tag>
        <tag>Android Studio</tag>
      </tags>
  </entry>
  <entry>
    <title>6 - hello-jni in termial</title>
    <url>/2019/07/26/android-native/6-hello-jni-in-termial/</url>
    <content><![CDATA[<p>shell编译hello-jni官方demo</p>
<a id="more"></a>
<h3 id="1-c-c-代码的编译可以使用make或cmake"><a href="#1-c-c-代码的编译可以使用make或cmake" class="headerlink" title="1. c/c++代码的编译可以使用make或cmake"></a><strong>1. c/c++代码的编译可以使用make或cmake</strong></h3><p>基于make的ndk-build+Android.mk是一种较原始的方式<br>而cmake就是当前版本支持的跨平台方式<br>gradle通过配置集成其中一个，使gradle可以编译c/c++代码</p>
<h3 id="2-build-gradle配置"><a href="#2-build-gradle配置" class="headerlink" title="2. build.gradle配置"></a><strong>2. build.gradle配置</strong></h3><p>gradle集成cmake配置免去了直接用cmake命令编译的过程</p>
<p>模块的gradle配置</p>
<ul>
<li><h4 id="2-1-default配置-可以指定cmake的指令集和其他参数"><a href="#2-1-default配置-可以指定cmake的指令集和其他参数" class="headerlink" title="2.1 default配置 可以指定cmake的指令集和其他参数"></a>2.1 default配置 可以指定cmake的指令集和其他参数</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">defaultConfig &#123;</span><br><span class="line">        ...</span><br><span class="line">        externalNativeBuild &#123;</span><br><span class="line">            cmake &#123;</span><br><span class="line">                abiFiters &apos;x86&apos;</span><br><span class="line">                cppFlags &apos;&apos;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-2-nativeBuild配置-指定cmake-的配置文件位置-CMakeLists-txt"><a href="#2-2-nativeBuild配置-指定cmake-的配置文件位置-CMakeLists-txt" class="headerlink" title="2.2 nativeBuild配置 指定cmake 的配置文件位置 CMakeLists.txt"></a>2.2 nativeBuild配置 指定cmake 的配置文件位置 CMakeLists.txt</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">externalNativeBuild &#123;</span><br><span class="line">cmake &#123;</span><br><span class="line">            version &apos;3.10.2&apos;</span><br><span class="line">            path &quot;src/main/cpp/CMakeLists.txt&quot;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="3-使用cmake命令编译"><a href="#3-使用cmake命令编译" class="headerlink" title="3. 使用cmake命令编译"></a><strong>3. 使用cmake命令编译</strong></h3>]]></content>
      <categories>
        <category>Android native</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>jni</tag>
      </tags>
  </entry>
  <entry>
    <title>7 - gradle repository mirror</title>
    <url>/2019/07/26/android-native/7-gradle-repository-mirror/</url>
    <content><![CDATA[<p>gradle配置maven源。</p>
<a id="more"></a>
<h3 id="1-对于当前项目"><a href="#1-对于当前项目" class="headerlink" title="1. 对于当前项目"></a><strong>1. 对于当前项目</strong></h3><ul>
<li><h4 id="1-1-build-gradle"><a href="#1-1-build-gradle" class="headerlink" title="1.1 build.gradle"></a>1.1 build.gradle</h4>  <figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">buildscript</span> &#123;</span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        maven &#123;</span><br><span class="line">            url <span class="string">'http://maven.aliyun.com/nexus/content/groups/public/'</span></span><br><span class="line">        &#125;</span><br><span class="line">        maven &#123;</span><br><span class="line">            url <span class="string">'http://maven.aliyun.com/nexus/content/repositories/jcenter'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">allprojects</span> &#123;</span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        maven &#123;</span><br><span class="line">            url <span class="string">'http://maven.aliyun.com/nexus/content/groups/public/'</span></span><br><span class="line">        &#125;</span><br><span class="line">        maven &#123;</span><br><span class="line">            url <span class="string">'http://maven.aliyun.com/nexus/content/repositories/jcenter'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="2-全局gradle"><a href="#2-全局gradle" class="headerlink" title="2. 全局gradle"></a><strong>2. 全局gradle</strong></h3><p><strong>~/.gradle/init.gradle</strong></p>
<pre><code><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">allprojects</span>&#123;</span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        <span class="keyword">def</span> REPOSITORY_URL = <span class="string">'http://maven.aliyun.com/nexus/content/groups/public/'</span></span><br><span class="line">        all &#123; ArtifactRepository repo -&gt;</span><br><span class="line">            <span class="keyword">if</span>(repo <span class="keyword">instanceof</span> MavenArtifactRepository)&#123;</span><br><span class="line">                <span class="keyword">def</span> url = repo.url.toString()</span><br><span class="line">                <span class="keyword">if</span> (url.startsWith(<span class="string">'https://repo1.maven.org/maven2'</span>) || url.startsWith(<span class="string">'https://jcenter.bintray.com/'</span>)) &#123;</span><br><span class="line">                    <span class="keyword">project</span>.logger.lifecycle <span class="string">"Repository $&#123;repo.url&#125; replaced by $REPOSITORY_URL."</span></span><br><span class="line">                    remove repo</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        maven &#123;</span><br><span class="line">            url REPOSITORY_URL</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</code></pre>]]></content>
      <categories>
        <category>Android native</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>gradle</tag>
      </tags>
  </entry>
  <entry>
    <title>8 - jni代码示例</title>
    <url>/2019/07/26/android-native/8-jni%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B/</url>
    <content><![CDATA[<p>jni工程demo。目录结构，代码，g++生成动态库文件，jni调用过程。</p>
<a id="more"></a>
<h3 id="1-项目结构"><a href="#1-项目结构" class="headerlink" title="1. 项目结构"></a><strong>1. 项目结构</strong></h3><p>项目根目录<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:tree</span><br><span class="line">.</span><br><span class="line">├── bin</span><br><span class="line">│   └── classes</span><br><span class="line">└── src</span><br><span class="line">    ├── cpp</span><br><span class="line">    │   ├── hello-jni.cpp</span><br><span class="line">    └── java</span><br><span class="line">        └── com</span><br><span class="line">            └── example</span><br><span class="line">                └── HelloJni.java</span><br></pre></td></tr></table></figure></p>
<h3 id="2-源代码"><a href="#2-源代码" class="headerlink" title="2. 源代码"></a><strong>2. 源代码</strong></h3><ul>
<li><h4 id="2-1-HelloJni-java"><a href="#2-1-HelloJni-java" class="headerlink" title="2.1 HelloJni.java"></a>2.1 HelloJni.java</h4>  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloJni</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span></span>&#123;</span><br><span class="line">        HelloJni obj = <span class="keyword">new</span> HelloJni();</span><br><span class="line">        System.out.println(obj.getStr());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">native</span> String <span class="title">getStr</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.loadLibrary(<span class="string">"hello-jni"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-2-hello-jni-cpp"><a href="#2-2-hello-jni-cpp" class="headerlink" title="2.2 hello-jni.cpp"></a>2.2 hello-jni.cpp</h4>  <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;jni.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;com_example_HelloJni.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">jstring</span><br><span class="line">Java_com_example_HelloJni_getStr(JNIEnv * env, jobject thiz)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="keyword">return</span> env-&gt;NewStringUTF(<span class="string">"Hello from JNI !"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  以上代码是支持c++重载的写法，该写法需要包含生成的头文件。如果使用c的写法，函数不支持重载，可以不包含生成的头文件（省略了生成头文件的过程）。</p>
  <!-- todo -->
<p>  注意：不包含头文件的写法</p>
</li>
<li><h4 id="2-3-不支持重载的写法"><a href="#2-3-不支持重载的写法" class="headerlink" title="2.3 不支持重载的写法"></a>2.3 不支持重载的写法</h4> <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;jni.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;com_example_HelloJni.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="string">"C"</span>&#123;</span><br><span class="line">    jstring</span><br><span class="line">    Java_com_example_HelloJni_getStr(JNIEnv * env, jobject thiz)</span><br><span class="line">    &#123;</span><br><span class="line">            <span class="keyword">return</span> env-&gt;NewStringUTF(<span class="string">"Hello from JNI !"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="3-编译java文件"><a href="#3-编译java文件" class="headerlink" title="3. 编译java文件"></a><strong>3. 编译java文件</strong></h3><ul>
<li><h4 id="3-1-项目根目录"><a href="#3-1-项目根目录" class="headerlink" title="3.1 项目根目录"></a>3.1 项目根目录</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:javac -d bin/classes src/com/example/HelloJni.java</span><br></pre></td></tr></table></figure>
<p>  在 bin/classes目录下生成 com.example.HelloJni.class</p>
</li>
</ul>
<h3 id="4-生成头文件"><a href="#4-生成头文件" class="headerlink" title="4. 生成头文件"></a><strong>4. 生成头文件</strong></h3><ul>
<li><h4 id="4-1-项目根目录"><a href="#4-1-项目根目录" class="headerlink" title="4.1 项目根目录"></a>4.1 项目根目录</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:javah -d bin/includes -classpath bin/classes com.example.HelloJni</span><br></pre></td></tr></table></figure>
<p>  生成头文件　bin/includes/com_example_HelloJni.h</p>
</li>
</ul>
<h3 id="5-生成库文件"><a href="#5-生成库文件" class="headerlink" title="5. 生成库文件"></a><strong>5. 生成库文件</strong></h3><ul>
<li><h4 id="5-1-项目根目录"><a href="#5-1-项目根目录" class="headerlink" title="5.1 项目根目录"></a>5.1 项目根目录</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:g++ src/cpp/hello-jni.cpp -fPIC -I /usr/local/lib/jdk1.8.0_201/include -I /usr/local/lib/jdk1.8.0_201/include/linux -I &lt;项目根目录&gt;/bin/lib/ -shared -o bin/lib/libhello-jni.so</span><br></pre></td></tr></table></figure>
<p>  生成库文件　bin/lib/libhello-jni.so</p>
</li>
</ul>
<h3 id="6-执行main方法"><a href="#6-执行main方法" class="headerlink" title="6. 执行main方法"></a><strong>6. 执行main方法</strong></h3><ul>
<li><h4 id="6-1-lt-项目根目录-gt-bin-classes"><a href="#6-1-lt-项目根目录-gt-bin-classes" class="headerlink" title="6.1 &lt;项目根目录&gt;/bin/classes"></a>6.1 &lt;项目根目录&gt;/bin/classes</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:java -Djava.library.path=&lt;项目根目录&gt;/bin/lib com.example.HelloJni</span><br><span class="line">Hello from JNI !</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <categories>
        <category>Android native</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>create-react-app with ant design</title>
    <url>/2019/07/31/ant-design/create-react-app-with-ant-design/</url>
    <content><![CDATA[<p>为react项目引入ant design。<br>ant design是一个组件库，提供了很多统一风格的组件。</p>
<a id="more"></a>
<p>(1) init project</p>
<p>create-react-app mydemo<br>npm install antd —save-dev</p>
<p>(2) install <code>react-app-rewired</code></p>
<p><code>create-react-app</code> has many configs preset, like webpack.config.js.<br><code>react-app-rewired</code> lead you to customize these configs.<br>change scripts in <code>package.json</code>firstly.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;scripts&quot;: &#123;</span><br><span class="line">-   &quot;start&quot;: &quot;react-scripts start&quot;,</span><br><span class="line">+   &quot;start&quot;: &quot;react-app-rewired start&quot;,</span><br><span class="line">-   &quot;build&quot;: &quot;react-scripts build&quot;,</span><br><span class="line">+   &quot;build&quot;: &quot;react-app-rewired build&quot;,</span><br><span class="line">-   &quot;test&quot;: &quot;react-scripts test --env=jsdom&quot;,</span><br><span class="line">+   &quot;test&quot;: &quot;react-app-rewired test --env=jsdom&quot;,</span><br><span class="line">+   &quot;eject&quot;: &quot;react-app-rewired eject&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>then make new file named  <code>config-overrides.js</code> at the root of the project.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">module.exports = function override(config, env) &#123;</span><br><span class="line">  return config;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p>(3)  install <code>babel-plugin-import</code></p>
<p>A babel plugin for lazy loading components and styles.<br><code>import {Button} from &#39;antd&#39;;</code> this import will load all modules in antd.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import Button from &apos;antd/lib/button&apos;;</span><br><span class="line">import &apos;antd/lib/button/style&apos;; // or antd/lib/button/style/css</span><br></pre></td></tr></table></figure>
<p>Above is a lazy loading.<br>You have to make some configs in <code>config-overrides.js</code> then <code>import {Button} from &#39;antd&#39;;</code> becomes lazy loading.<br>code in <code>config-overrides.js</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">+ const &#123; injectBabelPlugin &#125; = require(&apos;react-app-rewired&apos;);</span><br><span class="line"></span><br><span class="line">  module.exports = function override(config, env) &#123;</span><br><span class="line">+   config = injectBabelPlugin([&apos;import&apos;, &#123; libraryName: &apos;antd&apos;, style: &apos;css&apos; &#125;], config);</span><br><span class="line">    return config;</span><br><span class="line">  &#125;;</span><br></pre></td></tr></table></figure></p>
<p>Properties  <code>libraryName</code> and <code>style</code> lead it to load the corresponding css when loding a component.<br>Property <code>style</code> will import some global styles, if you don’t need that, remove <code>style</code>. Then <code>import &#39;antd/dist/antd.css&#39;;</code> to override the global.</p>
<p>(4) customize themes</p>
<p>Antd used less for theme files, so a less loader is in need.<br>Here we install a less plugin for <code>react-app-rewired</code> instead of webpack.<br><code>npm install react-app-rewire-less --save-dev</code><br>Then modify <code>config-overrides.js</code>.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">  const &#123; injectBabelPlugin &#125; = require(&apos;react-app-rewired&apos;);</span><br><span class="line">+ const rewireLess = require(&apos;react-app-rewire-less&apos;);</span><br><span class="line"></span><br><span class="line">  module.exports = function override(config, env) &#123;</span><br><span class="line">-   config = injectBabelPlugin([&apos;import&apos;, &#123; libraryName: &apos;antd&apos;, style: &apos;css&apos; &#125;], config);</span><br><span class="line">+   config = injectBabelPlugin([&apos;import&apos;, &#123; libraryName: &apos;antd&apos;, style: true &#125;], config);</span><br><span class="line">+   config = rewireLess.withLoaderOptions(&#123;</span><br><span class="line">+         modifyVars: &#123; &quot;@primary-color&quot;: &quot;#1DA57A&quot; &#125;,</span><br><span class="line">+     &#125;)(config, env);</span><br><span class="line">    return config;</span><br><span class="line">  &#125;;</span><br></pre></td></tr></table></figure>
<p>Configs abobe make  code like “import “./style.less”” effective in js files. Value of propery <code>style</code> changed to <code>true</code>，this setting tell the loader to load less. And here use the api <code>modifyVars</code> of less to override the <code>primary-color</code> of ant design.</p>
]]></content>
      <categories>
        <category>ant design</category>
      </categories>
      <tags>
        <tag>ant design</tag>
        <tag>nodejs</tag>
        <tag>react</tag>
      </tags>
  </entry>
  <entry>
    <title>theme customize problem</title>
    <url>/2019/07/31/ant-design/theme-customize-problem/</url>
    <content><![CDATA[<p>ant design官方教程里换主题的代码api过时，需要使用新的api。</p>
<a id="more"></a>
<p>One API in <code>react-app-rewire-less</code> has been changed in the last version.<br>It now becomes to <code>withLoaderOptions(Object): function(config,env)</code>.<br><code>config-overrides.js</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">const &#123; injectBabelPlugin &#125; = require(&apos;react-app-rewired&apos;);</span><br><span class="line">const rewireLess = require(&apos;react-app-rewire-less&apos;);</span><br><span class="line"></span><br><span class="line"> module.exports = function override(config, env) &#123;</span><br><span class="line">    config = injectBabelPlugin([&apos;import&apos;, &#123; libraryName: &apos;antd&apos;, style: &apos;css&apos; &#125;], config);</span><br><span class="line">    config = injectBabelPlugin([&apos;import&apos;, &#123; libraryName: &apos;antd&apos;, style: true &#125;], config);</span><br><span class="line">    config = rewireLess.withLoaderOptions(&#123;</span><br><span class="line">          modifyVars: &#123; &quot;@primary-color&quot;: &quot;#1DA57A&quot; &#125;,</span><br><span class="line">      &#125;)(config, env);</span><br><span class="line">   return config;</span><br><span class="line"> &#125;;</span><br></pre></td></tr></table></figure></p>
<p>the old API is<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">config = rewireLess(config, env, &#123; </span><br><span class="line">       modifyVars: &#123; &apos;@primary-color&apos;: &apos;#1DA57A&apos;, &#125;,</span><br><span class="line">      &#125;);</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>ant design</category>
      </categories>
      <tags>
        <tag>ant design</tag>
        <tag>nodejs</tag>
        <tag>react</tag>
      </tags>
  </entry>
  <entry>
    <title>(1) Transaction data structure</title>
    <url>/2019/07/24/bitcoin/(1)%20transaction%20data%20structure/</url>
    <content><![CDATA[<p>比特币-交易的数据结构</p>
<a id="more"></a>
<h2 id="Transaction-data-structure"><a href="#Transaction-data-structure" class="headerlink" title="Transaction data structure"></a><strong>Transaction data structure</strong></h2><p>tx_a hash code is tx_a_hash<br>tx_b hash code is tx_b_hash </p>
<ul>
<li><h4 id="1-tx-a"><a href="#1-tx-a" class="headerlink" title="1. tx_a"></a>1. tx_a</h4><p>  tx_a_hash </p>
  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Input:</span><br><span class="line">Previous tx: &lt;previous_tx_hash&gt;</span><br><span class="line">Index: 0</span><br><span class="line">scriptSig: &lt;previous_tx_hash_ecdsa&gt; &lt;user_a_wallet_pub_key&gt;</span><br><span class="line"></span><br><span class="line">Output:</span><br><span class="line">Value: 5000000000</span><br><span class="line">scriptPubKey: OP_DUP OP_HASH160 &lt;user_b_wallet_pub_key_hash&gt; OP_EQUALVERIFY OP_CHECKSIG</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-tx-b"><a href="#2-tx-b" class="headerlink" title="2. tx_b"></a>2. tx_b</h4><p>  tx_b_hash </p>
  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Input:</span><br><span class="line">Previous tx: &lt;tx_a_hash&gt;</span><br><span class="line">Index: 0</span><br><span class="line">scriptSig: &lt;tx_a_hash_ecdsa&gt; &lt;user_b_wallet_pub_key&gt;</span><br><span class="line"></span><br><span class="line">Output:</span><br><span class="line">Value: 5000000000</span><br><span class="line">scriptPubKey: OP_DUP OP_HASH160 &lt;user_c_wallet_pub_key_hash&gt; OP_EQUALVERIFY OP_CHECKSIG</span><br></pre></td></tr></table></figure>
<p>  now run tx_b input script </p>
  <figure class="highlight st"><table><tr><td class="code"><pre><span class="line">:put &lt;tx_a_hash_ecdsa&gt;</span><br><span class="line">:put &lt;user_b_wallet_pub_key&gt;</span><br><span class="line">:skip to tx_a and run tx_a output script</span><br><span class="line">:<span class="type">OP_DUP</span> -&gt; cp top -&gt;put &lt;user_b_wallet_pub_key&gt;</span><br><span class="line">:<span class="type">OP_HASH160</span> -&gt; pop top &lt;user_b_wallet_pub_key&gt; and hash-&gt;put &lt;user_b_wallet_pub_key_hash<span class="string">'&gt;</span></span><br><span class="line"><span class="string">:put &lt;user_b_wallet_pub_key_hash&gt;</span></span><br><span class="line"><span class="string">:OP_EQUALVERIFY -&gt; pop top 1 and top 2 and compare -&gt; compare(&lt;user_b_wallet_pub_key_hash'</span>&gt;,&lt;user_b_wallet_pub_key_hash&gt;) if <span class="keyword">true</span> then proceed</span><br><span class="line">:<span class="type">OP_CHECKSIG</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <categories>
        <category>bitcoin</category>
      </categories>
      <tags>
        <tag>bitcoin</tag>
        <tag>数字货币</tag>
      </tags>
  </entry>
  <entry>
    <title>(10) sequence and lock time</title>
    <url>/2019/07/24/bitcoin/(10)%20sequence%20and%20lock%20time/</url>
    <content><![CDATA[<p>区块数据结构中的序列号和时间戳的作用</p>
<a id="more"></a>
<h2 id="sequence-and-lock-time"><a href="#sequence-and-lock-time" class="headerlink" title="sequence and lock time"></a><strong>sequence and lock time</strong></h2><p>sequence and lock_time determine the transaction will be final or non-final.<br><strong>Note</strong>: Bitcoin doesn’t support non-final transaction in the newes verison. </p>
<p>The sequence is a number between 0x00000000 and 0xffffffff. </p>
<ul>
<li><h4 id="1-sequnce-number"><a href="#1-sequnce-number" class="headerlink" title="1. sequnce number"></a>1. sequnce number</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">If it is 0xffffffff, the transaction is final state.0xffffffff will ignore lock_time.</span><br><span class="line">If not, the tranxaction is non-final state.</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-lock-time"><a href="#2-lock-time" class="headerlink" title="2. lock time"></a>2. lock time</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">If lock_time=0, the transaction is final state.0 will ignore the sequence number.</span><br><span class="line">If not, the transaction is non-final state.</span><br></pre></td></tr></table></figure>
<p>  New transaction in the future can not use the utxo from non-final transactions.<br>  A non-final transaction could be change if you want to.<br>  For example, you create a transaciton who’s lock time is 6 months later because you want this transaciton to become effective at 6 months later. During the 6 month, you could change the transaction content if you want.<br>  And the new transaciton with new sequence number replace the old version. The old version will be expired.</p>
</li>
</ul>
]]></content>
      <categories>
        <category>bitcoin</category>
      </categories>
      <tags>
        <tag>bitcoin</tag>
        <tag>数字货币</tag>
      </tags>
  </entry>
  <entry>
    <title>(11) Code (1) - install bitcoin</title>
    <url>/2019/07/24/bitcoin/(11)%20Code%20(1)%20-%20install%20bitcoin/</url>
    <content><![CDATA[<p>区块链源码编译安装</p>
<a id="more"></a>
<h2 id="Code-1-install-bitcoin"><a href="#Code-1-install-bitcoin" class="headerlink" title="Code (1) - install bitcoin"></a><strong>Code (1) - install bitcoin</strong></h2><h3 id="1-runtime-environment"><a href="#1-runtime-environment" class="headerlink" title="1. runtime environment"></a><strong>1. runtime environment</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo apt-get install build-essential libtool autotools-dev autoconf automake libssl-dev libboost-all-dev libdb-dev libdb++-dev pkg-config libevent-dev git-core</span><br></pre></td></tr></table></figure>
<h3 id="2-clone-from-git"><a href="#2-clone-from-git" class="headerlink" title="2. clone from git"></a><strong>2. clone from git</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line">### **3.  compile and install**</span><br></pre></td></tr></table></figure>
<p>~:cd bitcoin<br>~:./autogen.sh</p>
<p>~:./configure —without-gui</p>
<h1 id="configure-error-Found-Berkeley-DB-other-than-4-8-required-for-portable-wallets"><a href="#configure-error-Found-Berkeley-DB-other-than-4-8-required-for-portable-wallets" class="headerlink" title="configure: error: Found Berkeley DB other than 4.8, required for portable wallets"></a>configure: error: Found Berkeley DB other than 4.8, required for portable wallets</h1><h1 id="if-you-meet-this-error-use-the-following-command"><a href="#if-you-meet-this-error-use-the-following-command" class="headerlink" title="if you meet this error use the following command"></a>if you meet this error use the following command</h1><p>~:./configure —without-gui —disable-wallet</p>
<p>~:make -j<br>~:make install<br>```</p>
]]></content>
      <categories>
        <category>bitcoin</category>
      </categories>
      <tags>
        <tag>bitcoin</tag>
        <tag>数字货币</tag>
      </tags>
  </entry>
  <entry>
    <title>(12) Usage - rpc</title>
    <url>/2019/07/24/bitcoin/(12)%20Usage%20-%20rpc/</url>
    <content><![CDATA[<p>区块链网络的 rpc 调用</p>
<a id="more"></a>
<h2 id="Usage-rpc"><a href="#Usage-rpc" class="headerlink" title="Usage - rpc"></a><strong>Usage - rpc</strong></h2><h3 id="1-start-service"><a href="#1-start-service" class="headerlink" title="1. start service"></a><strong>1. start service</strong></h3><p>A node could start with by <code>bitcoind</code><br>There are some configs of this command.<br>You could set this commad through <code>bitcoind -server=1</code>.<br>Or <code>bitcoind -datadir=&lt;directory_path&gt;</code> or <code>bitcoind -conf=&lt;file_path&gt;</code> to specify config file. </p>
<ul>
<li><h4 id="1-1-bitcoin-conf-example"><a href="#1-1-bitcoin-conf-example" class="headerlink" title="1.1 bitcoin.conf example"></a>1.1 bitcoin.conf example</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># testnet-box functionality</span><br><span class="line">regtest=1</span><br><span class="line">dnsseed=0</span><br><span class="line">upnp=0</span><br><span class="line"></span><br><span class="line"># don&apos;t listen on a port, just connect to node 1</span><br><span class="line">listen=0</span><br><span class="line">connect=127.0.0.1:19000</span><br><span class="line"></span><br><span class="line"># listen on different ports than default testnet</span><br><span class="line">port=19010</span><br><span class="line">rpcport=19011</span><br><span class="line"></span><br><span class="line"># always run a server, even with bitcoin-qt</span><br><span class="line">server=1</span><br><span class="line"></span><br><span class="line"># enable SSL for RPC server</span><br><span class="line">#rpcssl=1</span><br><span class="line"></span><br><span class="line">rpcallowip=0.0.0.0/0</span><br><span class="line"></span><br><span class="line">rpcuser=admin2</span><br><span class="line">rpcpassword=123</span><br></pre></td></tr></table></figure>
<p>  <code>listen</code> default 1;0 don’t accept p2p connections from outside. 1 accept.<br>  <code>connect</code> only connect specified IP:port<br>  <code>port</code> the port to listen p2p connections from outside.<br>  <code>rpcport</code> the port to listen rpc connection<br>  <code>server</code> accept command and rpc command or not<br>  <code>rpcuser, rpcpassword</code> rpc user info<br>  <code>testnet</code> use test chain; 0 or 1<br>  <code>regtest</code> Enter regression test mode, which uses a special chain in which blocks can be solved instantly. This is intended for regression testing tools and app development.<br>  <code>dnsseed</code> Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect used)<br>  <code>rpcallowip=0.0.0.0/0</code> Allow JSON-RPC connections from specified source.    </p>
</li>
</ul>
<h3 id="2-command-on-local-and-rpc"><a href="#2-command-on-local-and-rpc" class="headerlink" title="2. command on local and rpc"></a><strong>2. command on local and rpc</strong></h3><p>create new transaction </p>
<ul>
<li><h4 id="2-1-bitcoin-cli"><a href="#2-1-bitcoin-cli" class="headerlink" title="2.1 bitcoin-cli"></a>2.1 bitcoin-cli</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:bitcoin-cli -conf=/home/user/bitcoin.conf createrawtransaciton &apos;[&#123;&quot;txid&quot;:&quot;xxx&quot;, &quot;vout&quot;:1&#125;]&apos; &apos;&#123;&quot;address1&quot;:10.00, &quot;address2&quot;:4.99999&#125;&apos;</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-2-bitcoin-cli"><a href="#2-2-bitcoin-cli" class="headerlink" title="2.2 bitcoin-cli"></a>2.2 bitcoin-cli</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:bitcoin-cli -datadir=/home/user/bitcoin1 createrawtransaciton &apos;[&#123;&quot;txid&quot;:&quot;xxx&quot;, &quot;vout&quot;:1&#125;]&apos; &apos;&#123;&quot;address1&quot;:10.00, &quot;address2&quot;:4.99999&#125;&apos;</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-3-curl-rpc"><a href="#2-3-curl-rpc" class="headerlink" title="2.3 curl rpc"></a>2.3 curl rpc</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:curl --user myusername --data-binary &apos;&#123;&quot;jsonrpc&quot;: &quot;1.0&quot;, &quot;id&quot;:&quot;curltest&quot;, &quot;method&quot;: &quot;createrawtransaction&quot;, &quot;params&quot;: [&quot;[&#123;\&quot;txid\&quot;:\&quot;myid\&quot;,\&quot;vout\&quot;:0&#125;]&quot;, &quot;&#123;\&quot;data\&quot;:\&quot;00010203\&quot;&#125;&quot;] &#125;&apos; -H &apos;content-type: text/plain;&apos; http://127.0.0.1:19011/</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>bitcoin</category>
      </categories>
      <tags>
        <tag>bitcoin</tag>
        <tag>数字货币</tag>
        <tag>RPC</tag>
      </tags>
  </entry>
  <entry>
    <title>ant</title>
    <url>/2019/07/26/build-tools/ant/</url>
    <content><![CDATA[<p>Ant的安装配置和使用。</p>
<a id="more"></a>
<h3 id="1-install"><a href="#1-install" class="headerlink" title="1. install"></a><strong>1. install</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:tar xzvf apache-ant-1.10.1-bin.tar.gz -C /usr/local/bin</span><br></pre></td></tr></table></figure>
<h3 id="2-enviroment"><a href="#2-enviroment" class="headerlink" title="2. enviroment"></a><strong>2. enviroment</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># apache ant</span><br><span class="line">ANT_HOME=/usr/local/bin/apache-ant-1.10.1</span><br><span class="line">PATH=$PATH:$ANT_HOME/bin/</span><br><span class="line">export PATH</span><br></pre></td></tr></table></figure>
<h3 id="3-usage"><a href="#3-usage" class="headerlink" title="3. usage"></a><strong>3. usage</strong></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">Build file for Time Expression application from </span></span><br><span class="line"><span class="comment">Rapid Java Development book.</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">name</span>=<span class="string">"My_project"</span> <span class="attr">basedir</span>=<span class="string">"."</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"appname"</span> <span class="attr">value</span>=<span class="string">"$&#123;ant.project.name&#125;"</span>/&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"env"</span> <span class="attr">value</span>=<span class="string">"local"</span>/&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"java.home"</span> <span class="attr">value</span>=<span class="string">"$&#123;env.JAVA_HOME&#125;"</span>/&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"ant.home"</span> <span class="attr">value</span>=<span class="string">"$&#123;env.ANT_HOME&#125;"</span>/&gt;</span>  </span><br><span class="line">  <span class="comment">&lt;!-- load properties file --&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">file</span>=<span class="string">"local.properties"</span>/&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"lib.dir"</span> <span class="attr">value</span>=<span class="string">"lib"</span>/&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">path</span> <span class="attr">id</span>=<span class="string">"master-classpath"</span> <span class="attr">description</span>=<span class="string">"Master CLASSPATH for this script"</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">fileset</span> <span class="attr">dir</span>=<span class="string">"$&#123;lib.dir&#125;"</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">include</span> <span class="attr">name</span>=<span class="string">"*.jar"</span>/&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">fileset</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">path</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"clean"</span> <span class="attr">description</span>=<span class="string">"Deletes files from WAR directory"</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">failonerror</span>=<span class="string">"false"</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">fileset</span> <span class="attr">dir</span>=<span class="string">"$&#123;war.dir&#125;"</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">name</span>=<span class="string">"**/*.*"</span>/&gt;</span> </span><br><span class="line">      <span class="tag">&lt;/<span class="name">fileset</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">failonerror</span>=<span class="string">"false"</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">fileset</span> <span class="attr">dir</span>=<span class="string">"$&#123;java.dir&#125;"</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">name</span>=<span class="string">"**/*.scc"</span>/&gt;</span> </span><br><span class="line">      <span class="tag">&lt;/<span class="name">fileset</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">failonerror</span>=<span class="string">"false"</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">fileset</span> <span class="attr">dir</span>=<span class="string">"$&#123;dist.dir&#125;"</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">name</span>=<span class="string">"**/*"</span>/&gt;</span> </span><br><span class="line">      <span class="tag">&lt;/<span class="name">fileset</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">fileset</span> <span class="attr">dir</span>=<span class="string">"$&#123;class.dir&#125;"</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">name</span>=<span class="string">"**/*"</span>/&gt;</span> </span><br><span class="line">      <span class="tag">&lt;/<span class="name">fileset</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">target</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"init"</span> <span class="attr">description</span>=<span class="string">"Setup for build script"</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">mkdir</span> <span class="attr">dir</span>=<span class="string">"$&#123;conf.dir&#125;"</span>/&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">mkdir</span> <span class="attr">dir</span>=<span class="string">"$&#123;web.dir&#125;"</span>/&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;/<span class="name">target</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"compile"</span> <span class="attr">depends</span>=<span class="string">"init"</span> <span class="attr">description</span>=<span class="string">"Compiles .java files to WAR directory"</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">javac</span> <span class="attr">encoding</span>=<span class="string">"GBK"</span> <span class="attr">destdir</span>=<span class="string">"$&#123;class.dir&#125;"</span> <span class="attr">debug</span>=<span class="string">"true"</span> <span class="attr">failonerror</span>=<span class="string">"true"</span> <span class="attr">fork</span>=<span class="string">"true"</span> <span class="attr">memoryInitialSize</span>=<span class="string">"256m"</span> <span class="attr">memoryMaximumSize</span>=<span class="string">"1068m"</span> <span class="attr">includeantruntime</span>=<span class="string">"on"</span> <span class="attr">classpathref</span>=<span class="string">"master-classpath"</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">src</span> <span class="attr">path</span>=<span class="string">"$&#123;java.dir&#125;"</span>/&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">src</span> <span class="attr">path</span>=<span class="string">"$&#123;java_other.dir&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">javac</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">target</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"jar"</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">echo</span>&gt;</span>Archiving the base classes<span class="tag">&lt;/<span class="name">echo</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">tstamp</span> <span class="attr">prefix</span>=<span class="string">"update."</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">format</span> <span class="attr">property</span>=<span class="string">"TimeSign"</span> <span class="attr">pattern</span>=<span class="string">"yyyy-MM-dd HH.mm.ss"</span>/&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">tstamp</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">jar</span> <span class="attr">jarfile</span>=<span class="string">"$&#123;lib.dir&#125;/1.jar"</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">fileset</span> <span class="attr">dir</span>=<span class="string">"$&#123;class.dir&#125;"</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">name</span>=<span class="string">"**/*.class"</span>/&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">exclude</span> <span class="attr">name</span>=<span class="string">"**/*.scc"</span>/&gt;</span> </span><br><span class="line">      <span class="tag">&lt;/<span class="name">fileset</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">jar</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">target</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"dist"</span> <span class="attr">depends</span>=<span class="string">"init"</span> <span class="attr">description</span>=<span class="string">"Copies web related files to WAR directory"</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">copy</span> <span class="attr">includeEmptyDirs</span>=<span class="string">"false"</span> <span class="attr">todir</span>=<span class="string">"$&#123;dist.dir&#125;"</span> <span class="attr">encoding</span>=<span class="string">"utf-8"</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">fileset</span> <span class="attr">dir</span>=<span class="string">"$&#123;web.dir&#125;"</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">name</span>=<span class="string">"**/*"</span>/&gt;</span> </span><br><span class="line">      <span class="tag">&lt;/<span class="name">fileset</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">copy</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">copy</span> <span class="attr">encoding</span>=<span class="string">"utf-8"</span> <span class="attr">includeEmptyDirs</span>=<span class="string">"false"</span> <span class="attr">todir</span>=<span class="string">"$&#123;dist.dir&#125;"</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">fileset</span> <span class="attr">dir</span>=<span class="string">"$&#123;build.dir&#125;"</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">name</span>=<span class="string">"**/*"</span>/&gt;</span> </span><br><span class="line">      <span class="tag">&lt;/<span class="name">fileset</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">copy</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">target</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"junitswing"</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">java</span> <span class="attr">fork</span>=<span class="string">"true"</span> <span class="attr">classpathref</span>=<span class="string">"master-classpath"</span> <span class="attr">classname</span>=<span class="string">"junit.swingui.TestRunner"</span>/&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">target</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="4-command"><a href="#4-command" class="headerlink" title="4. command"></a><strong>4. command</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ant clean</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ant clean compile</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ant -f build2.xml clean</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>构建工具</category>
      </categories>
      <tags>
        <tag>构建工具</tag>
        <tag>Ant</tag>
      </tags>
  </entry>
  <entry>
    <title>(13) Code (2) - private chain</title>
    <url>/2019/07/24/bitcoin/(13)%20Code%20(2)%20-%20private%20chain/</url>
    <content><![CDATA[<p>创建私链</p>
<a id="more"></a>
<h2 id="Code-2-private-chain"><a href="#Code-2-private-chain" class="headerlink" title="Code (2) - private chain"></a><strong>Code (2) - private chain</strong></h2><p>The most concise way to create private chain is that change the config parameters of the core code.<br>You can see these config parameters in <code>chainparams.cpp</code>. </p>
<p>Now we start to create a private chain. </p>
<h3 id="1-modify-the-genesis-block"><a href="#1-modify-the-genesis-block" class="headerlink" title="1. modify the genesis block"></a><strong>1. modify the genesis block</strong></h3><h4 id="1-1-modify-the-coinbase-info-of-genesis-block"><a href="#1-1-modify-the-coinbase-info-of-genesis-block" class="headerlink" title="1.1 modify the coinbase info of genesis block"></a><strong>1.1 modify the coinbase info of genesis block</strong></h4><ul>
<li><h4 id="1-1-1-The-original-code"><a href="#1-1-1-The-original-code" class="headerlink" title="1.1.1 The original code"></a>1.1.1 The original code</h4><p>  <code>CreateGenesisBlock</code> to create genesis block. </p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">static CBlock CreateGenesisBlock(uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount&amp; genesisReward)</span><br><span class="line">&#123;</span><br><span class="line">    const char* pszTimestamp = &quot;The Times 03/Jan/2009 Chancellor on brink of second bailout for banks&quot;;</span><br><span class="line">    const CScript genesisOutputScript = CScript() &lt;&lt; ParseHex(&quot;04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f&quot;) &lt;&lt; OP_CHECKSIG;</span><br><span class="line">    return CreateGenesisBlock(pszTimestamp, genesisOutputScript, nTime, nNonce, nBits, nVersion, genesisReward);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><h5 id="1-1-2-the-places-need-to-modify"><a href="#1-1-2-the-places-need-to-modify" class="headerlink" title="1.1.2 the places need to modify"></a>1.1.2 the places need to modify</h5><ol>
<li><p>the code of create genesis block</p>
<p> <code>genesis = CreateGenesisBlock(1231006505, 2083236893, 0x1d00ffff, 1, 50 * COIN);</code><br> 1231006505 nTime, the time of the block </p>
</li>
<li><p>set mining difficulty, the lowest difficulty </p>
<p> <code>consensus.powLimit = uint256S(&quot;00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff&quot;);</code> </p>
</li>
<li><p>total amount of coins </p>
<p> <code>consensus.nSubsidyHalvingInterval = 210000;</code> </p>
</li>
<li><p>change the initial reward </p>
<p> <code>genesis = CreateGenesisBlock(1231006505, 2083236893, 0x1d00ffff, 1, 50 * COIN);</code><br> 50 * COIN is the inital reward. </p>
</li>
<li><p>change the time period of difficulty changing </p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks to change difficulty</span><br><span class="line">consensus.nPowTargetSpacing = 10 * 60;  // the time interval of per block.</span><br><span class="line">consensus.nMinerConfirmationWindow = 2016; // nPowTargetTimespan / nPowTargetSpacing</span><br></pre></td></tr></table></figure>
</li>
</ol>
</li>
</ul>
<h3 id="2-change-network-protocol-magic-number"><a href="#2-change-network-protocol-magic-number" class="headerlink" title="2. change network protocol magic number"></a><strong>2. change network protocol magic number</strong></h3><p>You can change it to any other byte. </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pchMessageStart[0] = 0x0b;</span><br><span class="line">pchMessageStart[1] = 0x11;</span><br><span class="line">pchMessageStart[2] = 0x09;</span><br><span class="line">pchMessageStart[3] = 0x07;</span><br></pre></td></tr></table></figure>
<h3 id="3-change-listen-port"><a href="#3-change-listen-port" class="headerlink" title="3. change listen port"></a><strong>3. change listen port</strong></h3><p><strong>chainparams.cpp</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">nDefaultPort = <span class="number">18333</span>;</span><br></pre></td></tr></table></figure>
<p><strong>chianparamsbase.cpp</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">nRPCPort=<span class="number">8332</span>;</span><br></pre></td></tr></table></figure>
<h3 id="4-change-the-definition-of-seed-connection"><a href="#4-change-the-definition-of-seed-connection" class="headerlink" title="4. change the definition of seed connection"></a><strong>4. change the definition of seed connection</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vSeeds.emplace_back(&quot;seed.bitcoin.sipa.be&quot;); // Pieter Wuille, only supports x1, x5, x9, and xd</span><br><span class="line">vSeeds.emplace_back(&quot;dnsseed.bluematt.me&quot;); // Matt Corallo, only supports x9</span><br><span class="line">vSeeds.emplace_back(&quot;dnsseed.bitcoin.dashjr.org&quot;); // Luke Dashjr</span><br><span class="line">vSeeds.emplace_back(&quot;seed.bitcoinstats.com&quot;); // Christian Decker, supports x1 - xf</span><br><span class="line">vSeeds.emplace_back(&quot;seed.bitcoin.jonasschnelli.ch&quot;); // Jonas Schnelli, only supports x1, x5, x9, and xd</span><br><span class="line">vSeeds.emplace_back(&quot;seed.btc.petertodd.org&quot;); // Peter Todd, only supports x1, x5, x9, and xd</span><br><span class="line">vSeeds.emplace_back(&quot;seed.bitcoin.sprovoost.nl&quot;); // Sjors Provoost</span><br></pre></td></tr></table></figure>
<h3 id="5-change-the-prefixes-of-bitcoin"><a href="#5-change-the-prefixes-of-bitcoin" class="headerlink" title="5. change the prefixes of bitcoin"></a><strong>5. change the prefixes of bitcoin</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">base58Prefixes[PUBKEY_ADDRESS] = std::vector&lt;unsigned char&gt;(1,0);</span><br><span class="line">base58Prefixes[SCRIPT_ADDRESS] = std::vector&lt;unsigned char&gt;(1,5);</span><br><span class="line">base58Prefixes[SECRET_KEY] =     std::vector&lt;unsigned char&gt;(1,128);</span><br><span class="line">base58Prefixes[EXT_PUBLIC_KEY] = &#123;0x04, 0x88, 0xB2, 0x1E&#125;;</span><br><span class="line">base58Prefixes[EXT_SECRET_KEY] = &#123;0x04, 0x88, 0xAD, 0xE4&#125;;</span><br></pre></td></tr></table></figure>
<h3 id="6-coinbase-maturity-confirmations"><a href="#6-coinbase-maturity-confirmations" class="headerlink" title="6. coinbase maturity confirmations"></a><strong>6. coinbase maturity confirmations</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/** Coinbase transaction outputs can only be spent after this number of new blocks (network rule) */</span><br><span class="line">static const int COINBASE_MATURITY = 100;</span><br></pre></td></tr></table></figure>
<h3 id="7-change-checkpoint"><a href="#7-change-checkpoint" class="headerlink" title="7. change checkpoint"></a><strong>7. change checkpoint</strong></h3><p>You can use the genesis block’s check point. check point is used to prevent forks.<br>You can start bitcoind once and get the genesis from logs. </p>
<p>checkpointData = {<br>&emsp;&emsp;&emsp;&emsp;{}<br>}<br>the original code.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">checkpointData = &#123;</span><br><span class="line">            &#123;</span><br><span class="line">                &#123; 11111, uint256S(&quot;0x0000000069e244f73d78e8fd29ba2fd2ed618bd6fa2ee92559f542fdb26e7c1d&quot;)&#125;,</span><br><span class="line">                &#123; 33333, uint256S(&quot;0x000000002dd5588a74784eaa7ab0507a18ad16a236e7b1ce69f00d7ddfb5d0a6&quot;)&#125;,</span><br><span class="line">                &#123; 74000, uint256S(&quot;0x0000000000573993a3c9e41ce34471c079dcf5f52a0e824a81e7f953b8661a20&quot;)&#125;,</span><br><span class="line">                &#123;105000, uint256S(&quot;0x00000000000291ce28027faea320c8d2b054b2e0fe44a773f3eefb151d6bdc97&quot;)&#125;,</span><br><span class="line">                &#123;134444, uint256S(&quot;0x00000000000005b12ffd4cd315cd34ffd4a594f430ac814c91184a0d42d2b0fe&quot;)&#125;,</span><br><span class="line">                &#123;168000, uint256S(&quot;0x000000000000099e61ea72015e79632f216fe6cb33d7899acb35b75c8303b763&quot;)&#125;,</span><br><span class="line">                &#123;193000, uint256S(&quot;0x000000000000059f452a5f7340de6682a977387c17010ff6e6c3bd83ca8b1317&quot;)&#125;,</span><br><span class="line">                &#123;210000, uint256S(&quot;0x000000000000048b95347e83192f69cf0366076336c639f9b7228e9ba171342e&quot;)&#125;,</span><br><span class="line">                &#123;216116, uint256S(&quot;0x00000000000001b4f4b433e81ee46494af945cf96014816a4e2370f11b23df4e&quot;)&#125;,</span><br><span class="line">                &#123;225430, uint256S(&quot;0x00000000000001c108384350f74090433e7fcf79a606b8e797f065b130575932&quot;)&#125;,</span><br><span class="line">                &#123;250000, uint256S(&quot;0x000000000000003887df1f29024b06fc2200b55f8af8f35453d7be294df2d214&quot;)&#125;,</span><br><span class="line">                &#123;279000, uint256S(&quot;0x0000000000000001ae8c72a0b0c301f67e3afca10e819efa9041e458e9bd7e40&quot;)&#125;,</span><br><span class="line">                &#123;295000, uint256S(&quot;0x00000000000000004d9b4ef50f0f9d686fd69db2e03af35a100370c64632a983&quot;)&#125;,</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br></pre></td></tr></table></figure>
<h3 id="8-change-the-scriptPubKey"><a href="#8-change-the-scriptPubKey" class="headerlink" title="8. change the scriptPubKey"></a><strong>8. change the scriptPubKey</strong></h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> CScript genesisOutputScript = CScript() &lt;&lt; ParseHex(<span class="string">"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f"</span>) &lt;&lt; OP_CHECKSIG;</span><br></pre></td></tr></table></figure>
<h3 id="9-change-the-mining-algorithm"><a href="#9-change-the-mining-algorithm" class="headerlink" title="9. change the mining algorithm"></a><strong>9. change the mining algorithm</strong></h3><p>Bitcoind’s original mining algorithm is in miner.cpp ScanHash.<br>ScanHash will keep the block info’s first 5 fields (version, prev_block, merkle_root, timestamp, bits), totally 76 bytes, unchanged and via ergodic Nonce and then concat the 5 fields and Nonce to compute hash.<br>If the first K bytes is 0, then the hash is effective, mining susccess. </p>
<p><strong>mining.cpp</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">UniValue <span class="title">generateBlocks</span><span class="params">(<span class="built_in">std</span>::<span class="built_in">shared_ptr</span>&lt;CReserveScript&gt; coinbaseScript, <span class="keyword">int</span> nGenerate, <span class="keyword">uint64_t</span> nMaxTries, <span class="keyword">bool</span> keepScript)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> nInnerLoopCount = <span class="number">0x10000</span>;</span><br><span class="line">    <span class="keyword">int</span> nHeightEnd = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> nHeight = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    &#123;   <span class="comment">// Don't keep cs_main locked</span></span><br><span class="line">        LOCK(cs_main);</span><br><span class="line">        nHeight = chainActive.Height();</span><br><span class="line">        nHeightEnd = nHeight+nGenerate;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> nExtraNonce = <span class="number">0</span>;</span><br><span class="line">    <span class="function">UniValue <span class="title">blockHashes</span><span class="params">(UniValue::VARR)</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (nHeight &lt; nHeightEnd &amp;&amp; !ShutdownRequested())</span><br><span class="line">    &#123;</span><br><span class="line">	<span class="comment">//根据之前的参数创建一个没有hash的区块</span></span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">unique_ptr</span>&lt;CBlockTemplate&gt; pblocktemplate(BlockAssembler(Params()).CreateNewBlock(coinbaseScript-&gt;reserveScript));</span><br><span class="line">        <span class="keyword">if</span> (!pblocktemplate.get())</span><br><span class="line">            <span class="keyword">throw</span> JSONRPCError(RPC_INTERNAL_ERROR, <span class="string">"Couldn't create new block"</span>);</span><br><span class="line">	<span class="comment">// 把模板创建的区块 赋值给标准的区块</span></span><br><span class="line">        CBlock *pblock = &amp;pblocktemplate-&gt;block;</span><br><span class="line"><span class="comment">//获取Nonce</span></span><br><span class="line">        &#123;</span><br><span class="line">            LOCK(cs_main);</span><br><span class="line">            IncrementExtraNonce(pblock, chainActive.Tip(), nExtraNonce);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//Nonce重复执行，同时验证工作量，通过pblock GetHash()获得当前block的hash值。</span></span><br><span class="line">        <span class="keyword">while</span> (nMaxTries &gt; <span class="number">0</span> &amp;&amp; pblock-&gt;nNonce &lt; nInnerLoopCount &amp;&amp; !CheckProofOfWork(pblock-&gt;GetHash(), pblock-&gt;nBits, Params().GetConsensus())) &#123;</span><br><span class="line">            ++pblock-&gt;nNonce;</span><br><span class="line">            --nMaxTries;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (nMaxTries == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (pblock-&gt;nNonce == nInnerLoopCount) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">shared_ptr</span>&lt;<span class="keyword">const</span> CBlock&gt; shared_pblock = <span class="built_in">std</span>::make_shared&lt;<span class="keyword">const</span> CBlock&gt;(*pblock);</span><br><span class="line">        <span class="keyword">if</span> (!ProcessNewBlock(Params(), shared_pblock, <span class="literal">true</span>, <span class="literal">nullptr</span>))</span><br><span class="line">            <span class="keyword">throw</span> JSONRPCError(RPC_INTERNAL_ERROR, <span class="string">"ProcessNewBlock, block not accepted"</span>);</span><br><span class="line">        ++nHeight;</span><br><span class="line">        blockHashes.push_back(pblock-&gt;GetHash().GetHex());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//mark script as important because it was used at least for one coinbase output if the script came from the wallet</span></span><br><span class="line">        <span class="keyword">if</span> (keepScript)</span><br><span class="line">        &#123;</span><br><span class="line">            coinbaseScript-&gt;KeepScript();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> blockHashes;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>通过为CBlock对象各字段赋值，然后调用GetHash()通过底层的CHash256和CSHA256等类来计算hash，然后验证工作量。 </p>
]]></content>
      <categories>
        <category>bitcoin</category>
      </categories>
      <tags>
        <tag>bitcoin</tag>
        <tag>数字货币</tag>
        <tag>private chain</tag>
        <tag>私链</tag>
      </tags>
  </entry>
  <entry>
    <title>(14) DataStructure - address</title>
    <url>/2019/07/24/bitcoin/(14)%20DataStructure%20-%20address/</url>
    <content><![CDATA[<p>交易数据结构中的地址</p>
<a id="more"></a>
<h2 id="DataStructure-address"><a href="#DataStructure-address" class="headerlink" title="DataStructure - address"></a><strong>DataStructure - address</strong></h2><p>public key ==&gt; pubKey 32 bytes </p>
<p>HASH160(SHA256(pubKey)) ==&gt; H(m) 20 bytes </p>
<p><code>version</code> 1 byte<br>version + H(m) 21 bytes </p>
<p>Base58(SHA256(SHA256(version+H(m)))) ==&gt; get the first 4 bytes ==&gt; checksum </p>
<p><code>address</code> = Base58(version + H(m) + checksum) </p>
]]></content>
      <categories>
        <category>bitcoin</category>
      </categories>
      <tags>
        <tag>bitcoin</tag>
        <tag>数字货币</tag>
      </tags>
  </entry>
  <entry>
    <title>(15) 数论基础</title>
    <url>/2019/07/24/bitcoin/(15)%20%E6%95%B0%E8%AE%BA%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<p>比特币加密算法，数论基础</p>
<a id="more"></a>
<h2 id="数论基础"><a href="#数论基础" class="headerlink" title="数论基础"></a><strong>数论基础</strong></h2><h3 id="1-模运算法则"><a href="#1-模运算法则" class="headerlink" title="1. 模运算法则"></a><strong>1. 模运算法则</strong></h3><ul>
<li><h4 id="1-1-模运算"><a href="#1-1-模运算" class="headerlink" title="1.1 模运算"></a>1.1 模运算</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a mod b </span><br><span class="line">a除以b取余数</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="1-2-模运算法则"><a href="#1-2-模运算法则" class="headerlink" title="1.2 模运算法则"></a>1.2 模运算法则</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(a + b) mod p = (a mod p + b mod p) mod p </span><br><span class="line">(a - b) mod p = (a mod p - b mod p) mod p </span><br><span class="line">(a * b) mod p = (a mod p * b mod p) mod p </span><br><span class="line">(a^b) mod p = ((a mod p)^b) mod p</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="2-同余式"><a href="#2-同余式" class="headerlink" title="2. 同余式"></a><strong>2. 同余式</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">m mod b = n mod b</span><br><span class="line">写作 m = n (mod b)</span><br></pre></td></tr></table></figure>
<h3 id="3-欧拉函数"><a href="#3-欧拉函数" class="headerlink" title="3. 欧拉函数"></a><strong>3. 欧拉函数</strong></h3><p>正整数n，小于n且与n互质的正整数的个数，写作φ(n) </p>
<ul>
<li><ol>
<li>φ(1)=1</li>
</ol>
</li>
<li><ol>
<li>如果n为质数，则 φ(n)=n-1</li>
</ol>
</li>
<li><ol>
<li>如果n=p <em> q，且p，q互质，则 φ(n) = φ(p) </em> φ(q)</li>
</ol>
</li>
<li><ol>
<li>如果n=p^a，且p为质数，则 φ(n)=p^a - p^(a-1)</li>
</ol>
</li>
<li><ol>
<li>如果n=(p1^a1) <em> (p2^a2) </em> (p3^a3) … (pk^ak)，且p1~pk均为质数(因为任意正整数都可以分解为质数的乘法)，则<br>φ(n) = n <em> (1-1/p1) </em> (1-1/p2) * (1-1/p3) … (1-1/pk)</li>
</ol>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">证明：</span><br><span class="line">p,q互质，则p^n,q^m仍然互质，</span><br><span class="line">所以根据引理3，可得φ(n)=φ(p1^a1) * φ(p2^a2) * φ(p3^a3) ... φ(pk^ak);</span><br><span class="line">然后根据引理4，可得</span><br><span class="line">φ(n)=(p1^a1-p1^(a1-1)) * (p2^a2-p2^(a2-1)) * (p3^a3-p3^(a3-1)) ... (pk^ak-pk^(ak-1))</span><br><span class="line">    =(p1^a1) * (1-1/p1) * (p2^a2) * (1-1/p2) * (p3^a1) * (1-1/p3) ... (pK^aK) * (1-1/pK)</span><br><span class="line">    =n * (1-1/p1) * (1-1/p2) * (1-1/p3) ... (1-1/pk)</span><br></pre></td></tr></table></figure>
<h3 id="4-欧拉定理"><a href="#4-欧拉定理" class="headerlink" title="4. 欧拉定理"></a><strong>4. 欧拉定理</strong></h3><p>正整数n和整数a互质 </p>
<p>a^φ(n) = 1 (mod n)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">证明：</span><br><span class="line">对于正整数n，小于n且与n互质的正整数的个数为φ(n)，这是欧拉函数。</span><br><span class="line">现在列出这φ(n)个与n互质的正整数：</span><br><span class="line">x1,x2,x3, ... xφ(n)</span><br><span class="line">设 m1=a * x1, m2=a * x2, m3=a * x3, ... mφ(n) = a * xφ(n)</span><br><span class="line">(1) 从m中任取两个mr，ms，假设 ms &gt; mr，</span><br><span class="line">     有 ms mod n !=  mr mod n</span><br><span class="line">     证明：</span><br><span class="line">                假设 ms mod n =  mr mod n，</span><br><span class="line">                则有 ms-mr=a * (xs-xr)=(p * n+r)-(q * n+r)=(p-q) * n，p,q,r均为整数，得到等式 a * (xs-xr)=(p-q) * n，</span><br><span class="line">                因为a，n互质，xr&lt;xs&lt;n，所以等式不可能整除， (p-q) 不存在，</span><br><span class="line">                所以，假设不成立，证明完毕。</span><br><span class="line">       所以，</span><br><span class="line">(2) 任意m除以n的余数都与n互质，</span><br><span class="line">    证明：</span><br><span class="line">        因为如果余数与n有公因子r，那么a * xi=p * n+q * r= r * k，则 a*xi与n不互质，而这是不可能的。</span><br><span class="line">        那么这些数除以n的余数都与n互质，而余数又小于n，所以都在x1,x2,x3……xφ(n)中，因为这是1~n中与n互质的所有数。</span><br><span class="line">        由(1)可知m1~mφ(n)模n运算有φ(n)个余数，所以这些余数的某个排列必然等于x1,x2,x3……xφ(n)。</span><br><span class="line"></span><br><span class="line">由 (1) (2) 可得</span><br><span class="line">m1 * m2 * m3 ... mφ(n) = x1 * x2 * x3 ... xφ(n) (mod n)</span><br><span class="line">a^φ(n) *  x1 * x2 * x3 ... xφ(n) =  x1 * x2 * x3 ... xφ(n) (mod n)</span><br><span class="line">a^φ(n = 1 (mod n)</span><br></pre></td></tr></table></figure>
<h3 id="5-原根"><a href="#5-原根" class="headerlink" title="5. 原根"></a><strong>5. 原根</strong></h3><p>设m是正整数，a是整数，若a模m的阶等于φ(m)，则称a为m的一个原根。<br>(a mod m)! = φ(m)</p>
<h3 id="6-离散对数"><a href="#6-离散对数" class="headerlink" title="6. 离散对数"></a><strong>6. 离散对数</strong></h3><p>离散对数：首先定义一个素数p的原根，为其各次幂产生从1 到p-1的所有整数根，也就是说，如果a是素数p的一个原根，那么数值 a mod p,a2 mod p,…,ap-1 mod p 是各不相同的整数，并且以某种排列方式组成了从1到p-1的所有整数. 对于一个整数b和素数p的一个原根a，可以找到惟一的指数i，使得 b = a^i mod p 其中0 ≤ i ≤ （p-1） 指数i称为b的以a为基数的模p的离散对数或者指数.该值被记为inda,p(b).</p>
]]></content>
      <categories>
        <category>bitcoin</category>
      </categories>
      <tags>
        <tag>bitcoin</tag>
        <tag>数字货币</tag>
        <tag>数论</tag>
        <tag>欧拉函数</tag>
      </tags>
  </entry>
  <entry>
    <title>(16) DH Diffie-Hellman</title>
    <url>/2019/07/24/bitcoin/(16)%20DH%20Diffie-Hellman/</url>
    <content><![CDATA[<p>比特币加密算法，DH(Diffie-Hellman)算法，非对称的秘钥交换算法</p>
<a id="more"></a>
<h2 id="DH-Diffie-Hellman"><a href="#DH-Diffie-Hellman" class="headerlink" title="DH Diffie-Hellman"></a><strong>DH Diffie-Hellman</strong></h2><p>DH算法的安全性依赖于计算离散对数的难度。双向公钥交换，再各自本地产生相同的对称秘钥，免去了秘钥传输过程。 </p>
<ol>
<li><p>有两个全局公开的参数，一个素数q和一个整数a,a是q的一个原根. </p>
</li>
<li><p>假设用户A和B希望交换一个密钥，用户A选择一个作为私有密钥的随机数XA(XA&lt;q)，并计算公开密钥YA=a^XA mod q。A对XA的值保密存放而使YA能被B公开获得。类似地，用户B选择一个私有的随机数XB&lt;q，并计算公开密钥YB=a^XB mod q。B对XB的值保密存放而使YB能被A公开获得. </p>
</li>
<li><p>用户A产生共享秘密密钥的计算方式是K = (YB)^XA mod q.同样，用户B产生共享秘密密钥的计算是K = (YA)^XB mod q.这两个计算产生相同的结果： K = (YB)^XA mod q = (a^XB mod q)^XA mod q = (a^XB)^XA mod q （根据取模运算规则得到） = a^(XBXA) mod q = (a^XA)^XB mod q = (a^XA mod q)^XB mod q = (YA)^XB mod q 因此相当于双方已经交换了一个相同的秘密密钥K. </p>
</li>
<li><p>因为XA和XB是保密的，一个敌对方可以利用的参数只有q,a,YA和YB.因而敌对方被迫取离散对数来确定密钥.例如，要获取用户B的秘密密钥，敌对方必须先计算 XB = inda,q(YB) 然后再使用用户B采用的同样方法计算其秘密密钥K.  Diffie-Hellman密钥交换算法的安全性依赖于这样一个事实：虽然计算以一个素数为模的指数相对容易，但计算离散对数却很困难.对于大的素数，计算出离散对数几乎是不可能的. 下面给出例子.密钥交换基于素数q = 97和97的一个原根a = 5.A和B分别选择私有密钥XA = 36和XB = 58.每人计算其公开密钥 YA = 5^36 = 50 mod 97 YB = 5^58 = 44 mod 97 在他们相互获取了公开[密钥]之后，各自通过计算得到双方共享的秘密密钥如下： K = (YB)^XA mod 97 = 44^36 = 75 mod 97 K = (YA)^XB mod 97 = 50^58 = 75 mod 97 从|50,44|出发，攻击者要计算出75很不容易. </p>
</li>
<li><p>攻击者知道a,q,YA,YB，试图获取对称秘钥 K，<br>由 K = (YB)^XA mod q 可知攻击者需要计算XA，<br>由 YA=a^XA mod q 可知 XA = log<sub>a</sub> (n * q + YA)，而计算过程只能是暴力破解尝试。 </p>
</li>
</ol>
<pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 素数p，原根a, (a mod p)! = φ(p)</span><br><span class="line">2. 用户A，选择私钥 XA(XA&lt;p), 公钥 YA = a^XA mod p；</span><br><span class="line">用户B，选择私钥 XB(XB&lt;p), 公钥 YB = a^XB mod p；</span><br><span class="line">3. 产生对称秘钥K </span><br><span class="line">用户A计算 K = (YB)^XA mod p</span><br><span class="line">用户B计算 K = (YA)^XB mod p</span><br><span class="line">4.证明 </span><br><span class="line">(YB)^XA mod p        //用户A使用私钥XA计算</span><br><span class="line">=(a^XB mod p)^XA mod p</span><br><span class="line">=(a^XB)^XA mod p</span><br><span class="line">=(a^XA)^XB mod p</span><br><span class="line">=(a^XA mod p)^XB mod p</span><br><span class="line">=(YA)^XB mod p    //用户B使用私钥XB计算</span><br></pre></td></tr></table></figure>
</code></pre>]]></content>
      <categories>
        <category>bitcoin</category>
      </categories>
      <tags>
        <tag>bitcoin</tag>
        <tag>数字货币</tag>
        <tag>DH</tag>
        <tag>算法</tag>
        <tag>加密</tag>
        <tag>非对称加密</tag>
      </tags>
  </entry>
  <entry>
    <title>(18) ECC</title>
    <url>/2019/07/24/bitcoin/(18)%20ECC/</url>
    <content><![CDATA[<p>比特币加密算法，ECC（椭圆曲线加密）算法，离散对数计算的难度</p>
<a id="more"></a>
<h2 id="ECC"><a href="#ECC" class="headerlink" title="ECC"></a><strong>ECC</strong></h2><p>ECC，椭圆曲线加密安全性依赖于计算离散对数的难度，单向的公钥加密系统，一方产生秘钥对，再传播公钥，之后双方加密传输对称秘钥。 </p>
<p>ECC使用简化的椭圆曲线方程，使用有限域上的abel群。 </p>
<h3 id="1-椭圆曲线方程"><a href="#1-椭圆曲线方程" class="headerlink" title="1. 椭圆曲线方程"></a><strong>1. 椭圆曲线方程</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">y^2 =  x^3 + a * x + b</span><br></pre></td></tr></table></figure>
<h3 id="2-abel群-加法运算"><a href="#2-abel群-加法运算" class="headerlink" title="2. abel群 加法运算"></a><strong>2. abel群 加法运算</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">P(x1,y1), Q(x2,y2), R(x3,y3)</span><br><span class="line">加法运算: P + Q = R</span><br><span class="line">坐标值满足以下关系:</span><br><span class="line">x3 = m^2 - x1 -x2</span><br><span class="line">y3 = m * (x1 - x3) - y3</span><br><span class="line">(1) m = (y1-y2)/(x1-x2)，P!=Q；</span><br><span class="line">(2) m = (3*x^2+a)/(2*y)，P=Q.</span><br><span class="line">常数乘法可由以上式子计算</span><br><span class="line">P+P=2P</span><br><span class="line">2P+P=3P</span><br><span class="line">...</span><br><span class="line">nP=(n-1)P+P</span><br></pre></td></tr></table></figure>
<h3 id="3-有限域"><a href="#3-有限域" class="headerlink" title="3. 有限域"></a><strong>3. 有限域</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">y^2 =  x^3 + a * x + b (mod p)，p为质数</span><br><span class="line">x3 = m^2 - x1 -x2 (mod p)</span><br><span class="line">y3 = m * (x1 - x3) - y3 (mod p)</span><br></pre></td></tr></table></figure>
<h3 id="4-产生公钥和私钥"><a href="#4-产生公钥和私钥" class="headerlink" title="4. 产生公钥和私钥"></a><strong>4. 产生公钥和私钥</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">任意取基点G，G的阶为n， nG = 0</span><br><span class="line">从 [1,n-1] 中取一个整数k作为私钥，计算 K = kG，公钥(K,G)</span><br><span class="line">难度保障：</span><br><span class="line">(1) G(x1,y1)</span><br><span class="line">(2) G+G 求解 2G(x2,y2)</span><br><span class="line">m1 = (3*x1^2+a)/(2*y1)</span><br><span class="line">x2 = m1^2 - 2*x1 (mod p)</span><br><span class="line">y2 = m1 * (x1 - x2) - y1 (mod p)</span><br><span class="line">(3) 2G+G 求解3G(x3,y3)</span><br><span class="line">m2 = ...</span><br><span class="line">x3 = m2^2 - x1 - x2 (mod p)</span><br><span class="line">y3 = m2 * (x1 - x3) - y1 (mod p)</span><br><span class="line">...</span><br><span class="line">(n) (k-1)G+G求解kG(xk,yk)</span><br><span class="line">m[k-1] = ...</span><br><span class="line">xk = m[k-1]^2 - x[k-1] - x1 (mod p)</span><br><span class="line">yk = m[k-1] * (x1 - xk) - y1 (mod p)</span><br><span class="line"></span><br><span class="line">可以看出计算离散对数求k</span><br><span class="line">已知K(xk,yk),G(x1,y1),p</span><br><span class="line">求k</span><br><span class="line">xk+cp = m[k-1]^2 - x[k-1]，只能够暴力破解。</span><br></pre></td></tr></table></figure>
<h3 id="5-加密和解密"><a href="#5-加密和解密" class="headerlink" title="5. 加密和解密"></a><strong>5. 加密和解密</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、用户A选定一条椭圆曲线Ep(a,b)，并取椭圆曲线上一点，作为基点G。</span><br><span class="line">2、用户A选择一个私有密钥k，并生成公开密钥K=kG。</span><br><span class="line">3、用户A将Ep(a,b)和点K，G传给用户B。</span><br><span class="line">4、用户B接到信息后 ，将待传输的明文编码到Ep(a,b)上一点M（编码方法很多，这里不作讨论），并产生一个随机整数r（r&lt;n）。</span><br><span class="line">5、用户B计算点C1=M+rK；C2=rG。</span><br><span class="line">6、用户B将C1、C2传给用户A。</span><br><span class="line">7、用户A接到信息后，计算C1-kC2，结果就是点M。因为</span><br><span class="line">C1-kC2=M+rK-k(rG)=M+rK-r(kG)=M</span><br><span class="line">再对点M进行解码就可以得到明文。</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>bitcoin</category>
      </categories>
      <tags>
        <tag>bitcoin</tag>
        <tag>数字货币</tag>
        <tag>算法</tag>
        <tag>加密</tag>
        <tag>非对称加密</tag>
        <tag>ECC</tag>
        <tag>椭圆曲线</tag>
      </tags>
  </entry>
  <entry>
    <title>(17) RSA</title>
    <url>/2019/07/24/bitcoin/(17)%20RSA/</url>
    <content><![CDATA[<p>比特币加密算法，RSA算法，原理基于大数分解质因子困难的加密算法</p>
<a id="more"></a>
<h2 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a><strong>RSA</strong></h2><p>RSA安全性依赖于大数分解质因子的难度。单向的公钥加密系统，一方产生秘钥对，再传播公钥，之后双方加密传输对称秘钥。 </p>
<ul>
<li><h4 id="1-产生密钥对"><a href="#1-产生密钥对" class="headerlink" title="1. 产生密钥对"></a>1. 产生密钥对</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1，N=p∗q，p，q为两个质数，则φ(N)=(p-1) * (q-1)</span><br><span class="line">2，选取公钥，取任意整数e，e&lt;φ(N)，且e与φ(N)互质</span><br><span class="line">3，产生私钥，取d，使d满足（d * e）mod φ(N) = 1</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-加解密过程"><a href="#2-加解密过程" class="headerlink" title="2. 加解密过程"></a>2. 加解密过程</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">公钥(e,N)，秘钥(d,N)</span><br><span class="line">用户对明文A使用公钥加密</span><br><span class="line">B=A^e mod N</span><br><span class="line">对密文B使用秘钥解密</span><br><span class="line">A=B^d mod N</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="3-证明如下"><a href="#3-证明如下" class="headerlink" title="3. 证明如下"></a>3. 证明如下</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">A=B^d mod N</span><br><span class="line">=(A^e mod N)^d mod N</span><br><span class="line">=(A^e)^d mod N</span><br><span class="line">=A^(d * e) mod N</span><br><span class="line">=A^(k * φ(N) +1) mod N</span><br><span class="line">=[A * (A^φ(N))^k] mod N</span><br><span class="line">=[ A mod N * ((A^φ(N))^k) mod N] mod N</span><br><span class="line">=[ A mod N * (((A^φ(N)) mod N)^k) mod N)] mod N  //由同余式法则</span><br><span class="line">=[ A mod N * (1^k) mod N] mod N      //由欧拉定理可得(A^φ(N)) mod N = 1</span><br><span class="line">=[A mod N] mod N</span><br><span class="line">=A </span><br><span class="line">注：为什么(A^φ(N)) mod N = 1满足欧拉定理，因为A远小于大质数p，q，而N只能分解为p * q，所以A必然与N互质，所以满足以上。</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>bitcoin</category>
      </categories>
      <tags>
        <tag>bitcoin</tag>
        <tag>数字货币</tag>
        <tag>算法</tag>
        <tag>加密</tag>
        <tag>非对称加密</tag>
        <tag>RSA</tag>
      </tags>
  </entry>
  <entry>
    <title>(19) ECDH</title>
    <url>/2019/07/24/bitcoin/(19)%20ECDH/</url>
    <content><![CDATA[<p>比特币加密算法，ECDH算法，使用ECC产生公钥，使用DH算法交换私钥</p>
<a id="more"></a>
<h2 id="ECDH"><a href="#ECDH" class="headerlink" title="ECDH"></a><strong>ECDH</strong></h2><p>DH信息交换的思想，双方产生密钥对的算法从模运算变成椭圆曲线 </p>
<ul>
<li><h4 id="1-生成密钥对"><a href="#1-生成密钥对" class="headerlink" title="1. 生成密钥对"></a>1. 生成密钥对</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">在椭圆曲线E上选取G，G的阶n</span><br><span class="line">用户A，选择私钥 a&lt;n，公钥 A = a*G</span><br><span class="line">用户B，选择私钥 b&lt;n，公钥 B = b*G</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-生成对称秘钥"><a href="#2-生成对称秘钥" class="headerlink" title="2. 生成对称秘钥"></a>2. 生成对称秘钥</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">用户A</span><br><span class="line">Q = a * B</span><br><span class="line">用户B</span><br><span class="line">Q&apos; = b * A</span><br><span class="line">证明:</span><br><span class="line">Q = a * B = a * ( b * G) = b * (a * G) = b * A = Q&apos;</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>bitcoin</category>
      </categories>
      <tags>
        <tag>bitcoin</tag>
        <tag>数字货币</tag>
        <tag>算法</tag>
        <tag>加密</tag>
        <tag>非对称加密</tag>
        <tag>ECC</tag>
        <tag>椭圆曲线</tag>
        <tag>ECDH</tag>
      </tags>
  </entry>
  <entry>
    <title>(2) Testnet on Docker</title>
    <url>/2019/07/24/bitcoin/(2)%20testnet/</url>
    <content><![CDATA[<p>使用 比特币 Docker 测试网络</p>
<a id="more"></a>
<h2 id="Testnet-on-Docker"><a href="#Testnet-on-Docker" class="headerlink" title="Testnet on Docker"></a><strong>Testnet on Docker</strong></h2><h3 id="1-pull-bitcoin-testnet-image"><a href="#1-pull-bitcoin-testnet-image" class="headerlink" title="1. pull bitcoin testnet image"></a><strong>1. pull bitcoin testnet image</strong></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">~:docker pull freewil/bitcoin-testnet-box</span><br></pre></td></tr></table></figure>
<h3 id="2-start-a-testnet-container"><a href="#2-start-a-testnet-container" class="headerlink" title="2. start a testnet container"></a><strong>2. start a testnet container</strong></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">~:docker run -t -i -p 19001:19001 -p 19011:19011 freeewil/bitcoin-testnet-box</span><br></pre></td></tr></table></figure>
<h3 id="3-start-testnet"><a href="#3-start-testnet" class="headerlink" title="3. start testnet"></a><strong>3. start testnet</strong></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">~:make start</span><br></pre></td></tr></table></figure>
<h3 id="4-getinfo"><a href="#4-getinfo" class="headerlink" title="4. getinfo"></a><strong>4. getinfo</strong></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">~:make getinfo</span><br></pre></td></tr></table></figure>
<h3 id="5-generate-1-block"><a href="#5-generate-1-block" class="headerlink" title="5. generate 1 block"></a><strong>5. generate 1 block</strong></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">~:make generate</span><br></pre></td></tr></table></figure>
<h3 id="6-generate-n-blocks"><a href="#6-generate-n-blocks" class="headerlink" title="6. generate n blocks"></a><strong>6. generate n blocks</strong></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">~:make generate BLOCKS=200</span><br><span class="line">~:make getinfo</span><br></pre></td></tr></table></figure>
<h3 id="7-transfer-some-money"><a href="#7-transfer-some-money" class="headerlink" title="7. transfer some money"></a><strong>7. transfer some money</strong></h3><p>generate a transaction.<br>you need to generate blocks to make transactions effective. </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">~:make sendfrom1 ADDRESS=xxxxxxxx AMOUNT =10</span><br><span class="line">~:make generate BLOCKS=10</span><br><span class="line">~:make getinfo</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>bitcoin</category>
      </categories>
      <tags>
        <tag>bitcoin</tag>
        <tag>数字货币</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>(20) DSA 和 ECDSA</title>
    <url>/2019/07/24/bitcoin/(20)%20DSA%20%E5%92%8C%20ECDSA/</url>
    <content><![CDATA[<p>比特币加密算法，DSA 非对称加密的数字签名算法； ECDSA 基于椭圆曲线的非对称加密的数字签名算法</p>
<a id="more"></a>
<h2 id="DSA-和-ECDSA"><a href="#DSA-和-ECDSA" class="headerlink" title="DSA 和 ECDSA"></a><strong>DSA 和 ECDSA</strong></h2><h3 id="1-DSA"><a href="#1-DSA" class="headerlink" title="1. DSA"></a><strong>1. DSA</strong></h3><p>非对称加密签名算法 </p>
<ul>
<li><h4 id="1-1-算法参数"><a href="#1-1-算法参数" class="headerlink" title="1.1 算法参数"></a>1.1 算法参数</h4><p>(p,q,g)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 素数p</span><br><span class="line">φ(p) = p -1</span><br><span class="line"></span><br><span class="line">2. 选取一个φ(p)的素因子q</span><br><span class="line"></span><br><span class="line">3. 选取 h， 位于[1,p-1]</span><br><span class="line">4. g</span><br><span class="line">g = h^[(p-1)/q] mod p</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="1-2-产生密钥对"><a href="#1-2-产生密钥对" class="headerlink" title="1.2 产生密钥对"></a>1.2 产生密钥对</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 私钥 x</span><br><span class="line">从 [1，q-1] 中选取一个x</span><br><span class="line">2. 公钥 y</span><br><span class="line">y = g^x mod p</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="1-3-加解密-验证"><a href="#1-3-加解密-验证" class="headerlink" title="1.3 加解密 验证"></a>1.3 加解密 验证</h4><p>明文 m</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(1) 私钥签名</span><br><span class="line">  1. 从 [1,q-1] 随机取 k</span><br><span class="line">  2. r = g^k mod p mod q</span><br><span class="line">  3. s = [(H(m) + x * r) * (k^-1)] mod q   //使用私钥</span><br><span class="line">(r,s)即为签名</span><br><span class="line"></span><br><span class="line">(2) 公钥验签</span><br><span class="line">  1. w = s^-1 mod q</span><br><span class="line">  2. u1 = [ H(m) * w ] mod q</span><br><span class="line">  3. u2 = (r * w) mod q</span><br><span class="line">  4. v = ( [(g^u1)*(y^u2)] mod p) mod q</span><br><span class="line">v = r 即成功</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="1-4-证明"><a href="#1-4-证明" class="headerlink" title="1.4 证明"></a>1.4 证明</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">p,q,h,g,x,y</span><br><span class="line">p素数，欧拉函数  φ(p) = p-1</span><br><span class="line">q素数，是φ(p)的素因子</span><br><span class="line">h属于[1,p-1]，h与p互质</span><br><span class="line">g = h^[(p-1)/q] mod p</span><br><span class="line"></span><br><span class="line">(1) g^(nq) mod p = 1</span><br><span class="line">证明：</span><br><span class="line">g^(nq) mod p </span><br><span class="line">= [h^[(p-1)/q] mod p]^(nq) mod p</span><br><span class="line">= h^(p-1) mod p       // 欧拉定理</span><br><span class="line">= 1</span><br><span class="line"></span><br><span class="line">(2) g^t mod p = g^(t mod q) mod p</span><br><span class="line">证明：</span><br><span class="line">任意整数 t, n，可构造 t = nq +z</span><br><span class="line">z = t mod q</span><br><span class="line">g^t mod p</span><br><span class="line">= g^(nq+z) mod p</span><br><span class="line">= [(g^nq mod p) * (g^z mod p)] mod p    //利用(1)可得</span><br><span class="line">= [1 * (g^z mod p)] mod p</span><br><span class="line">= g^z mod p</span><br><span class="line">= g^(t mod q) mod p</span><br><span class="line"></span><br><span class="line">(3) 证明 v=r</span><br><span class="line">已知：</span><br><span class="line">u1 = [ H(m) * w ] mod q</span><br><span class="line">u2 = (r * w) mod q</span><br><span class="line">v = ( [(g^u1)*(y^u2)] mod p) mod q</span><br><span class="line">将u1,u2带入v</span><br><span class="line">v = ( [(g^u1)*(y^u2)] mod p) mod q</span><br><span class="line">= (( [(g^u1) mod p] * [(y^u2)] mod p]) mod p) mod q</span><br><span class="line">= (( [(g^u1) mod p] * [(y^u2)] mod p]) mod p) mod q</span><br><span class="line">= ([g^((H(m)*w) mod q) mod p] * [(g^x mod p)^[(r * w) mod q] mod p]) mod p mod q</span><br><span class="line">// 应用结论（2）</span><br><span class="line">= ([g^(H(m)*w) mod p] * [(g^[(r * w) mod q] mod p)^x mod p]) mod p mod q</span><br><span class="line">= ([g^(H(m)*w) mod p] * [(g^(r * w) mod p)^x mod p]) mod p mod q</span><br><span class="line">= ([g^(H(m)*w) mod p] * [(g^(r * w)*x mod p]) mod p mod q</span><br><span class="line">= g^[(H(m)*w)+(r * w)*x)] mod p mod q</span><br><span class="line">最终：</span><br><span class="line">v = g^[(H(m)*w)+(r * w)*x)] mod p mod q</span><br><span class="line">= g^[(H(m)+ x*r) * w] mod p mod q</span><br><span class="line"></span><br><span class="line">又已知： </span><br><span class="line">w = s^-1 mod q</span><br><span class="line">所以：</span><br><span class="line">(s * w) mod q</span><br><span class="line">= (s * s^-1 mod q) mod q</span><br><span class="line">= (s * s^-1) mod q</span><br><span class="line">= 1</span><br><span class="line">已知：</span><br><span class="line">s = [(H(m) + x * r) * (k^-1)] mod q </span><br><span class="line">所以：</span><br><span class="line">(s * w) mod q</span><br><span class="line">= (([(H(m) + x * r) * (k^-1)] mod q ) * w ) mod q</span><br><span class="line">= ([(H(m) + x * r) * (k^-1)]*w) mod q</span><br><span class="line">=([(H(m) + x * r) * w] * (k^-1)) mod q</span><br><span class="line">=1</span><br><span class="line">既：</span><br><span class="line">([(H(m) + x * r) * w] * (k^-1)) mod q = 1</span><br><span class="line">又因为：</span><br><span class="line">(k * k^-1) mod q = 1</span><br><span class="line">所以：</span><br><span class="line">[(H(m) + x * r) * w] mod q = k mod q</span><br><span class="line"></span><br><span class="line">所以：</span><br><span class="line">v = g^[(H(m)+ x*r) * w] mod p mod q</span><br><span class="line">= g^([(H(m)+ x*r) * w] mod q) mod p mod q</span><br><span class="line">= g^(k mod q) mod p mod q</span><br><span class="line">= g^k mod p mod q</span><br><span class="line">= r</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="2-ECDSA"><a href="#2-ECDSA" class="headerlink" title="2. ECDSA"></a><strong>2. ECDSA</strong></h3><p>仍然是有限域上的椭圆曲线 </p>
<ul>
<li><h4 id="2-1-椭圆曲线产生密钥对"><a href="#2-1-椭圆曲线产生密钥对" class="headerlink" title="2.1 椭圆曲线产生密钥对"></a>2.1 椭圆曲线产生密钥对</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">曲线 E</span><br><span class="line">基点 G，阶n</span><br><span class="line">私钥 d，取值范围 [1,n-1]</span><br><span class="line">公钥 Q = dG</span><br><span class="line">&#123;E，G，n，d，Q&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-2-产生dsa签名"><a href="#2-2-产生dsa签名" class="headerlink" title="2.2 产生dsa签名"></a>2.2 产生dsa签名</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">取随机数 k，取值范围 [1,n-1]</span><br><span class="line">kG = (x1, y1)</span><br><span class="line">==&gt;</span><br><span class="line">r = x1 mod n</span><br><span class="line">s = ([H(m)+d*r] * k^-1) mod n</span><br><span class="line">==&gt;</span><br><span class="line">签名</span><br><span class="line">(r,s)</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-3-验签"><a href="#2-3-验签" class="headerlink" title="2.3 验签"></a>2.3 验签</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">w = s^-1 mod n</span><br><span class="line">u1 = (H(m)*w) mod n</span><br><span class="line">u2 = (r * w) mod n</span><br><span class="line">u1*G + u2 * Q = (x0, y0)</span><br><span class="line">==&gt;</span><br><span class="line">v = x0 mod n</span><br><span class="line">==&gt;</span><br><span class="line">r = v</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-4-证明"><a href="#2-4-证明" class="headerlink" title="2.4 证明"></a>2.4 证明</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">已知：</span><br><span class="line">w = s^-1 mod n</span><br><span class="line">所以：</span><br><span class="line">(s * w) mod n</span><br><span class="line">= (s * [s^-1 mod n]) mod n</span><br><span class="line">= (s * s^-1) mod n</span><br><span class="line">= 1</span><br><span class="line">把 s = ([H(m)+d*r] * k^-1) mod n 带入 (s * w) mod n 得</span><br><span class="line">(s * w) mod n</span><br><span class="line">= [( ( [H(m)+d*r] * k^-1 ) mod n ) * w] mod n</span><br><span class="line">= [ ( [H(m)+d*r] * k^-1 ) * w] mod n</span><br><span class="line">= ([(H(m)*w)+d*r*w] * k^-1) mod n</span><br><span class="line">= [ ( (H(m)*w+d*r*w) mod n) * (k^-1 mod n) ] mod n</span><br><span class="line"></span><br><span class="line">∵  ( (H(m)*w+d*r*w) mod n) </span><br><span class="line">= [(H(m)*w) mod n + (d*r*w) mod n] mod n</span><br><span class="line">= [(H(m)*w) mod n + (d*r*w) mod n] mod n</span><br><span class="line">= [ u1 + ( (d mod n) * ((r * w) mod n) ) mod n] mod n</span><br><span class="line">= [ u1 + ( d* ((r * w) mod n) ) mod n] mod n</span><br><span class="line">= [ u1 + (d * u2) mod n] mod n</span><br><span class="line">= [ u1 mod n +   ((d * u2) mod n) mod n ] mod n</span><br><span class="line">= [ u1 + d * u2 ] mod n</span><br><span class="line"></span><br><span class="line">∴</span><br><span class="line">(s * w) mod n</span><br><span class="line">= [ ( (H(m)*w+d*r*w) mod n) * (k^-1 mod n) ] mod n</span><br><span class="line">= [ ( [ u1 + d * u2 ] mod n)  * (k^-1 mod n) ] mod n</span><br><span class="line">= [( u1 + d * u2) * k^-1] mod n</span><br><span class="line">既：</span><br><span class="line">(s * w) mod n </span><br><span class="line">= [( u1 + d * u2) * k^-1] mod n </span><br><span class="line">= ([( u1 + d * u2) mod n] * [(k^-1) mod n]) mod n </span><br><span class="line">= 1</span><br><span class="line">又因为：</span><br><span class="line">(k * k^-1) mod n = [(k mod n)*(k^-1 mod n)] mod n = 1</span><br><span class="line">所以：</span><br><span class="line">( u1 + d * u2) mod n = k mod n</span><br><span class="line">既 ：</span><br><span class="line">u1 + d * u2 = i*n + z</span><br><span class="line">k = j*n +z</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">已知：</span><br><span class="line">u1*G+u2*Q = (x0, y0)</span><br><span class="line">= u1*G + u2 * d*G</span><br><span class="line">= (u1+d*u2)*G</span><br><span class="line">= (i*n+z)*G             // 基点G的阶为n</span><br><span class="line">= 0 + z * G</span><br><span class="line">所以：</span><br><span class="line">u1*G+u2*Q =(u1+d*u2)*G = 0 + z * G = j * n *G + z * G = kG</span><br><span class="line">所以：</span><br><span class="line">x0 mod n = x1 mod n</span><br><span class="line">既：</span><br><span class="line">v = r</span><br><span class="line">证明完毕！</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>bitcoin</category>
      </categories>
      <tags>
        <tag>bitcoin</tag>
        <tag>数字货币</tag>
        <tag>算法</tag>
        <tag>加密</tag>
        <tag>非对称加密</tag>
        <tag>ECC</tag>
        <tag>椭圆曲线</tag>
        <tag>DSA</tag>
        <tag>ECDSA</tag>
      </tags>
  </entry>
  <entry>
    <title>(3) Json RPC</title>
    <url>/2019/07/24/bitcoin/(3)%20json-rpc/</url>
    <content><![CDATA[<p>使用 JSON RPC 调用比特币区块链开放接口</p>
<a id="more"></a>
<h2 id="Json-RPC"><a href="#Json-RPC" class="headerlink" title="Json RPC"></a><strong>Json RPC</strong></h2><p>If a server runs with json-rpc.<br>Anyone may send request to this server in json format.<br><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"jsonrpc"</span> : <span class="number">2.0</span>,</span><br><span class="line">    <span class="attr">"method"</span> : <span class="string">"sayHello"</span>, </span><br><span class="line">    <span class="attr">"params"</span> : [<span class="string">"Hello JSON-RPC"</span>], </span><br><span class="line">    <span class="attr">"id"</span> : <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Just like an url <code>http://localhost:8080/test_project/rpc</code> with body<code>{&quot;method&quot;:&quot;sayHello&quot;,&quot;params&quot;:[],&quot;id&quot;:1234}</code>.<br>A json-rpc calling is just like a traditional http request.<br>Because we use json or key-value format to transform our message in http server.</p>
]]></content>
      <categories>
        <category>bitcoin</category>
      </categories>
      <tags>
        <tag>bitcoin</tag>
        <tag>数字货币</tag>
        <tag>RPC</tag>
      </tags>
  </entry>
  <entry>
    <title>(21) DSA 和 ECDSA</title>
    <url>/2019/07/24/bitcoin/(21)%20Bloom%20Filter/</url>
    <content><![CDATA[<p>海量数据检索算法</p>
<a id="more"></a>
<h2 id="Bloom-Filter"><a href="#Bloom-Filter" class="headerlink" title="Bloom Filter"></a><strong>Bloom Filter</strong></h2><h3 id="1-用处"><a href="#1-用处" class="headerlink" title="1. 用处"></a><strong>1. 用处</strong></h3><p>用于海量数据检索 </p>
<h3 id="2-原理"><a href="#2-原理" class="headerlink" title="2. 原理"></a><strong>2. 原理</strong></h3><p><strong>==&gt;</strong> m个比特位{b1,b2,b3,…,bm} </p>
<p><strong>==&gt;</strong> k个hash函数，<br>H<sub>1</sub>()，H<sub>2</sub>()，…，H<sub>i</sub>()，…，H<sub>k</sub>()<br>hash函数的结果范围 [0,m-1]，比如<br>H<sub>i</sub>(x)=bk,(1&lt;=i&lt;=k,1&lt;=bk&lt;=m)，<br>则第bk位bit位设为1. </p>
<p><strong>==&gt;</strong> 集合S{x1,x2,x3…xn} </p>
<p><strong>==&gt;</strong> 初始每个比特位为0，向比特位添加集合里的元素x<br>每个hash函数都执行计算<br>H<sub>1</sub>(x)，H<sub>2</sub>(x)，…，H<sub>i</sub>(x)，…，H<sub>k</sub>(x)<br>根据结果依次把对应的比特位设为1，如果已经为1则跳过。    </p>
<p><strong>==&gt;</strong> 新来一个元素y，判断是否存在，过程如下：<br>使用每个hash函数执行计算，得到bit位下标 </p>
<p>H<sub>i</sub>(y)</p>
<p>如果所有hash函数的对应比特位都为1，则认为已存在，低概率出错。<br>如果存在某个对应比特位为0，则认为不存在，不会出错。</p>
<h3 id="3-参数选择"><a href="#3-参数选择" class="headerlink" title="3. 参数选择"></a><strong>3. 参数选择</strong></h3><p>m,k的值<br>数据的数量 n<br>hash函数    </p>
<h3 id="4-改进"><a href="#4-改进" class="headerlink" title="4. 改进"></a><strong>4. 改进</strong></h3><p>bf无法删除元素<br>使用counting bf<br>比特位使用计数器，即可删除元素。    </p>
]]></content>
      <categories>
        <category>bitcoin</category>
      </categories>
      <tags>
        <tag>bitcoin</tag>
        <tag>数字货币</tag>
        <tag>数据检索</tag>
        <tag>Bloom Filter</tag>
      </tags>
  </entry>
  <entry>
    <title>(4) OP_CHECKSIG 交易验签</title>
    <url>/2019/07/24/bitcoin/(4)%20OP_CHECKSIG%20%E4%BA%A4%E6%98%93%E9%AA%8C%E7%AD%BE/</url>
    <content><![CDATA[<p>比特币区块链交易验签流程</p>
<a id="more"></a>
<h2 id="OP-CHECKSIG-交易验签"><a href="#OP-CHECKSIG-交易验签" class="headerlink" title="OP_CHECKSIG 交易验签"></a><strong>OP_CHECKSIG 交易验签</strong></h2><p>&emsp;&emsp;把输入中的 pub_key 运算得到 pub_key_hash，和引用的（前一个）交易输出中的pub_key_hash对比，进入验签环节。</p>
<p>&emsp;&emsp;首先，前一个交易的信息已经写在链上，是可靠的信息，解锁脚本和锁定脚本的公钥hash对比可以确保解锁脚本的公钥是正确的公钥。  </p>
<p>&emsp;&emsp;然后是使用解锁脚本的公钥对签名验签，通过即为合法。为什么要验签？因为，现在已经有了正确的公钥，接着必须验证创建交易的人是公钥的拥有者，验证过程为：提供公钥能解开的私钥签名，该签名是唯一的，创建交易的时候需要创建私钥签名以证明公钥的所有权。  </p>
<p>&emsp;&emsp;流程上已经保证了不会出错，那么修改底层代码，绕过必要的流程验证是否能创建假交易?参看ECDSA。 </p>
]]></content>
      <categories>
        <category>bitcoin</category>
      </categories>
      <tags>
        <tag>bitcoin</tag>
        <tag>数字货币</tag>
      </tags>
  </entry>
  <entry>
    <title>(5) 交易的数据结构和验证流程</title>
    <url>/2019/07/24/bitcoin/(5)%20%E4%BA%A4%E6%98%93%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E9%AA%8C%E8%AF%81%E6%B5%81%E7%A8%8B/</url>
    <content><![CDATA[<p>比特币区块链交易验签流程</p>
<a id="more"></a>
<h2 id="交易的数据结构和验证流程"><a href="#交易的数据结构和验证流程" class="headerlink" title="交易的数据结构和验证流程"></a><strong>交易的数据结构和验证流程</strong></h2><h3 id="1-数据结构"><a href="#1-数据结构" class="headerlink" title="1. 数据结构"></a><strong>1. 数据结构</strong></h3><ul>
<li><h4 id="1-1-交易"><a href="#1-1-交易" class="headerlink" title="1.1 交易"></a>1.1 交易</h4><p>  (1) 版本号 4字节<br>  (2) 输入数量 1-9字节<br>  (3) 输入列表 长度不定<br>  (4) 输出数量 1-9字节<br>  (5) 输出列表 长度不定<br>  (6) 锁定时间 4字节 </p>
</li>
<li><h4 id="1-2-输入"><a href="#1-2-输入" class="headerlink" title="1.2 输入"></a>1.2 输入</h4><p>  (1) utxo所在交易哈希 32字节<br>  (2) 输出索引 4字节<br>  (3) 签名脚本（解锁脚本）的长度  1-9字节<br>  (4) 签名脚本 长度不定<br>  (5) 序列号 4字节，暂时无用，所以使用 ffffffff </p>
</li>
<li><h4 id="1-3-输出"><a href="#1-3-输出" class="headerlink" title="1.3 输出"></a>1.3 输出</h4><p>  (1) 交易额 8字节<br>  (2) 锁定脚本的长度 1-9字节<br>  (3) 锁定脚本 </p>
</li>
<li><h4 id="1-4-签名脚本（解锁脚本）"><a href="#1-4-签名脚本（解锁脚本）" class="headerlink" title="1.4 签名脚本（解锁脚本）"></a>1.4 签名脚本（解锁脚本）</h4><p>  已知解锁脚本包含 私钥签名和公钥<br>  但还包含一些说明信息，因编码而异（有的教程中锁定脚本附带栈操作符）。<br>  一个不带操作符的签名脚本格式 </p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">30 [45 02 21 r 02 20 s 01] [21 pub_key]</span><br><span class="line"></span><br><span class="line">30 是脚本开始 0x30</span><br><span class="line">// 签名</span><br><span class="line">45 是签名的长度 0x45 = 69字节</span><br><span class="line">02 一个分隔符 0x02</span><br><span class="line">21 r的长度 0x21=33字节</span><br><span class="line">r    </span><br><span class="line">02 一个分隔符</span><br><span class="line">20 s的长度 0x20=32字节</span><br><span class="line">s</span><br><span class="line">01 签名类型，三种签名类型，默认0x01全都签名</span><br><span class="line">// 公钥</span><br><span class="line">21 公钥长度 1字节</span><br><span class="line">pub_key 公钥，当前用户的公钥</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="1-5-锁定脚本"><a href="#1-5-锁定脚本" class="headerlink" title="1.5 锁定脚本"></a>1.5 锁定脚本</h4><p>  1.5.1. P2PKH </p>
<pre><code>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">OP_DUP OP_HASH160 &lt;pub_key_hash&gt; OP_EQUALVERIFY OP_CHECKSIG</span><br><span class="line"></span><br><span class="line">//</span><br><span class="line">&lt;pub_key_hash&gt; 是收款人的钱包地址（公钥hash值）</span><br></pre></td></tr></table></figure>
</code></pre><p>  1.5.2. 交易验证流程 </p>
<pre><code>  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">签名脚本入栈</span><br><span class="line">&lt;sig&gt; <span class="xml"><span class="tag">&lt;<span class="name">pub_key</span>&gt;</span></span></span><br><span class="line"><span class="xml">锁定脚本入栈执行</span></span><br><span class="line"><span class="xml">OP_DUP</span></span><br><span class="line">&lt;sig&gt; &lt;pub_key&gt; &lt;pub_key&gt; </span><br><span class="line"></span><br><span class="line">OP_HASH160</span><br><span class="line">&lt;sig&gt; &lt;pub_key&gt; &lt;pub_key_hash'&gt; </span><br><span class="line"></span><br><span class="line">&lt;pub_key_hash&gt;</span><br><span class="line">&lt;sig&gt; &lt;pub_key&gt; &lt;pub_key_hash'&gt; &lt;pub_key_hash&gt;</span><br><span class="line"></span><br><span class="line">OP_EQUALVERIFY</span><br><span class="line">&lt;sig&gt; &lt;pub_key&gt;</span><br><span class="line"></span><br><span class="line">OP_CHECKSIG</span><br><span class="line">// v=r，已知p,q,g，公钥y、r、s，证明v=r</span><br></pre></td></tr></table></figure>
</code></pre></li>
</ul>
]]></content>
      <categories>
        <category>bitcoin</category>
      </categories>
      <tags>
        <tag>bitcoin</tag>
        <tag>数字货币</tag>
      </tags>
  </entry>
  <entry>
    <title>(6) 交易的安全性保障</title>
    <url>/2019/07/24/bitcoin/(6)%20%E4%BA%A4%E6%98%93%E7%9A%84%E5%AE%89%E5%85%A8%E6%80%A7%E4%BF%9D%E9%9A%9C/</url>
    <content><![CDATA[<p>安全保证机制解析</p>
<a id="more"></a>
<h2 id="交易的安全性保障"><a href="#交易的安全性保障" class="headerlink" title="交易的安全性保障"></a><strong>交易的安全性保障</strong></h2><p>讨论安全之前先看交易的创建和广播 </p>
<ul>
<li><h4 id="1-创建和广播"><a href="#1-创建和广播" class="headerlink" title="1. 创建和广播"></a>1. 创建和广播</h4><p>创建的关键在于引用链上的utxo，并签名，而签名需要对整个交易信息签名，所以要先构造字段 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(1) 填充字段 比特币协议版本号</span><br><span class="line">// 输入</span><br><span class="line">(2) 填充字段 输入数</span><br><span class="line">(3) 循环构造输入</span><br><span class="line">  --&gt; 填充字段 引用的utxo交易hash值</span><br><span class="line">  --&gt; 填充字段 引用的输出索引</span><br><span class="line">  --&gt; 填充字段 签名脚本，由于交易还没创建完成，所以脚本长度字段 00，表示没签名，则目前这个签名脚本字段为 00</span><br><span class="line">  --&gt; 填充字段 输入的序列号，暂定 ffffffff</span><br><span class="line">(4) 填充字段 输出数</span><br><span class="line">(5) 循环构造输出</span><br><span class="line">  --&gt; 填充字段 交易额</span><br><span class="line">  --&gt; 填充字段 输出脚本</span><br><span class="line">(6) 填充字段 锁定时间</span><br><span class="line"></span><br><span class="line">(7) 把当前的交易签名</span><br><span class="line">涉及到 各字段格式转换（字节数组，数组拼接，进制转换16进制）</span><br><span class="line">然后对整个原始交易签名</span><br><span class="line"></span><br><span class="line">(8) 把签名结果 和 用户的公钥 填充到 签名脚本</span><br><span class="line"></span><br><span class="line">(9) 对当前交易计算hash值产生 交易流水号</span><br><span class="line">(10) 广播</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-安全保障"><a href="#2-安全保障" class="headerlink" title="2. 安全保障"></a>2. 安全保障</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">如果一个交易被广播到某个交易池后，被人提取并修改。</span><br><span class="line">如果要盗取比特币，则修改交易输出中的 &lt;pub_key_hash&gt; 字段</span><br><span class="line">这会导致整个交易信息变更。</span><br><span class="line">(1) 交易信息变更，不改变签名和公钥，本机验签失败，交易无效。</span><br><span class="line">不考虑私钥泄露的情形，使用的黑客的密钥对重新签名。</span><br><span class="line">(2) 交易信息变更，签名改为黑客的私钥签名，本机公钥验签失败，交易无效。</span><br><span class="line">(3) 交易信息变更，签名改为黑客的私钥签名，公钥改为黑客的公钥，本机验证公钥不匹配utxo输出，交易无效。</span><br><span class="line">(4) 交易信息变更，公钥改为黑客的公钥，本机验证公钥不匹配utxo输出，交易无效。</span><br><span class="line"></span><br><span class="line">(3) 在本机修改底层实现，绕过本机验证，构造交易并广播，再来看上述情形</span><br><span class="line">    1) 交易信息m变更，不改变签名(r,s)和公钥y，其他节点验签失败(v!=r)，交易无效。</span><br><span class="line">    2) 交易信息m变更，签名改为黑客的私钥签名(r&apos;,s&apos;)，其他节点验签失败(v!=r&apos;)，交易无效</span><br><span class="line">    3) 交易信息m变更，签名改为黑客的私钥签名(r&apos;,s&apos;)，公钥改为黑客的公钥y&apos;，其他节点验证公钥不匹配utxo输出(y&apos;_hash!=y_hash)，交易无效。</span><br><span class="line">    4) 交易信息m变更，公钥改为黑客的公钥y&apos;，其他节点验证公钥不匹配utxo输出(y&apos;_hash!=y_hash)，交易无效。</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>bitcoin</category>
      </categories>
      <tags>
        <tag>bitcoin</tag>
        <tag>数字货币</tag>
      </tags>
  </entry>
  <entry>
    <title>(7) 交易的数据结构和验证流程</title>
    <url>/2019/07/24/bitcoin/(7)%20%E5%8C%BA%E5%9D%97%E5%92%8C%E6%8C%96%E7%9F%BF/</url>
    <content><![CDATA[<p>挖矿的具体原理，交易信息如何上链</p>
<a id="more"></a>
<h2 id="区块和挖矿"><a href="#区块和挖矿" class="headerlink" title="区块和挖矿"></a><strong>区块和挖矿</strong></h2><ul>
<li><h4 id="1-区块的数据结构"><a href="#1-区块的数据结构" class="headerlink" title="1. 区块的数据结构"></a>1. 区块的数据结构</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">区块头</span><br><span class="line">区块体(二叉树结构的交易和交易hash)</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-区块头的数据结构"><a href="#2-区块头的数据结构" class="headerlink" title="2. 区块头的数据结构"></a>2. 区块头的数据结构</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//总大小 80字节</span><br><span class="line">区块版本号                4字节</span><br><span class="line">前一个区块的hash          32字节</span><br><span class="line">merkle根                32字节</span><br><span class="line">时间戳                   4字节</span><br><span class="line">目标hash的Bits           4字节</span><br><span class="line">Nonce(随机数)            4字节</span><br></pre></td></tr></table></figure>
<p>当前区块的hash = SHA256(SHA256(版本号+前一个区块的hash+merkle根+时间戳+目标hash的Bits+随机数))</p>
</li>
<li><h4 id="3-挖矿（产生新区块）"><a href="#3-挖矿（产生新区块）" class="headerlink" title="3. 挖矿（产生新区块）"></a>3. 挖矿（产生新区块）</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、从交易池选择交易 产生merkle根（优先级取决于utxo链龄和交易额，交易大小）</span><br><span class="line">  1) 优先级</span><br><span class="line">      --&gt;Priority = Sum(Value of input * Input Age)/Transaction Size</span><br><span class="line">      --&gt;链龄：记录该utxo的区块为起点，其后的区块数</span><br><span class="line">      --&gt;交易额：satoshi为单位</span><br><span class="line">      --&gt;Transaction Size：交易的大小，以字节为单位</span><br><span class="line">      --&gt;区块的前50K保留给高优先级交易</span><br><span class="line">  2) 孤儿交易池</span><br><span class="line">      输入暂时找不到utxo，该交易放在孤儿交易池，当utxo找到时，该交易被移动到交易池</span><br><span class="line"></span><br><span class="line">2、串联区块头各字段</span><br><span class="line">3、穷举随机数Nonce 获得记账权</span><br><span class="line">SHA256(SHA256(区块版本号+前一个区块的hash值+当前区块的merkle根+时间戳+目标hash的Bits+nonce))</span><br><span class="line">结果小于或等于 目标hash，则广播该区块。</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="4-挖矿难度计算"><a href="#4-挖矿难度计算" class="headerlink" title="4. 挖矿难度计算"></a>4. 挖矿难度计算</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(1) 目标hash的Bits  位于区块头中的4字节数据，等价于挖矿难度(difficulty)</span><br><span class="line">  位于区块头的 目标hash的Bits 只有4个字节，格式通常是这样的(0x180526FD)，是个4字节十六进制串</span><br><span class="line">  Bits转换为目标hash(target)：</span><br><span class="line">  首字节作指数(exponent)，后三个字节作系数(coefficient)，公式如下</span><br><span class="line">  target = coefficient * 2^(8 * (exponent - 3))</span><br><span class="line">  如上0x180526FD</span><br><span class="line">  target = 0x0526FD x 2^(8*(24-3))=0 x 00000000 00000000 0526FD00 00000000 00000000 00000000 00000000 00000000</span><br><span class="line">  那么该区块的hash值就该小于或等于这个值。</span><br><span class="line">(2) target 和 Difficulty 的关系</span><br><span class="line">  Difficulty = 标准Difficulty / target</span><br><span class="line">  target = 标准Difficulty / Difficulty</span><br><span class="line">  标准Difficulty有两种</span><br><span class="line">  pdiff 0 x 00000000 FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF</span><br><span class="line">  bdiff 0 x 00000000 FFFF0000 00000000 00000000 00000000 00000000 00000000 00000000</span><br><span class="line">  pdiff用于矿机的挖矿计算，bdiff用于区块链网络存储和验证计算(从target的转换方法可以看出，必要的精度损失)</span><br><span class="line">(3) Difficulty 计算</span><br><span class="line">  Difficulty控制挖矿难度，比特币控制每10分钟产生一个区块，每2016个区块更新难度（两周时间）：</span><br><span class="line">  new_Difficulty = Difficulty * ( 过去2016个块的总时间/两周的时间)</span><br><span class="line"></span><br><span class="line">(4) 为什么 难度(Difficulty) 会影响挖矿速率</span><br><span class="line">  1) hash运算的随机性</span><br><span class="line">      由于hash运算的随机性，通过改变Nonce会导致每次的结果迥然不同，而不是呈线性变化。Nonce改变1和改变n是等价的。</span><br><span class="line">  2) hash值能代表的数据空间</span><br><span class="line">        --&gt; SHA256^2运算的结果是256位，即结果能代表2^256种原始数据。</span><br><span class="line">              任意数据的SHA256^2运算的结果，必然和数字0~2^256-1的某个SHA256^2运算结果碰撞。</span><br><span class="line">        --&gt; 区块hash &lt;= target，那么 区块hash 存在 target 种可能</span><br><span class="line">            以这个target为例，0 x 00000000 00000000 0526FD00 00000000 00000000 00000000 00000000 00000000</span><br><span class="line">            则 区块hash 存在 0x0526FD * 2^168 中可能，即 target 种可能</span><br><span class="line">  3) 预期算力（挖矿所需算力）</span><br><span class="line">      预期算力 =  [Difficulty * 2^32 / 600] (次/秒)</span><br><span class="line">      推算如下：</span><br><span class="line">        ∵  hash运算的结果有 2^256，正确值有 target 种可能</span><br><span class="line">        ∴ 平均运算 [(2^256) / target] 次，就可能产生一个区块，把 [(2^256) / target] 作为预期计算次数。</span><br><span class="line">        ∵ target  = bdiff / Difficulty</span><br><span class="line">        ∴  [(2^256) / target] </span><br><span class="line">          = [(2^256) / (bdiff / Difficulty)]</span><br><span class="line">          = [ Difficulty * (2^256) / (0xFFFF * 2^208)]</span><br><span class="line">          = Difficulty * 2^32</span><br><span class="line">          即 产生一个区块， 需要运算的次数 为 Difficulty * 2^32</span><br><span class="line">        ∵ 把 产生一个区块 的 时间 控制为10分钟</span><br><span class="line">        ∴ 预期算力 = [Difficulty * 2^32 / 600] (次/秒)</span><br><span class="line">  4) 由 预期算力 计算公式可知，Difficulty 降低，则预期算力降低，挖矿速度提升；Difficulty 升高，则预期算力提高，挖矿速度降低。</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="5-区块连接，网络延时，重组"><a href="#5-区块连接，网络延时，重组" class="headerlink" title="5. 区块连接，网络延时，重组"></a>5. 区块连接，网络延时，重组</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(1) 连接</span><br><span class="line">  通过hash连接</span><br><span class="line">  但是 新接收的区块通常不是单链，而是树状，会产生暂时的分叉，最后只会保留最长的子链为主链。</span><br><span class="line">(2) 网络延时</span><br><span class="line">  区块B1已经确认完毕。</span><br><span class="line">  如果区块B3先于区块B2 广播到达某个节点。</span><br><span class="line">  但是B3包含的UTXO不在B1上，在B2上。</span><br><span class="line">  则该节点不会连接和确认B3，会先连接其他区块比如B2，之后会连接B3</span><br><span class="line">(3) 重组</span><br><span class="line">  不同的节点，连接的子链可能不同，最后会广播最长的那条，那么非最长子链的节点会断开旧的链，重组新的链。</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <categories>
        <category>bitcoin</category>
      </categories>
      <tags>
        <tag>bitcoin</tag>
        <tag>数字货币</tag>
      </tags>
  </entry>
  <entry>
    <title>(8) P2PKH - Basical transaction</title>
    <url>/2019/07/24/bitcoin/(8)%20P2PKH%20-%20Basical%20transaction/</url>
    <content><![CDATA[<p>比特币基本交易模式-比特币转账</p>
<a id="more"></a>
<h2 id="P2PKH-Basical-transaction"><a href="#P2PKH-Basical-transaction" class="headerlink" title="P2PKH - Basical transaction"></a><strong>P2PKH - Basical transaction</strong></h2><p>The creation of a basical transaction.<br><strong>==&gt;</strong> To create a transaction, you need addresses for output position.<br><strong>==&gt;</strong> The basical transaction is used to send some btc from one address to another address.<br><strong>==&gt;</strong> Don’t forget the address for change.<br>The recommendation of the prevoius output.<br><strong>==&gt;</strong> you have to use a previous utxo and sign it with your private key.</p>
<h3 id="1-Init-Test-Environment"><a href="#1-Init-Test-Environment" class="headerlink" title="1. Init Test Environment"></a><strong>1. Init Test Environment</strong></h3><ul>
<li><h4 id="1-1-generate-200-blocks-at-node-1"><a href="#1-1-generate-200-blocks-at-node-1" class="headerlink" title="1.1. generate 200 blocks at node 1"></a>1.1. generate 200 blocks at node 1</h4><p>  <code>~:make generate BLOCKS=200</code><br>  ==================== State =======================</p>
<p>  Wallet at Node1 -&gt; W1<br>  Wallet at Node2 -&gt; W2<br>  W1_balance: 5000<br>  W2_balance: 0   </p>
<p>  ================================================</p>
</li>
<li><h4 id="1-2-generate-2-new-addresses-at-node2-and-get-their-private-keys"><a href="#1-2-generate-2-new-addresses-at-node2-and-get-their-private-keys" class="headerlink" title="1.2. generate 2 new addresses at node2 and get their private keys"></a>1.2. generate 2 new addresses at node2 and get their private keys</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:make address2</span><br><span class="line">~:make address2</span><br><span class="line">~:bitcoin-cli -datadir=2 dumpprivkey &lt;address&gt;</span><br></pre></td></tr></table></figure>
<p>  ==================== Result =======================</p>
<p>  Address1 -&gt; A1<br>  Address2 -&gt; A2<br>  A1_hash: moX3qTsaLt9NjvQBGHy78jvmLZX9ZWk7aP<br>  A1_privKey: cN3ggP6FEmQF9zWt2FUNP8rxCLxNLBCgRcmWfD7jtqAvx1Geud7w<br>  A2_hash: n3MXNfADQRYwwJ4iwoNLMWxA3bwba7hsiU<br>  A2_privKey: cQkEdyskEDiRJdadFgq9DD9yDbc6Kib5YPkNdH6fZX3U4TZxoj7n    </p>
<p>  =================================================</p>
<p>  =================== State =========================</p>
<p>  W1_balance: 5000<br>  W2_balance: 0<br>  A1_balance:  0<br>  A2_balance:  0  </p>
<p>  =================================================</p>
</li>
<li><h4 id="1-3-send-200-btc-from-node1-to-node2"><a href="#1-3-send-200-btc-from-node1-to-node2" class="headerlink" title="1.3. send 200 btc from node1 to node2"></a>1.3. send 200 btc from node1 to node2</h4><p>  send 200 btc to <code>A1</code>. </p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:make sendfrom1 ADDRESS=moX3qTsaLt9NjvQBGHy78jvmLZX9ZWk7aP AMOUNT=200</span><br><span class="line">~:make generate BLOCKS=10</span><br></pre></td></tr></table></figure>
<p>  ==================== State ========================</p>
<p>  W1_balance: 5299.99987060<br>  W2_balance: 200<br>  A1_balance: 200<br>  A2_balance: 0   </p>
<p>  =================================================</p>
</li>
</ul>
<h3 id="2-Create-transaction"><a href="#2-Create-transaction" class="headerlink" title="2. Create transaction"></a><strong>2. Create transaction</strong></h3><p>Create transaction <code>X</code> that sends 10 coin to A1 from A2. </p>
<ul>
<li><h4 id="2-1-command"><a href="#2-1-command" class="headerlink" title="2.1 command"></a>2.1 command</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># show utxo</span><br><span class="line">~:bitcoin-cli -datadir=2 listunspent</span><br><span class="line"># create raw transaction</span><br><span class="line">~:bitcoin-cli -datadir=2 createrawtransaction &apos;[&#123;&quot;txid&quot;:&quot;&quot;, &quot;vout&quot;:, &lt;&quot;sequence&quot;:&gt;&#125;]&apos; &apos;&#123;&quot;A2&quot;:189.9999,&quot;A1&quot;:10&#125;&apos;</span><br></pre></td></tr></table></figure>
<p>  Here A2 was used to receive change in output, you can also use a new address. </p>
</li>
<li><h4 id="2-2-create-transaction-X"><a href="#2-2-create-transaction-X" class="headerlink" title="2.2 create transaction X"></a>2.2 create transaction X</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:bitcoin-cli -datadir=2 listunspent</span><br><span class="line">~:bitcoin-cli -datadir=2 createrawtransaction &apos;[&#123;&quot;txid&quot;:&quot;9fceca794c2c156ee3a2c56dcec96be6dd6a95339057262d972e96931f687b2e&quot;, &quot;vout&quot;:1&#125;]&apos; &apos;&#123;&quot;moX3qTsaLt9NjvQBGHy78jvmLZX9ZWk7aP&quot;:189.9999,&quot;n3MXNfADQRYwwJ4iwoNLMWxA3bwba7hsiU&quot;:10&#125;&apos;</span><br></pre></td></tr></table></figure>
<p>  ==================== Result X ======================</p>
<p>  unsigned_hex </p>
<p>  =================================================</p>
</li>
</ul>
<h3 id="3-Use-private-key-1-to-sign-X"><a href="#3-Use-private-key-1-to-sign-X" class="headerlink" title="3. Use private key 1 to sign X"></a><strong>3. Use private key 1 to sign X</strong></h3><p>Sign X and get signed raw transaction X1. </p>
<ul>
<li><h4 id="3-1-command"><a href="#3-1-command" class="headerlink" title="3.1 command"></a>3.1 command</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:bitcoin-cli -datadir=2 signrawtransaction x &apos;[]&apos; &apos;[&quot;A1_privKey&quot;]&apos;</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="3-2-sign-X"><a href="#3-2-sign-X" class="headerlink" title="3.2 sign X"></a>3.2 sign X</h4><p>  generate X1 </p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:bitcoin-cli -datadir=2 signrawtransaction &lt;unsigned_hex&gt; &apos;[]&apos; &apos;[&quot;cN3ggP6FEmQF9zWt2FUNP8rxCLxNLBCgRcmWfD7jtqAvx1Geud7w&quot;]&apos;</span><br></pre></td></tr></table></figure>
<p>  ==================== Result X1 =====================</p>
<p>  signed_hex</p>
<p>  =================================================</p>
</li>
</ul>
<h3 id="4-Boardcast-X1-and-make-record"><a href="#4-Boardcast-X1-and-make-record" class="headerlink" title="4. Boardcast X1 and make record"></a><strong>4. Boardcast X1 and make record</strong></h3><ul>
<li><h4 id="4-1-command"><a href="#4-1-command" class="headerlink" title="4.1 command"></a>4.1 command</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:bitcoin-cli -datadir=2 sendrawtransaction X1 </span><br><span class="line">~:make generate BLOCKS=10</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="4-2-boardcast-and-make-record"><a href="#4-2-boardcast-and-make-record" class="headerlink" title="4.2 boardcast and make record"></a>4.2 boardcast and make record</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:bitcoin-cli -datadir=2 sendrawtransaction &lt;signed_hex&gt;</span><br><span class="line">~:make generate BLOCKS=10</span><br></pre></td></tr></table></figure>
<p>  ===================== Result ======================</p>
<p>  X1 txid: X1_hash </p>
<p>  =================================================</p>
<p>  ==================== State ========================</p>
<p>  W1_balance: 5799.99987060<br>  W2_balance: 189.9999<br>  A1_balance: 189.9999<br>  A2_balance: 10  </p>
<p>  =================================================</p>
</li>
</ul>
]]></content>
      <categories>
        <category>bitcoin</category>
      </categories>
      <tags>
        <tag>bitcoin</tag>
        <tag>数字货币</tag>
      </tags>
  </entry>
  <entry>
    <title>(9) P2SH - Multiple Signature, Contract Embry</title>
    <url>/2019/07/24/bitcoin/(9)%20P2SH%20-%20Multiple%20Signature,%20Contract%20Embry/</url>
    <content><![CDATA[<p>比特币高级交易模式-多签和智能合约</p>
<a id="more"></a>
<h2 id="P2SH-Multiple-Signature-Contract-Embry"><a href="#P2SH-Multiple-Signature-Contract-Embry" class="headerlink" title="P2SH - Multiple Signature, Contract Embry"></a><strong>P2SH - Multiple Signature, Contract Embry</strong></h2><h3 id="1-P2SH模式简介"><a href="#1-P2SH模式简介" class="headerlink" title="1. P2SH模式简介"></a><strong>1. P2SH模式简介</strong></h3><ul>
<li><h4 id="1-1-The-creation-of-P2SH"><a href="#1-1-The-creation-of-P2SH" class="headerlink" title="1.1 The creation of P2SH."></a>1.1 The creation of P2SH.</h4><p>  <strong>==&gt;</strong> Create UTXO : To create a P2SH transaction output, you need a multiple signed address for output position. </p>
</li>
<li><h4 id="1-2-The-recommendation-of-P2SH’s-output"><a href="#1-2-The-recommendation-of-P2SH’s-output" class="headerlink" title="1.2 The recommendation of P2SH’s output."></a>1.2 The recommendation of P2SH’s output.</h4><p>  <strong>==&gt;</strong> Use P2SH OUTPUT : To use a P2SH utxo, you and your companys need to sign the transaction multiple times with your and your companys’ private keys to generate scriptSig. </p>
</li>
<li><h4 id="1-3-M-of-N"><a href="#1-3-M-of-N" class="headerlink" title="1.3 M-of-N"></a>1.3 M-of-N</h4><p>  <strong>==&gt;</strong> P2SH is the derivatives of M-of-N. </p>
<p>  <strong>==&gt;</strong> Create UTXO : M-of-N is the manual process to create a scriptPubKey with m, n and pubKey of each address. P2SH use a multi-signed address’s scriptPubKey to instead of scriptPubKey by manual process. Actually the manual process in M-of-N will produce a multi-signed address just like P2SH (You can see this by <code>decodescript &lt;scriptPubKey&gt;</code>).  </p>
<p>  <strong>==&gt;</strong> Use OUTPUT : The transaction need to be signed multiple times with all private keys of scriptPubKey to generate scriptSig. This processes is same with P2SH. </p>
</li>
</ul>
<h3 id="2-Init-Test-Environment"><a href="#2-Init-Test-Environment" class="headerlink" title="2. Init Test Environment"></a><strong>2. Init Test Environment</strong></h3><ul>
<li><h4 id="2-1-generate-200-blocks-at-node-1"><a href="#2-1-generate-200-blocks-at-node-1" class="headerlink" title="2.1 generate 200 blocks at node 1"></a>2.1 generate 200 blocks at node 1</h4><p>  <code>~:make generate BLOCKS=200</code></p>
<p>  ==================== State =======================</p>
<p>  Wallet at Node1 -&gt; W1<br>  Wallet at Node2 -&gt; W2<br>  W1_balance: 5000<br>  W2_balance: 0   </p>
<p>  ================================================</p>
</li>
<li><h4 id="2-2-generate-2-new-addresses-at-node2-and-get-their-private-keys"><a href="#2-2-generate-2-new-addresses-at-node2-and-get-their-private-keys" class="headerlink" title="2.2 generate 2 new addresses at node2 and get their private keys"></a>2.2 generate 2 new addresses at node2 and get their private keys</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:make address2</span><br><span class="line">~:make address2</span><br><span class="line">~:bitcoin-cli -datadir=2 dumpprivkey &lt;address&gt;</span><br></pre></td></tr></table></figure>
<p>  ==================== Result =======================</p>
<p>  Address1 -&gt; A1<br>  Address2 -&gt; A2  </p>
<p>  A1_hash: moX3qTsaLt9NjvQBGHy78jvmLZX9ZWk7aP<br>  A1_privKey: cN3ggP6FEmQF9zWt2FUNP8rxCLxNLBCgRcmWfD7jtqAvx1Geud7w     </p>
<p>  A2_hash: n3MXNfADQRYwwJ4iwoNLMWxA3bwba7hsiU<br>  A2_privKey: cQkEdyskEDiRJdadFgq9DD9yDbc6Kib5YPkNdH6fZX3U4TZxoj7n    </p>
<p>  =================================================</p>
<p>  =================== State =========================</p>
<p>  W1_balance: 5000<br>  W2_balance: 0<br>  A1_balance:  0<br>  A2_balance:  0  </p>
<p>  =================================================</p>
</li>
<li><h4 id="2-3-send-200-btc-from-node1-to-node2"><a href="#2-3-send-200-btc-from-node1-to-node2" class="headerlink" title="2.3 send 200 btc from node1 to node2"></a>2.3 send 200 btc from node1 to node2</h4><p>  send 200 btc to <code>A1</code>. </p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:make sendfrom1 ADDRESS=moX3qTsaLt9NjvQBGHy78jvmLZX9ZWk7aP AMOUNT=200</span><br><span class="line">~:make generate BLOCKS=10</span><br></pre></td></tr></table></figure>
<p>  ==================== State ========================</p>
<p>  W1_balance: 5299.99987060<br>  W2_balance: 200<br>  A1_balance: 200<br>  A2_balance: 0   </p>
<p>  =================================================</p>
</li>
</ul>
<h3 id="3-Create-multiple-signatured-address"><a href="#3-Create-multiple-signatured-address" class="headerlink" title="3. Create multiple signatured address"></a><strong>3. Create multiple signatured address</strong></h3><p>Create a multiple signatured address <code>A3</code> to receive output. </p>
<ul>
<li><h4 id="3-1-command"><a href="#3-1-command" class="headerlink" title="3.1 command"></a>3.1 command</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:bitcoin-cli -datadir=2 createmultisig 2 &apos;[&quot;A1_pubKey&quot;,&quot;A2_pubKey&quot;]&apos;</span><br></pre></td></tr></table></figure>
<p>  If you keep the private keys of all the address, you can just use the addresses instead of the pubkeys of them to generate multiple signatrued address.  </p>
</li>
<li><h4 id="3-2-generate-multiple-signatured-address"><a href="#3-2-generate-multiple-signatured-address" class="headerlink" title="3.2 generate multiple signatured address"></a>3.2 generate multiple signatured address</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:bitcoin-cli -datadir=2 createmultisig 2 &apos;[&quot;moX3qTsaLt9NjvQBGHy78jvmLZX9ZWk7aP&quot;,&quot;n3MXNfADQRYwwJ4iwoNLMWxA3bwba7hsiU&quot;]&apos;</span><br></pre></td></tr></table></figure>
<p>  ==================== Result =======================</p>
<p>  Address 3 -&gt; A3<br>  {<br>  &emsp;&emsp;”address”: “2N5q4afW3cCVVUR8365imV5nJq6r7oe76yS”,<br>  &emsp;&emsp;”redeemScript”: “52210387f89fca6896b35752e37cc3e61c614abfedfb80269a8794283ed40657d9742a210392edcffb03a4b48ac5083ed2bbc05b15b4bd2168bf00d69f446ca19cae3ca6f752ae”<br>  } </p>
<p>  =================================================</p>
</li>
<li><h4 id="3-3-get-scriptPubKey-of-A3"><a href="#3-3-get-scriptPubKey-of-A3" class="headerlink" title="3.3 get scriptPubKey of A3"></a>3.3 get scriptPubKey of A3</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:bitcoin-cli -datadir=2 validateaddress 2N5q4afW3cCVVUR8365imV5nJq6r7oe76yS</span><br></pre></td></tr></table></figure>
<p>  ==================== Result =======================</p>
<p>  {<br>  &emsp;&emsp;”isvalid”: true,<br>  &emsp;&emsp;”address”: “2N5q4afW3cCVVUR8365imV5nJq6r7oe76yS”,<br>  &emsp;&emsp;”scriptPubKey”: “a9148a07cca1f387bad85410be81e9c0747be94234ea87”,<br>  &emsp;&emsp;”ismine”: false,<br>  &emsp;&emsp;”iswatchonly”: false,<br>  &emsp;&emsp;”isscript”: true<br>  } </p>
<p>  =================================================</p>
<p>  ==================== State ========================</p>
<p>  W1_balance: 5299.99987060<br>  W2_balance: 200<br>  A1_balance: 200<br>  A2_balance: 0<br>  A3_balance: 0   </p>
<p>  =================================================</p>
</li>
</ul>
<h3 id="4-Create-P2SH-transaction"><a href="#4-Create-P2SH-transaction" class="headerlink" title="4. Create P2SH transaction"></a><strong>4. Create P2SH transaction</strong></h3><p>Create transaction <code>X</code> that outputs to the multiple signatured address <code>A3</code>. </p>
<ul>
<li><h4 id="4-1-command"><a href="#4-1-command" class="headerlink" title="4.1 command"></a>4.1 command</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># show utxo</span><br><span class="line">~:bitcoin-cli -datadir=2 listunspent</span><br><span class="line"># create raw transaction</span><br><span class="line">~:bitcoin-cli -datadir=2 createrawtransaction &apos;[&#123;&quot;txid&quot;:&quot;&quot;, &quot;vout&quot;:, &lt;&quot;sequence&quot;:&gt;&#125;]&apos; &apos;&#123;&quot;A1&quot;:189.9999,&quot;A3&quot;:10&#125;&apos;</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="4-2-create-transaction-X"><a href="#4-2-create-transaction-X" class="headerlink" title="4.2 create transaction X"></a>4.2 create transaction X</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:bitcoin-cli -datadir=2 listunspent</span><br><span class="line">~:bitcoin-cli -datadir=2 createrawtransaction &apos;[&#123;&quot;txid&quot;:&quot;9fceca794c2c156ee3a2c56dcec96be6dd6a95339057262d972e96931f687b2e&quot;, &quot;vout&quot;:1&#125;]&apos; &apos;&#123;&quot;moX3qTsaLt9NjvQBGHy78jvmLZX9ZWk7aP&quot;:189.9999,&quot;2N5q4afW3cCVVUR8365imV5nJq6r7oe76yS&quot;:10&#125;&apos;</span><br></pre></td></tr></table></figure>
<p>  ==================== Result X ======================</p>
<p>  01000000012e7b681f93962e972d26579033956adde66bc9ce6dc5a2e36e152c4c79cace9f0100000000ffffffff02f0d67c6c040000001976a91457c5a1d30532a4bef13cdc3f7eab5c0b50001eba88ac00ca9a3b0000000017a9148a07cca1f387bad85410be81e9c0747be94234ea8700000000 </p>
<p>  =================================================</p>
</li>
</ul>
<h3 id="5-Use-private-key-1-to-sign-X"><a href="#5-Use-private-key-1-to-sign-X" class="headerlink" title="5. Use private key 1 to sign X"></a><strong>5. Use private key 1 to sign X</strong></h3><p>Sign X and get signed raw transaction X1.</p>
<ul>
<li><h4 id="5-1-command"><a href="#5-1-command" class="headerlink" title="5.1 command"></a>5.1 command</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:bitcoin-cli -datadir=2 signrawtransaction x &apos;[]&apos; &apos;[&quot;A1_privKey&quot;]&apos;</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="5-2-sign-X"><a href="#5-2-sign-X" class="headerlink" title="5.2 sign X"></a>5.2 sign X</h4><p>  generate X1 </p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:bitcoin-cli -datadir=2 signrawtransaction 01000000012e7b681f93962e972d26579033956adde66bc9ce6dc5a2e36e152c4c79cace9f0100000000ffffffff02f0d67c6c040000001976a91457c5a1d30532a4bef13cdc3f7eab5c0b50001eba88ac00ca9a3b0000000017a9148a07cca1f387bad85410be81e9c0747be94234ea8700000000 &apos;[]&apos; &apos;[&quot;cN3ggP6FEmQF9zWt2FUNP8rxCLxNLBCgRcmWfD7jtqAvx1Geud7w&quot;]&apos;</span><br></pre></td></tr></table></figure>
<p>  ==================== Result X1 =====================</p>
<p>  01000000012e7b681f93962e972d26579033956adde66bc9ce6dc5a2e36e152c4c79cace9f010000006b483045022100f565e7e70622da2afbd14d2fcf6ea64658ce4f83858f56a0addef6618171d8bd0220792e2e7a30d4097b21ad87c5026ddd67bda2aea0995aeec7c3df1553dc4df15701210387f89fca6896b35752e37cc3e61c614abfedfb80269a8794283ed40657d9742affffffff02f0d67c6c040000001976a91457c5a1d30532a4bef13cdc3f7eab5c0b50001eba88ac00ca9a3b0000000017a9148a07cca1f387bad85410be81e9c0747be94234ea8700000000 </p>
<p>  =================================================</p>
</li>
</ul>
<h3 id="6-Boardcast-X1-and-make-record"><a href="#6-Boardcast-X1-and-make-record" class="headerlink" title="6. Boardcast X1 and make record"></a><strong>6. Boardcast X1 and make record</strong></h3><ul>
<li><h4 id="6-1-command"><a href="#6-1-command" class="headerlink" title="6.1 command"></a>6.1 command</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:bitcoin-cli -datadir=2 sendrawtransaction X1 </span><br><span class="line">~:make generate BLOCKS=10</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="6-2-boardcast-and-make-record"><a href="#6-2-boardcast-and-make-record" class="headerlink" title="6.2 boardcast and make record"></a>6.2 boardcast and make record</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:bitcoin-cli -datadir=2 sendrawtransaction 01000000012e7b681f93962e972d26579033956adde66bc9ce6dc5a2e36e152c4c79cace9f010000006b483045022100f565e7e70622da2afbd14d2fcf6ea64658ce4f83858f56a0addef6618171d8bd0220792e2e7a30d4097b21ad87c5026ddd67bda2aea0995aeec7c3df1553dc4df15701210387f89fca6896b35752e37cc3e61c614abfedfb80269a8794283ed40657d9742affffffff02f0d67c6c040000001976a91457c5a1d30532a4bef13cdc3f7eab5c0b50001eba88ac00ca9a3b0000000017a9148a07cca1f387bad85410be81e9c0747be94234ea8700000000 </span><br><span class="line">~:make generate BLOCKS=10</span><br></pre></td></tr></table></figure>
<p>  ===================== Result ======================</p>
<p>  X1 txid:  2ac8a4e25f6e68f667d75249176abac6f07ee75bcdc508d90856888f2731c1dc </p>
<p>  =================================================</p>
<p>  ==================== State ========================</p>
<p>  W1_balance: 5799.99987060<br>  W2_balance: 189.9999<br>  A1_balance: 189.9999<br>  A2_balance: 0<br>  A3_balance: 10  </p>
<p>  =================================================</p>
</li>
</ul>
<h3 id="7-Create-new-transaction-that-recommend-the-P2SH’s-output"><a href="#7-Create-new-transaction-that-recommend-the-P2SH’s-output" class="headerlink" title="7. Create new transaction that recommend the P2SH’s output"></a><strong>7. Create new transaction that recommend the P2SH’s output</strong></h3><p>Create a new transcation Y that recommend X1’s output 1 as input. </p>
<ul>
<li><h4 id="7-1-command"><a href="#7-1-command" class="headerlink" title="7.1 command"></a>7.1 command</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># show utxo</span><br><span class="line">~:bitcoin-cli -datadir=2 listunspent</span><br><span class="line"># get tx hex</span><br><span class="line">~:bitcoin-cli -datadir=2 getrawtransaction &lt;txid&gt;</span><br><span class="line"># decode hex</span><br><span class="line">~:bitcoin-cli -datadir=2 decoderawtransaction &lt;hex&gt;</span><br><span class="line"></span><br><span class="line"># create transaction</span><br><span class="line">~:bitcoin-cli -datadir=2 createrawtransaction &apos;[&#123;&quot;txid&quot;:&quot;X1_txid&quot;, &quot;vout&quot;: 1&#125;]&apos; &apos;&#123;&quot;A2&quot;:9.9999&#125;&apos;</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="7-2-create-transaction-Y"><a href="#7-2-create-transaction-Y" class="headerlink" title="7.2 create transaction Y"></a>7.2 create transaction Y</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:bitcoin-cli -datadir=2 createrawtransaction &apos;[&#123;&quot;txid&quot;:&quot;2ac8a4e25f6e68f667d75249176abac6f07ee75bcdc508d90856888f2731c1dc&quot;, &quot;vout&quot;:1&#125;]&apos; &apos;&#123;&quot;n3MXNfADQRYwwJ4iwoNLMWxA3bwba7hsiU&quot;:9.9999&#125;&apos;</span><br></pre></td></tr></table></figure>
<p>  ===================== Result Y =====================</p>
<p>  0100000001dcc131278f885608d908c5cd5be77ef0c6ba6a174952d767f6686e5fe2a4c82a0100000000ffffffff01f0a29a3b000000001976a914ef8a388d9996d9b316b6e335183f483493770e6588ac00000000 </p>
<p>  =================================================</p>
</li>
</ul>
<h3 id="8-Use-private-key-1-to-sign-the-new-transaction"><a href="#8-Use-private-key-1-to-sign-the-new-transaction" class="headerlink" title="8. Use private key 1 to sign the new transaction."></a><strong>8. Use private key 1 to sign the new transaction.</strong></h3><p>Use A1_priveKey to sign Y. It will generate Y1.<br>Note: After signing, you will get a full stack of output info. {hex:,complete:false} means signing successfully finished. The error stack can be ignored if it is success. </p>
<ul>
<li><h4 id="8-1-command"><a href="#8-1-command" class="headerlink" title="8.1 command"></a>8.1 command</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:bitcoin-cli -datadir=2 signrawtransaction Y &apos;[&#123;&quot;txid&quot;:&quot;&quot;, &quot;vout&quot;:, &quot;scriptPubKey&quot;:&quot;A3_scriptPubKey&quot;, &quot;redeemScript&quot;: &quot;A3_redeemscript&quot;&#125;]&apos; &apos;[&quot;A1_privKey&quot;]&apos;</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="8-2-sign-transaction-Y-to-Y1"><a href="#8-2-sign-transaction-Y-to-Y1" class="headerlink" title="8.2 sign transaction Y to Y1"></a>8.2 sign transaction Y to Y1</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:bitcoin-cli -datadir=2 signrawtransaction 0100000001dcc131278f885608d908c5cd5be77ef0c6ba6a174952d767f6686e5fe2a4c82a0100000000ffffffff01f0a29a3b000000001976a914ef8a388d9996d9b316b6e335183f483493770e6588ac00000000 &apos;[&#123;&quot;txid&quot;:&quot;2ac8a4e25f6e68f667d75249176abac6f07ee75bcdc508d90856888f2731c1dc&quot;, &quot;vout&quot;:1, &quot;scriptPubKey&quot;:&quot;a9148a07cca1f387bad85410be81e9c0747be94234ea87&quot;, &quot;redeemScript&quot;:&quot;52210387f89fca6896b35752e37cc3e61c614abfedfb80269a8794283ed40657d9742a210392edcffb03a4b48ac5083ed2bbc05b15b4bd2168bf00d69f446ca19cae3ca6f752ae&quot;&#125;]&apos; &apos;[&quot;cN3ggP6FEmQF9zWt2FUNP8rxCLxNLBCgRcmWfD7jtqAvx1Geud7w&quot;]&apos;</span><br></pre></td></tr></table></figure>
<p>  ===================== Result Y1 ====================</p>
<p>  0100000001dcc131278f885608d908c5cd5be77ef0c6ba6a174952d767f6686e5fe2a4c82a01000000910047304402204263c6b3970694a5c3fea4a781bdb2d97e9489b2b70972d1749419a251e2afb602207f5f4aac6d097adfc39ffddafe3321219f5fa6a3fa03ce2258b47bd7fff8e81e014752210387f89fca6896b35752e37cc3e61c614abfedfb80269a8794283ed40657d9742a210392edcffb03a4b48ac5083ed2bbc05b15b4bd2168bf00d69f446ca19cae3ca6f752aeffffffff01f0a29a3b000000001976a914ef8a388d9996d9b316b6e335183f483493770e6588ac00000000 </p>
<p>  =================================================</p>
</li>
</ul>
<h3 id="9-Use-private-key-2-to-sign-the-transaction-Y1"><a href="#9-Use-private-key-2-to-sign-the-transaction-Y1" class="headerlink" title="9. Use private key 2 to sign the transaction Y1"></a><strong>9. Use private key 2 to sign the transaction Y1</strong></h3><p>Use A2_privKey to sign Y1 and generate Y2.</p>
<ul>
<li><h4 id="9-1-command"><a href="#9-1-command" class="headerlink" title="9.1 command"></a>9.1 command</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:bitcoin-cli -datadir=2 signrawtransaction Y1 &apos;[&#123;&quot;txid&quot;:&quot;&quot;, &quot;vout&quot;:, &quot;scriptPubKey&quot;:&quot;A3_scriptPubKey&quot;, &quot;redeemScript&quot;: &quot;A3_redeemscript&quot;&#125;]&apos; &apos;[&quot;A2_privKey&quot;]&apos;</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="9-2-sign-transaction-Y1"><a href="#9-2-sign-transaction-Y1" class="headerlink" title="9.2 sign transaction Y1"></a>9.2 sign transaction Y1</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:bitcoin-cli -datadir=2 signrawtransaction 0100000001dcc131278f885608d908c5cd5be77ef0c6ba6a174952d767f6686e5fe2a4c82a01000000910047304402204263c6b3970694a5c3fea4a781bdb2d97e9489b2b70972d1749419a251e2afb602207f5f4aac6d097adfc39ffddafe3321219f5fa6a3fa03ce2258b47bd7fff8e81e014752210387f89fca6896b35752e37cc3e61c614abfedfb80269a8794283ed40657d9742a210392edcffb03a4b48ac5083ed2bbc05b15b4bd2168bf00d69f446ca19cae3ca6f752aeffffffff01f0a29a3b000000001976a914ef8a388d9996d9b316b6e335183f483493770e6588ac00000000 &apos;[&#123;&quot;txid&quot;:&quot;2ac8a4e25f6e68f667d75249176abac6f07ee75bcdc508d90856888f2731c1dc&quot;, &quot;vout&quot;:1, &quot;scriptPubKey&quot;:&quot;a9148a07cca1f387bad85410be81e9c0747be94234ea87&quot;,&quot;redeemScript&quot;:&quot;52210387f89fca6896b35752e37cc3e61c614abfedfb80269a8794283ed40657d9742a210392edcffb03a4b48ac5083ed2bbc05b15b4bd2168bf00d69f446ca19cae3ca6f752ae&quot;&#125;]&apos; &apos;[&quot;cQkEdyskEDiRJdadFgq9DD9yDbc6Kib5YPkNdH6fZX3U4TZxoj7n&quot;]&apos;</span><br></pre></td></tr></table></figure>
<p>  ===================== Result Y2 ====================</p>
<p>  0100000001dcc131278f885608d908c5cd5be77ef0c6ba6a174952d767f6686e5fe2a4c82a01000000d90047304402204263c6b3970694a5c3fea4a781bdb2d97e9489b2b70972d1749419a251e2afb602207f5f4aac6d097adfc39ffddafe3321219f5fa6a3fa03ce2258b47bd7fff8e81e01473044022061599deb6773f0fe57ffdad2cd382c16135e106add6ed6b48320969a8b314ef9022048ec961daf7e6dcffc2c6d954b6648a36c1b3f1ba9d9deef6a4874e56beb72db014752210387f89fca6896b35752e37cc3e61c614abfedfb80269a8794283ed40657d9742a210392edcffb03a4b48ac5083ed2bbc05b15b4bd2168bf00d69f446ca19cae3ca6f752aeffffffff01f0a29a3b000000001976a914ef8a388d9996d9b316b6e335183f483493770e6588ac00000000 </p>
<p>  =================================================</p>
</li>
</ul>
<h3 id="10-Boardcast-transaction-Y2-signed-after-7-and-make-record"><a href="#10-Boardcast-transaction-Y2-signed-after-7-and-make-record" class="headerlink" title="10. Boardcast transaction Y2 signed after (7) and make record."></a><strong>10. Boardcast transaction Y2 signed after (7) and make record.</strong></h3><ul>
<li><h4 id="10-1-command"><a href="#10-1-command" class="headerlink" title="10.1 command"></a>10.1 command</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:bitcoin-cli -datadir=2 sendrawtransaction y3</span><br><span class="line">~:make generate BLOCKS=10</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="10-2-boardcast"><a href="#10-2-boardcast" class="headerlink" title="10.2 boardcast"></a>10.2 boardcast</h4></li>
<li><h4 id="10-3-make-record"><a href="#10-3-make-record" class="headerlink" title="10.3 make record"></a>10.3 make record</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:bitcoin-cli -datadir=2 sendrawtransaction 0100000001dcc131278f885608d908c5cd5be77ef0c6ba6a174952d767f6686e5fe2a4c82a01000000d90047304402204263c6b3970694a5c3fea4a781bdb2d97e9489b2b70972d1749419a251e2afb602207f5f4aac6d097adfc39ffddafe3321219f5fa6a3fa03ce2258b47bd7fff8e81e01473044022061599deb6773f0fe57ffdad2cd382c16135e106add6ed6b48320969a8b314ef9022048ec961daf7e6dcffc2c6d954b6648a36c1b3f1ba9d9deef6a4874e56beb72db014752210387f89fca6896b35752e37cc3e61c614abfedfb80269a8794283ed40657d9742a210392edcffb03a4b48ac5083ed2bbc05b15b4bd2168bf00d69f446ca19cae3ca6f752aeffffffff01f0a29a3b000000001976a914ef8a388d9996d9b316b6e335183f483493770e6588ac00000000</span><br><span class="line">~:make generate BLOCKS=10</span><br></pre></td></tr></table></figure>
<p>  ==================== State ========================</p>
<p>  W1_balance: 6299.99987060<br>  W2_balance: 199.9998<br>  A1_balance: 189.9999<br>  A2_balance: 9.9999<br>  A3_balance: 0   </p>
<p>  =================================================</p>
</li>
</ul>
]]></content>
      <categories>
        <category>bitcoin</category>
      </categories>
      <tags>
        <tag>bitcoin</tag>
        <tag>数字货币</tag>
      </tags>
  </entry>
  <entry>
    <title>(1) vim g++ single file</title>
    <url>/2019/07/25/c++/1-vim-g-single-file/</url>
    <content><![CDATA[<p>使用g++命令编译链接一个cpp文件并运行</p>
<a id="more"></a>
<p>Ubuntu Linux</p>
<h3 id="1-g-work-flow"><a href="#1-g-work-flow" class="headerlink" title="1. g++ work flow"></a><strong>1. g++ work flow</strong></h3><p>preprocess-&gt;compile-&gt;assemble-&gt;link</p>
<h3 id="2-g-commands"><a href="#2-g-commands" class="headerlink" title="2. g++ commands"></a><strong>2. g++ commands</strong></h3><ul>
<li><h4 id="2-1-preprocess-usually-use-i-as-file-extension-for-this-process"><a href="#2-1-preprocess-usually-use-i-as-file-extension-for-this-process" class="headerlink" title="2.1 preprocess, usually use .i as file extension for this process."></a>2.1 preprocess, usually use .i as file extension for this process.</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">E                          preprocess cpp file, </span><br><span class="line">                            with -o to generate .i</span><br></pre></td></tr></table></figure>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">g++ -E helloworld.cpp -o helloworld.i</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-2-compile"><a href="#2-2-compile" class="headerlink" title="2.2 compile"></a>2.2 compile</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">S                   preprocess and compile .cpp </span><br><span class="line">                    or compile .i</span><br><span class="line">                    finally genearte .s for assemble</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-3-assemble"><a href="#2-3-assemble" class="headerlink" title="2.3 assemble"></a>2.3 assemble</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">c                              preprocess, compile and assemble .cpp  </span><br><span class="line">                                or compile and assemble .i</span><br><span class="line">                                or assemble .s</span><br><span class="line">                                finally generate .o for link</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-4-link"><a href="#2-4-link" class="headerlink" title="2.4 link"></a>2.4 link</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">                            preprocess, compile, assemble and link  .cpp  </span><br><span class="line">                                or compile, assemble and link .i</span><br><span class="line">                                or assemble and link .s</span><br><span class="line">                                or link .o</span><br><span class="line">                                finally generate .out for running</span><br><span class="line">```   </span><br><span class="line">you can use -o to specify the generation result inestead of a.out</span><br></pre></td></tr></table></figure>
<p>  g++ helloworld.cpp -o helloworld</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">+ #### 2.5 others</span><br></pre></td></tr></table></figure>
<p>  o                       specify target file name </p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> </span><br></pre></td></tr></table></figure>
<p>  ~:g++ helloworld.cpp -o helloworld</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">### **3. source code **</span><br><span class="line"></span><br><span class="line">**helloworld.cpp**</span><br><span class="line"></span><br><span class="line">```c++</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line"></span><br><span class="line">int main()&#123;</span><br><span class="line">    std::cout &lt;&lt; &quot;Hello World!&quot; &lt;&lt; std::endl;</span><br><span class="line"></span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="4-compile-and-link"><a href="#4-compile-and-link" class="headerlink" title="4. compile and link"></a><strong>4. compile and link</strong></h3><p><code>~:g++ helloworld.cpp</code><br>will generate a.out</p>
<h3 id="5-run-output"><a href="#5-run-output" class="headerlink" title="5. run output "></a><strong>5. run output </strong></h3><p><code>~:./a.out</code><br>will print “Hello World!”.</p>
]]></content>
      <categories>
        <category>c++</category>
      </categories>
      <tags>
        <tag>c++</tag>
        <tag>vim</tag>
        <tag>g++</tag>
      </tags>
  </entry>
  <entry>
    <title>(2) cmake-1 basical</title>
    <url>/2019/07/25/c++/2-cmake-1-basical/</url>
    <content><![CDATA[<p>使用cmake编译链接cpp文件，并管理依赖和头文件。<br>cmake是对make的包装，它可以根据配置文件对编译链接整个工程。</p>
<a id="more"></a>
<h3 id="1-simple-usage"><a href="#1-simple-usage" class="headerlink" title="1. simple usage"></a><strong>1. simple usage</strong></h3><p>cmake是对make的包装，底层依然是make</p>
<ul>
<li><h4 id="1-1-tree"><a href="#1-1-tree" class="headerlink" title="1.1 tree"></a>1.1 tree</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── build</span><br><span class="line">├── CMakeLists.txt</span><br><span class="line">└── test.cpp</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="1-2-test-cpp"><a href="#1-2-test-cpp" class="headerlink" title="1.2 test.cpp"></a>1.2 test.cpp</h4>  <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"Hello World!"</span>&lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="1-3-CMakeLists-txt"><a href="#1-3-CMakeLists-txt" class="headerlink" title="1.3 CMakeLists.txt"></a>1.3 CMakeLists.txt</h4>  <figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.10</span>)</span><br><span class="line"><span class="comment"># 这行非必须</span></span><br><span class="line"><span class="keyword">project</span>(testcmake)</span><br><span class="line"><span class="comment"># 这行表示使用指定的cpp文件生成可执行文件 testcmake</span></span><br><span class="line"><span class="keyword">add_executable</span>(testcmake</span><br><span class="line">        <span class="keyword">test</span>.cpp)</span><br></pre></td></tr></table></figure>
<p>  <strong>==&gt;</strong></p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">add_executable(testcmake</span><br><span class="line">        test.cpp)</span><br></pre></td></tr></table></figure>
<p>  testcmake is the output file name<br>  test.cpp is dependencies source code.</p>
</li>
<li><h4 id="1-4-cmake"><a href="#1-4-cmake" class="headerlink" title="1.4 cmake"></a>1.4 cmake</h4><p>  执行编译</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:cd build</span><br><span class="line">~:cmake ..</span><br><span class="line">~:make</span><br><span class="line">~:./testcmake</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="2-configure-a-header-file-for-make-g"><a href="#2-configure-a-header-file-for-make-g" class="headerlink" title="2. configure a header file for make(g++)"></a><strong>2. configure a header file for make(g++)</strong></h3><p>使用cmake脚本配置一个header文件，某个cpp可能include了这个头文件，但是在源码阶段不需要这个header（比如版本号等公共信息），但是在make时这个header必须存在，所以使用cmake生成。</p>
<ul>
<li><h4 id="2-1-CMakeLists-txt"><a href="#2-1-CMakeLists-txt" class="headerlink" title="2.1 CMakeLists.txt"></a>2.1 CMakeLists.txt</h4>  <figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.10</span>)</span><br><span class="line"><span class="keyword">project</span>(testcmake)</span><br><span class="line"><span class="comment"># The version number.</span></span><br><span class="line"><span class="keyword">set</span>(test_version_major <span class="number">1</span>)</span><br><span class="line"><span class="keyword">set</span>(test_version_minor <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Configure a header file to pass some of the CMake settings</span></span><br><span class="line"><span class="comment"># to the source code</span></span><br><span class="line"><span class="keyword">configure_file</span>(</span><br><span class="line">    <span class="string">"$&#123;PROJECT_SOURCE_DIR&#125;/testConfig.h.in"</span></span><br><span class="line">    <span class="string">"$&#123;PROJECT_BINARY_DIR&#125;/testConfig.h"</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add the binary tree to the search path for include files</span></span><br><span class="line"><span class="comment"># to the source code</span></span><br><span class="line"><span class="keyword">include_directories</span>(<span class="string">"$&#123;PROJECT_BINARY_DIR&#125;"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add the executable</span></span><br><span class="line"><span class="keyword">add_executable</span>(testCmake <span class="keyword">test</span>.cpp)</span><br></pre></td></tr></table></figure>
<p>  <strong>==&gt;</strong><br>  <code>set(test_version_major 1)</code><br>  will create a variable test_version_major=1<br>  <strong>==&gt;</strong>     </p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 这行将使用 testConfig.h.in 里的代码生成头文件 testConfig.h</span><br><span class="line">configure_file(  &quot;$&#123;PROJECT_SOURCE_DIR&#125;/testConfig.h.in&quot; </span><br><span class="line">                &quot;$&#123;PROJECT_BINARY_DIR&#125;/testConfig.h&quot;)</span><br></pre></td></tr></table></figure>
<p>  will use <code>&quot;${PROJECT_SOURCE_DIR}/testConfig.h.in&quot;</code> code to create <code>&quot;${PROJECT_BINARY_DIR}/testConfig.h&quot;</code></p>
<p>  <strong>==&gt;</strong></p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 上边的代码生成了头文件，这行代码使make包含生成的头文件所在目录，用于查找头文件</span><br><span class="line">include_directories(&quot;$&#123;PROJECT_BINARY_DIR&#125;&quot;)</span><br></pre></td></tr></table></figure>
<p>  will include this directory for make to search header files.</p>
</li>
<li><p>testConfig.h.in</p>
  <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> socket_version_major @socket_version_major@</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> socket_version_minor @socket_version_minor@</span></span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-2-test-cpp"><a href="#2-2-test-cpp" class="headerlink" title="2.2 test.cpp"></a>2.2 test.cpp</h4>  <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"testConfig.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"Hello World!"</span>&lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"Version "</span> &lt;&lt; socket_version_major &lt;&lt; <span class="string">"."</span> &lt;&lt; socket_version_minor &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="3-link-libraries"><a href="#3-link-libraries" class="headerlink" title="3. link libraries"></a><strong>3. link libraries</strong></h3><p>以上代码展示了生成可执行文件，这个例子展示创建共享库(静态so和动态a)，大多数文件是提供功能依赖，这些文件都要构建成库文件。</p>
<ul>
<li><h4 id="3-1-library"><a href="#3-1-library" class="headerlink" title="3.1 library"></a>3.1 library</h4><p>  库文件源码，一个独立的模块</p>
<p>  <strong>./lib_code/Add/Add.h</strong></p>
  <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> SOCKET_ADD_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SOCKET_ADD_H</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">//SOCKET_ADD_H</span></span></span><br></pre></td></tr></table></figure>
<p>  <strong>./lib_code/Add/Add.cpp</strong></p>
  <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Add.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> inputvalue)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> inputvalue+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  <strong>./lib_code/Add/CMakeLists.txt</strong></p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 这句把cpp文件编译成静态库文件Add_lib.so，add_library可以指定静态还是动态，默认静态SHARED</span><br><span class="line">add_library(Add_lib Add.cpp)</span><br></pre></td></tr></table></figure>
<p>  default type is <code>STATIC</code>.<br>  <code>add_library(Add_lib SHARED Add.cpp)</code> to create a .so for make.</p>
</li>
<li><h4 id="3-2-use-library"><a href="#3-2-use-library" class="headerlink" title="3.2 use library"></a>3.2 use library</h4><p>  引用库文件</p>
<p>  <strong>./CMakeLists.txt</strong></p>
  <figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.10</span>)</span><br><span class="line"><span class="keyword">project</span>(<span class="keyword">test</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_STANDARD <span class="number">11</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(test_version_major <span class="number">1</span>)</span><br><span class="line"><span class="keyword">set</span>(test_version_minor <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># include testConfig.h</span></span><br><span class="line"><span class="keyword">include_directories</span>(<span class="string">"$&#123;PROJECT_BINARY_DIR&#125;"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># generate testConfig.h</span></span><br><span class="line"><span class="keyword">configure_file</span>(</span><br><span class="line">        <span class="string">"$&#123;PROJECT_SOURCE_DIR&#125;/testConfig.h.in"</span></span><br><span class="line">        <span class="string">"$&#123;PROJECT_BINARY_DIR&#125;/testConfig.h"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># include Add.h</span></span><br><span class="line"><span class="comment"># 这句是包含头文件目录，因为可执行文件include了add的头文件，必须指明搜索路径</span></span><br><span class="line"><span class="keyword">include_directories</span>(<span class="string">"$&#123;PROJECT_SOURCE_DIR&#125;/lib_code/Add"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># run lib_code/Add/CMakeLists.txt</span></span><br><span class="line"><span class="comment"># 添加cmake子文件夹，这将会运行该文件夹下的cmake文件</span></span><br><span class="line"><span class="keyword">add_subdirectory</span>(lib_code/Add)</span><br><span class="line"></span><br><span class="line"><span class="keyword">add_executable</span>(testcmake</span><br><span class="line">        <span class="keyword">test</span>.cpp)</span><br><span class="line"><span class="comment"># link Add.so</span></span><br><span class="line"><span class="comment"># 为可执行文件链接add_library生成的库文件</span></span><br><span class="line"><span class="keyword">target_link_libraries</span>(testcmake Add_lib)</span><br></pre></td></tr></table></figure>
<p>  <strong>==&gt;</strong><br>  <code>add_subdirectory(lib_code/Add)</code><br>  will run CMakeLists.txt in this directory.</p>
<p>  <strong>==&gt;</strong></p>
<p>  <strong>./test.cpp</strong></p>
<p>  源码 include 库文件的header</p>
  <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"socketConfig.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Add.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"Hello World!"</span>&lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"Version "</span> &lt;&lt; socket_version_major &lt;&lt; <span class="string">"."</span> &lt;&lt; socket_version_minor &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"2+1="</span> &lt;&lt; add(<span class="number">2</span>) &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="3-3-cmake"><a href="#3-3-cmake" class="headerlink" title="3.3 cmake"></a>3.3 cmake</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:cd build</span><br><span class="line">~:rm -rf *</span><br><span class="line">~:cmake ..</span><br><span class="line">~:make</span><br><span class="line">~:testcmake</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="4-control-libraries"><a href="#4-control-libraries" class="headerlink" title="4. control libraries"></a><strong>4. control libraries</strong></h3><p>cmake的逻辑语句，对头文件做控制，对源码也可控制</p>
<ul>
<li><h4 id="4-1-option"><a href="#4-1-option" class="headerlink" title="4.1 option"></a>4.1 option</h4><p>  this command will setup a switch for libraries.<br>  <strong>./CMakeLists.txt</strong></p>
  <figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.10</span>)</span><br><span class="line"><span class="keyword">project</span>(<span class="keyword">test</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_STANDARD <span class="number">11</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(test_version_major <span class="number">1</span>)</span><br><span class="line"><span class="keyword">set</span>(test_version_minor <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># include testConfig.h</span></span><br><span class="line"><span class="keyword">include_directories</span>(<span class="string">"$&#123;PROJECT_BINARY_DIR&#125;"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># default value is OFF</span></span><br><span class="line"><span class="keyword">option</span>(</span><br><span class="line">        USE_MYADD</span><br><span class="line">        <span class="string">"Use my own add method"</span> <span class="keyword">ON</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># generate testConfig.h</span></span><br><span class="line"><span class="keyword">configure_file</span>(</span><br><span class="line">        <span class="string">"$&#123;PROJECT_SOURCE_DIR&#125;/testConfig.h.in"</span></span><br><span class="line">        <span class="string">"$&#123;PROJECT_BINARY_DIR&#125;/testConfig.h"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (USE_MYADD)</span><br><span class="line">    <span class="comment"># include Add.h</span></span><br><span class="line">    <span class="keyword">include_directories</span>(<span class="string">"$&#123;PROJECT_SOURCE_DIR&#125;/lib_code/Add"</span>)</span><br><span class="line">    <span class="comment"># run ./lib_code/Add/CMakeLists.txt</span></span><br><span class="line">    <span class="keyword">add_subdirectory</span>(lib_code/Add)</span><br><span class="line">    <span class="comment"># setup a variable for library  </span></span><br><span class="line">    <span class="keyword">set</span>(EXTRA_LIBS Add_lib)</span><br><span class="line"><span class="keyword">endif</span>(USE_MYADD)</span><br><span class="line"></span><br><span class="line"><span class="keyword">add_executable</span>(testcmake</span><br><span class="line">        <span class="keyword">test</span>.cpp)</span><br><span class="line"><span class="comment"># link Add.so</span></span><br><span class="line"><span class="keyword">target_link_libraries</span>(testcmake Add_lib)</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="4-2-cmakedefine"><a href="#4-2-cmakedefine" class="headerlink" title="4.2 cmakedefine"></a>4.2 cmakedefine</h4><p>  use cmakedefine to control define in code</p>
<p>  <strong>./testConfig.h.in</strong></p>
  <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> socket_version_major @socket_version_major@</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> socket_version_minor @socket_version_minor@</span></span><br><span class="line"><span class="meta">#cmakedefine USE_MYADD</span></span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="4-3-code"><a href="#4-3-code" class="headerlink" title="4.3 code"></a>4.3 code</h4><p>  <strong>./test.cpp</strong></p>
  <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"socketConfig.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> USE_MYADD</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Add.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"Hello World!"</span>&lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"Version "</span> &lt;&lt; socket_version_major &lt;&lt; <span class="string">"."</span> &lt;&lt; socket_version_minor &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> USE_MYADD</span></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"2+1="</span>&lt;&lt; add(<span class="number">2</span>) &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"closed"</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="4-4-cmake"><a href="#4-4-cmake" class="headerlink" title="4.4 cmake"></a>4.4 cmake</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:cd build</span><br><span class="line">~:rm -rf *</span><br><span class="line">~:cmake ..</span><br><span class="line">~:make</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="5-install"><a href="#5-install" class="headerlink" title="5. install"></a><strong>5. install</strong></h3><p>把生成的可执行文件添加到系统路径<br>把头文件添加到系统查找路径</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">install(TARGETS test DESTINATION bin)</span><br><span class="line">install(FILES $&#123;PROJECT_BINARY_DIR&#125;/testConfig.h DESTINATION include)</span><br></pre></td></tr></table></figure>
<ul>
<li><h4 id="5-1-Example"><a href="#5-1-Example" class="headerlink" title="5.1 Example"></a>5.1 Example</h4><p>  <strong>./CMakeLists.txt</strong></p>
  <figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.10</span>)</span><br><span class="line"><span class="keyword">project</span>(<span class="keyword">test</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_STANDARD <span class="number">11</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(test_version_major <span class="number">1</span>)</span><br><span class="line"><span class="keyword">set</span>(test_version_minor <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># include testConfig.h</span></span><br><span class="line"><span class="keyword">include_directories</span>(<span class="string">"$&#123;PROJECT_BINARY_DIR&#125;"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">option</span>(USE_MYADD <span class="string">"Use my own add method"</span> <span class="keyword">OFF</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># generate testConfig.h</span></span><br><span class="line"><span class="keyword">configure_file</span>(</span><br><span class="line">        <span class="string">"$&#123;PROJECT_SOURCE_DIR&#125;/testConfig.h.in"</span></span><br><span class="line">        <span class="string">"$&#123;PROJECT_BINARY_DIR&#125;/testConfig.h"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (USE_MYADD)</span><br><span class="line">    <span class="keyword">message</span>(<span class="string">"option is on"</span>)</span><br><span class="line"><span class="comment"># include Add.h</span></span><br><span class="line">    <span class="keyword">include_directories</span>(<span class="string">"$&#123;PROJECT_SOURCE_DIR&#125;/lib_code/Add"</span>)</span><br><span class="line">    <span class="comment"># run lib_code/Add/CMakeLists.txt</span></span><br><span class="line">    <span class="keyword">add_subdirectory</span>(lib_code/Add)</span><br><span class="line">    <span class="keyword">set</span>(EXTRA_LIBS Add)</span><br><span class="line"><span class="keyword">else</span>(USE_MYADD)</span><br><span class="line">    <span class="keyword">message</span>(<span class="string">"option is off"</span>)</span><br><span class="line"><span class="keyword">endif</span>(USE_MYADD)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">add_executable</span>(<span class="keyword">test</span></span><br><span class="line">        <span class="keyword">test</span>.cpp)</span><br><span class="line"><span class="comment"># add library</span></span><br><span class="line"><span class="keyword">target_link_libraries</span>(<span class="keyword">test</span> <span class="variable">$&#123;EXTRA_LIBS&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">install</span>(TARGETS <span class="keyword">test</span> DESTINATION bin)</span><br><span class="line"><span class="keyword">install</span>(FILES <span class="variable">$&#123;PROJECT_BINARY_DIR&#125;</span>/testConfig.h DESTINATION <span class="keyword">include</span>)</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <categories>
        <category>c++</category>
      </categories>
      <tags>
        <tag>cmake</tag>
        <tag>c++</tag>
      </tags>
  </entry>
  <entry>
    <title>(2) cmake-2 include_directories()</title>
    <url>/2019/07/25/c++/2-cmake-2-include-directories/</url>
    <content><![CDATA[<p>源码中的include如果未指明路径，在编译时会出错。<br>在<code>CMakeLists.txt</code>中<code>include_directories(路径)</code>，将会给make添加搜索路径。<br>注意，这样使用会使源码可读性变差。所以源码的结构最好别依赖构建工具。</p>
<a id="more"></a>
<p>源码中的include如果未指明路径，在编译时会出错。<br>在<code>CMakeLists.txt</code>中<code>include_directories(路径)</code>，将会给make添加搜索路径。<br>注意，这样使用会使源码可读性变差。所以源码的结构最好别依赖构建工具。</p>
]]></content>
      <categories>
        <category>c++</category>
      </categories>
      <tags>
        <tag>cmake</tag>
        <tag>c++</tag>
      </tags>
  </entry>
  <entry>
    <title>(2) cmake-3 include test.cpp</title>
    <url>/2019/07/25/c++/2-cmake-3-include-test-cpp/</url>
    <content><![CDATA[<p>cmake管理cpp文件依赖。<br>在<code>main.cpp</code>里<code>include test.cpp</code>。</p>
<a id="more"></a>
<h3 id="1-basic-include-quot-test-cpp-quot"><a href="#1-basic-include-quot-test-cpp-quot" class="headerlink" title="1. basic #include &quot;test.cpp&quot;"></a><strong>1. basic <code>#include &quot;test.cpp&quot;</code></strong></h3><p>main()[main.cpp] will use sum()[sum.cpp]</p>
<ul>
<li><h4 id="1-1-tree"><a href="#1-1-tree" class="headerlink" title="1.1 tree"></a>1.1 tree</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── build</span><br><span class="line">├── CMakeLists.txt</span><br><span class="line">├── main.cpp</span><br><span class="line">└── sum.cpp</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="1-2-main-cpp"><a href="#1-2-main-cpp" class="headerlink" title="1.2 main.cpp"></a>1.2 main.cpp</h4>  <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"sum.cpp"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;sum(<span class="number">1</span>,<span class="number">2</span>)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="1-3-sum-cpp"><a href="#1-3-sum-cpp" class="headerlink" title="1.3 sum.cpp"></a>1.3 sum.cpp</h4>  <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="1-4-g"><a href="#1-4-g" class="headerlink" title="1.4 g++"></a>1.4 g++</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:g++ main.cpp</span><br><span class="line">~:./a.out</span><br><span class="line">3</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="1-5-cmake"><a href="#1-5-cmake" class="headerlink" title="1.5 cmake"></a>1.5 cmake</h4><ul>
<li><h5 id="1-5-1-CMakeLists-txt"><a href="#1-5-1-CMakeLists-txt" class="headerlink" title="1.5.1 CMakeLists.txt"></a>1.5.1 CMakeLists.txt</h5>  <figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.10</span>)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_STANDARD <span class="number">11</span>)</span><br><span class="line"><span class="keyword">project</span>(<span class="keyword">test</span>)</span><br><span class="line"><span class="keyword">message</span>(status <span class="string">"project: test"</span>)</span><br><span class="line"><span class="keyword">message</span>(status <span class="string">"project directory: $&#123;PROJECT_SOURCE_DIR&#125;"</span>)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_BUILD_TYPE debug)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_C_FLAGS_DEBUG <span class="string">"-g -Wall"</span>)</span><br><span class="line"><span class="keyword">add_executable</span>(main main.cpp)</span><br></pre></td></tr></table></figure>
</li>
<li><h5 id="1-5-2-build"><a href="#1-5-2-build" class="headerlink" title="1.5.2 build"></a>1.5.2 build</h5>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:cd build</span><br><span class="line">~:rm -rf *</span><br><span class="line">~:cmake ..</span><br><span class="line">~:make</span><br><span class="line">~:./main</span><br><span class="line">3</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>c++</category>
      </categories>
      <tags>
        <tag>cmake</tag>
        <tag>c++</tag>
      </tags>
  </entry>
  <entry>
    <title>(1) Docker</title>
    <url>/2019/07/25/docker/1-Docker/</url>
    <content><![CDATA[<p>docker的安装配置。<br>操作，镜像管理。<br>连接实例。终端融合。</p>
<a id="more"></a>
<h3 id="1-install-docker"><a href="#1-install-docker" class="headerlink" title="1. install docker"></a><strong>1. install docker</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:wget -qO- https://get.docker.com/ | sh</span><br><span class="line">~:sudo usermod -aG docker user_group</span><br><span class="line">~:reboot</span><br><span class="line">~:sudo service docker start</span><br><span class="line">~:docker run hello-world</span><br></pre></td></tr></table></figure>
<h3 id="2-docker-mirrors"><a href="#2-docker-mirrors" class="headerlink" title="2. docker mirrors"></a><strong>2. docker mirrors</strong></h3><ul>
<li><h4 id="2-1-etc-docker-daemon-json"><a href="#2-1-etc-docker-daemon-json" class="headerlink" title="2.1 /etc/docker/daemon.json"></a>2.1 /etc/docker/daemon.json</h4> <figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"registry-mirrors"</span>: [<span class="string">"http://hub-mirror.c.163.com"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="3-docker-command"><a href="#3-docker-command" class="headerlink" title="3. docker command"></a><strong>3. docker command</strong></h3><ul>
<li><h4 id="3-1-run"><a href="#3-1-run" class="headerlink" title="3.1 run"></a>3.1 run</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:docker run ubuntu:15.10 /bin/echo &quot;Hello world&quot;</span><br></pre></td></tr></table></figure>
<p>  run <code>ubuntu:15.10</code> and use <code>/bin/echo</code> to print “Hello world”.</p>
<p>  命令格式：docker run [OPTIONS] IMAGE [COMMAND] [ARG…]</p>
<p>  run 命令使用镜像创建容器实例并启动，COMMAND ARGS… 表示任务和任务参数， run命令必须指定任务，但是任务可以在 dockerfile的 Cmd节点配置，所以命令行里是一个可选参数。</p>
<p>  <code>docker inspect name</code> 可以查看 dockerfile。</p>
<p>  任务中的前台任务决定了容器的运行时间。docker的机制是如果没有任何前台任务，则认为容器空闲，容器会自动exit。所以对于一些service类型的任务可能需要改到前台执行。</p>
<p>  自定义容器时，一般用一个空的Linux镜像，没有指定任务，为了保持容器运行，一般会指定 /bin/bash, 然后使用 -t 创建一个终端使之在前台运行，但是终端的exit命令会退出终端导致前台任务结束，容器也就停止了。所以要增加一个 -d 守护进程，退出或在后台可以继续保持前台任务执行。 -i 参数可以连接到容器的标准输入，标准输入也是一个前台任务(使用ctrl+c会退出stdin)，一般不单独用。</p>
</li>
<li><h4 id="3-2-ps"><a href="#3-2-ps" class="headerlink" title="3.2 ps"></a>3.2 ps</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:docker ps</span><br></pre></td></tr></table></figure>
<p>  list the running containers.</p>
</li>
<li><h4 id="3-3-logs"><a href="#3-3-logs" class="headerlink" title="3.3 logs"></a>3.3 logs</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:docker logs &#123;name[or container_id]&#125;</span><br><span class="line">~:docker logs -f &#123;&#125;</span><br></pre></td></tr></table></figure>
<p>  pirnt the specified container’s logs.<br>  <code>logs -f</code> just like <code>tail -f</code>.</p>
</li>
<li><h4 id="3-4-stop"><a href="#3-4-stop" class="headerlink" title="3.4 stop"></a>3.4 stop</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:docker stop &#123;name[or container_id]&#125;</span><br></pre></td></tr></table></figure>
<p>  stop the specified container.</p>
</li>
<li><h4 id="3-5-—help"><a href="#3-5-—help" class="headerlink" title="3.5 —help"></a>3.5 —help</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:docker [command] --help</span><br></pre></td></tr></table></figure>
<p>  print help info of a docker command.</p>
</li>
<li><h4 id="3-6-pull"><a href="#3-6-pull" class="headerlink" title="3.6 pull"></a>3.6 pull</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:docker pull [repository]</span><br></pre></td></tr></table></figure>
<p>  pull a repository image.</p>
</li>
<li><h4 id="3-7-images"><a href="#3-7-images" class="headerlink" title="3.7 images"></a>3.7 images</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:docker images</span><br></pre></td></tr></table></figure>
<p>  list the images in this computer.</p>
</li>
<li><h4 id="3-8-port"><a href="#3-8-port" class="headerlink" title="3.8 port"></a>3.8 port</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:docker port &#123;[name] or [container_id]&#125; &#123;[null] or [container port]&#125;</span><br></pre></td></tr></table></figure>
<p>  print the port mapping of a container.</p>
</li>
<li><h4 id="3-9-rm"><a href="#3-9-rm" class="headerlink" title="3.9 rm"></a>3.9 rm</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:docker rm &#123;[name] or [container_id]&#125;</span><br></pre></td></tr></table></figure>
<p>  rm a container.</p>
</li>
<li><h4 id="3-10-search"><a href="#3-10-search" class="headerlink" title="3.10 search"></a>3.10 search</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:docker search [string]</span><br></pre></td></tr></table></figure>
<p>  search specified content such like tomcat or mysql in image repository.</p>
</li>
<li><h4 id="3-11-commit"><a href="#3-11-commit" class="headerlink" title="3.11 commit"></a>3.11 commit</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:docker commit -m=&quot;commit info&quot; -a=&quot;author name&quot; [container_id] [target repository name like &apos;repository_name:tag&apos;]</span><br></pre></td></tr></table></figure>
<p>  save your changes in this container by create a new container.<br>  一般用于自定义容器，对一个容器实例做的任何修改保存为一个新的image。</p>
</li>
<li><h4 id="3-12-tag"><a href="#3-12-tag" class="headerlink" title="3.12 tag"></a>3.12 tag</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:docker tag [repo[:tag]] [repository_name:tag]</span><br></pre></td></tr></table></figure>
<p>  使用已有镜像创建一个自定义镜像，一般是使用别人的镜像 tag 出一个自己的初始镜像，然后改造。</p>
</li>
</ul>
<h3 id="4-docker-run命令补充"><a href="#4-docker-run命令补充" class="headerlink" title="4. docker run命令补充"></a><strong>4. docker run命令补充</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-t    create a terminal in the container</span><br><span class="line">-i     open stdin</span><br><span class="line">-d    container work in background</span><br><span class="line">-p    端口映射，docker run -p 5000:5000 &#123;&#125; &#123;&#125; --&gt; mapping container port to specified host port.</span><br><span class="line">-P   随机端口映射，docker run -P &#123;&#125; &#123;&#125; --&gt; mapping container port to random host port.</span><br><span class="line">run --name     docker run --name [name] &#123;&#125; &#123;&#125; --&gt; run a container and make a name for it.</span><br></pre></td></tr></table></figure>
<p><code>-p</code> 指定端口映射，格式 [宿主机ip:][宿主机端口:]容器端口，除了容器端口是必须参数，其他两个可以不指定。宿主机一般有多个ip，比如多网卡设备，默认为空表示使用所有宿主机ip，宿主机端口不指定时将会做随机映射。</p>
<p><code>-P</code> 为dockerfile的EXPOSE或 参数中指定的端口做随机映射。</p>
<h3 id="5-attach-the-same-docker-terminal"><a href="#5-attach-the-same-docker-terminal" class="headerlink" title="5. attach the same docker terminal"></a><strong>5. <code>attach</code> the same docker terminal</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:docker attach &lt;container_id&gt;</span><br></pre></td></tr></table></figure>
<p>open the same terminal of a container.</p>
<h3 id="6-exec-execute-another-terminal"><a href="#6-exec-execute-another-terminal" class="headerlink" title="6. exec execute another terminal"></a><strong>6. <code>exec</code> execute another terminal</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:docker exec -it &lt;container_id&gt; bash</span><br></pre></td></tr></table></figure>
<p>open a new terminal of a docker container.</p>
<h3 id="7-轻量级linux镜像-alpine"><a href="#7-轻量级linux镜像-alpine" class="headerlink" title="7. 轻量级linux镜像 alpine"></a><strong>7. 轻量级linux镜像 alpine</strong></h3><h3 id="8-其他命令"><a href="#8-其他命令" class="headerlink" title="8. 其他命令"></a><strong>8. 其他命令</strong></h3><ul>
<li><p>查看容器或镜像的dockerfile</p>
<p>  <code>docker inspect [name/id]</code></p>
</li>
<li><p>查看所有网卡</p>
<p>  <code>docker network ls</code></p>
</li>
<li><p>查看网卡配置，比如bridge</p>
<p>  <code>docker network inspect bridge</code></p>
</li>
</ul>
<h3 id="9-注意"><a href="#9-注意" class="headerlink" title="9. 注意"></a><strong>9. 注意</strong></h3><h4 id="9-1-禁止套娃：容器不能二次虚拟化，所以在容器中无法再次启动docker容器。如果有这种特殊的需求，可以使用-docker-in-docker-镜像，对应的仓库是-docker-dind"><a href="#9-1-禁止套娃：容器不能二次虚拟化，所以在容器中无法再次启动docker容器。如果有这种特殊的需求，可以使用-docker-in-docker-镜像，对应的仓库是-docker-dind" class="headerlink" title="9.1 禁止套娃：容器不能二次虚拟化，所以在容器中无法再次启动docker容器。如果有这种特殊的需求，可以使用 docker in docker 镜像，对应的仓库是 docker-dind"></a>9.1 禁止套娃：容器不能二次虚拟化，所以在容器中无法再次启动docker容器。如果有这种特殊的需求，可以使用 docker in docker 镜像，对应的仓库是 docker-dind</h4><h4 id="9-2-权限设置"><a href="#9-2-权限设置" class="headerlink" title="9.2 权限设置"></a>9.2 权限设置</h4><p>docker 守护进程默认只开启了 unix socket 监听，对应的进程文件为 /var/run/docker.sock，当然你也可以在service文件里修改。默认的这个文件归属于docker用户组和超级用户，普通用户组没有权限操作这个文件，所以普通用户需要添加到docker组。</p>
<p>可能系统默认不开启docker，开启之后会影响性能尤其是安装了k8s之后，所以可能需要手动开启docker进程。</p>
<ul>
<li><p>命令：添加到docker用户组</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo gpasswd -a user_name docker</span><br></pre></td></tr></table></figure>
</li>
<li><p>权限生效，命令或重启电脑</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 刷新用户组，只对当前会话有效</span><br><span class="line">~:newgrp docker</span><br></pre></td></tr></table></figure>
</li>
<li><p>命令：从docker用户组删除用户</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo gpasswd -d user_name docker</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>docker也支持tcp监听，本地测试不需要开启。在service里配置，一般开启远程就是指开启tcp监听，如果需要在远程服务器上上传镜像，一般是需要开启这个的。</p>
<h4 id="9-3-linux上的用户界面-cockpit"><a href="#9-3-linux上的用户界面-cockpit" class="headerlink" title="9.3 linux上的用户界面 cockpit"></a>9.3 linux上的用户界面 cockpit</h4><p>manajro 安装cockpit，然后在启动<code>systemctl start cockpit</code>。</p>
<p>然后打开浏览器<code>https://localhost:9090</code>，用户名与密码就是当前系统的用户名和密码，可以方便的管理容器。</p>
]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>(2) cmake-4 include test.h</title>
    <url>/2019/07/25/c++/2-cmake-4-include-test-h/</url>
    <content><![CDATA[<p>cmake管理头文件依赖。<br>在头文件里定义函数，在cpp里实现。<br>在main.cpp里引入上述的头文件，即可直接使用cpp里实现的函数功能。</p>
<a id="more"></a>
<h3 id="1-include-quot-test-h-quot"><a href="#1-include-quot-test-h-quot" class="headerlink" title="1. #include &quot;test.h&quot;"></a><strong>1. <code>#include &quot;test.h&quot;</code></strong></h3><ul>
<li><h4 id="1-1-tree"><a href="#1-1-tree" class="headerlink" title="1.1 tree"></a>1.1 tree</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── build</span><br><span class="line">├── CMakeLists.txt</span><br><span class="line">├── main.cpp</span><br><span class="line">├── sum.h</span><br><span class="line">└── sum.cpp</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="1-2-main-cpp"><a href="#1-2-main-cpp" class="headerlink" title="1.2 main.cpp"></a>1.2 main.cpp</h4>  <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"sum.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;sum(<span class="number">1</span>,<span class="number">2</span>)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="1-3-sum-h"><a href="#1-3-sum-h" class="headerlink" title="1.3 sum.h"></a>1.3 sum.h</h4>  <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span>,<span class="keyword">int</span>)</span></span>;</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="1-4-sum-cpp"><a href="#1-4-sum-cpp" class="headerlink" title="1.4 sum.cpp"></a>1.4 sum.cpp</h4>  <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"sum.h&gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta-string">int sum(int a, int b)</span></span></span><br><span class="line"><span class="meta"><span class="meta-string">&#123;</span></span></span><br><span class="line"><span class="meta"><span class="meta-string">return a+b;</span></span></span><br><span class="line"><span class="meta"><span class="meta-string">&#125;</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="1-5-g"><a href="#1-5-g" class="headerlink" title="1.5 g++"></a>1.5 g++</h4><ul>
<li><h5 id="1-5-1-once-all"><a href="#1-5-1-once-all" class="headerlink" title="1.5.1 once all"></a>1.5.1 once all</h5>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:g++ main.cpp sum.cpp</span><br><span class="line">~:./a.out</span><br><span class="line">3</span><br></pre></td></tr></table></figure>
</li>
<li><h5 id="1-5-2-by-step"><a href="#1-5-2-by-step" class="headerlink" title="1.5.2 by step"></a>1.5.2 by step</h5>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:g++ -c sum.cpp -o sum.o</span><br><span class="line">~:g++ -c main.cpp -o main.o</span><br><span class="line">~:g++ main.o sum.o</span><br><span class="line">~:./a.out</span><br><span class="line">3</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><h4 id="1-6-cmake"><a href="#1-6-cmake" class="headerlink" title="1.6 cmake"></a>1.6 cmake</h4><ul>
<li><h5 id="1-6-1-CMakeLists-txt"><a href="#1-6-1-CMakeLists-txt" class="headerlink" title="1.6.1 CMakeLists.txt"></a>1.6.1 CMakeLists.txt</h5>  <figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.10</span>)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_STANDARD <span class="number">11</span>)</span><br><span class="line"><span class="keyword">project</span>(<span class="keyword">test</span>)</span><br><span class="line"><span class="keyword">message</span>(status <span class="string">"project: test"</span>)</span><br><span class="line"><span class="keyword">message</span>(status <span class="string">"project directory: $&#123;PROJECT_SOURCE_DIR&#125;"</span>)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_BUILD_TYPE debug)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_C_FLAGS_DEBUG <span class="string">"-g -Wall"</span>)</span><br><span class="line"><span class="keyword">add_executable</span>(main main.cpp sum.cpp)</span><br></pre></td></tr></table></figure>
</li>
<li><h5 id="1-6-2-build"><a href="#1-6-2-build" class="headerlink" title="1.6.2 build"></a>1.6.2 build</h5>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:cd build</span><br><span class="line">~:rm -rf *</span><br><span class="line">~:cmake ..</span><br><span class="line">~:make</span><br><span class="line">~:./main</span><br><span class="line">3</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h3 id="2-change-to-modules"><a href="#2-change-to-modules" class="headerlink" title="2. change to modules"></a><strong>2. change to modules</strong></h3><ul>
<li><h4 id="2-1-tree"><a href="#2-1-tree" class="headerlink" title="2.1 tree"></a>2.1 tree</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── build</span><br><span class="line">├── CMakeLists.txt</span><br><span class="line">├── main.cpp</span><br><span class="line">├── sum</span><br><span class="line">│     ├── CMakeLists.txt</span><br><span class="line">│     ├── sum.h</span><br><span class="line">│     └── sum.cpp</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-2-main-cpp"><a href="#2-2-main-cpp" class="headerlink" title="2.2 main.cpp"></a>2.2 main.cpp</h4>  <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"./sum/sum.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;sum(<span class="number">1</span>,<span class="number">2</span>)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-3-sum-h"><a href="#2-3-sum-h" class="headerlink" title="2.3 sum.h"></a>2.3 sum.h</h4></li>
<li><h4 id="2-4-sum-cpp"><a href="#2-4-sum-cpp" class="headerlink" title="2.4 sum.cpp"></a>2.4 sum.cpp</h4></li>
<li><h4 id="2-5-g"><a href="#2-5-g" class="headerlink" title="2.5 g++"></a>2.5 g++</h4><ul>
<li><h5 id="2-5-1-once-all"><a href="#2-5-1-once-all" class="headerlink" title="2.5.1 once all"></a>2.5.1 once all</h5>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:g++ main.cpp sum/sum.cpp</span><br><span class="line">~:./a.out</span><br><span class="line">3</span><br></pre></td></tr></table></figure>
</li>
<li><h5 id="2-5-2-by-step"><a href="#2-5-2-by-step" class="headerlink" title="2.5.2 by step"></a>2.5.2 by step</h5>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:g++ -c sum/sum.cpp -o sum/sum.o</span><br><span class="line">~:g++ -c main.cpp -c main.o</span><br><span class="line">~:g++ main.o sum/sum.o</span><br><span class="line">~:./a.out</span><br><span class="line">3</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><h4 id="2-6-cmake"><a href="#2-6-cmake" class="headerlink" title="2.6 cmake"></a>2.6 cmake</h4><ul>
<li><h5 id="2-6-1-script"><a href="#2-6-1-script" class="headerlink" title="2.6.1 script"></a>2.6.1 script</h5><p>  <strong>./CMakeLists.txt</strong></p>
  <figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.10</span>)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_STANDARD <span class="number">11</span>)</span><br><span class="line"><span class="keyword">project</span>(<span class="keyword">test</span>)</span><br><span class="line"><span class="keyword">message</span>(status <span class="string">"project: test"</span>)</span><br><span class="line"><span class="keyword">message</span>(status <span class="string">"project directory: $&#123;PROJECT_SOURCE_DIR&#125;"</span>)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_BUILD_TYPE debug)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_C_FLAGS_DEBUG <span class="string">"-g -Wall"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">add_subdirectory</span>(./sum)</span><br><span class="line"></span><br><span class="line"><span class="keyword">add_executable</span>(main main.cpp)</span><br><span class="line"><span class="keyword">target_link_libraries</span>(main sum_lib)</span><br></pre></td></tr></table></figure>
<p>  <strong>./sum/CMakeLists.txt</strong></p>
  <figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">add_library</span>(sum_lib sum.cpp)</span><br></pre></td></tr></table></figure>
</li>
<li><h5 id="2-6-2-run"><a href="#2-6-2-run" class="headerlink" title="2.6.2 run"></a>2.6.2 run</h5>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:cd build</span><br><span class="line">~:cmake ..</span><br><span class="line">~:make</span><br><span class="line">~:./main</span><br><span class="line">3</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h3 id="3-more-than-one-modules"><a href="#3-more-than-one-modules" class="headerlink" title="3. more than one modules"></a><strong>3. more than one modules</strong></h3><ul>
<li><h4 id="3-1-CMakeLists-txt"><a href="#3-1-CMakeLists-txt" class="headerlink" title="3.1 CMakeLists.txt"></a>3.1 CMakeLists.txt</h4>  <figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.10</span>)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_STANDARD <span class="number">11</span>)</span><br><span class="line"><span class="keyword">project</span>(<span class="keyword">test</span>)</span><br><span class="line"><span class="keyword">message</span>(status <span class="string">"project: test"</span>)</span><br><span class="line"><span class="keyword">message</span>(status <span class="string">"project directory: $&#123;PROJECT_SOURCE_DIR&#125;"</span>)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_BUILD_TYPE debug)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_C_FLAGS_DEBUG <span class="string">"-g -Wall"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">add_subdirectory</span>(./sum)</span><br><span class="line"><span class="keyword">add_subdirectory</span>(./my_module2)</span><br><span class="line"></span><br><span class="line"><span class="keyword">add_executable</span>(main main.cpp)</span><br><span class="line"><span class="keyword">target_link_libraries</span>(main sum_lib module2_lib)</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <categories>
        <category>c++</category>
      </categories>
      <tags>
        <tag>cmake</tag>
        <tag>c++</tag>
      </tags>
  </entry>
  <entry>
    <title>(3) tcp socket server</title>
    <url>/2019/07/26/c++/3-tcp-socket-server/</url>
    <content><![CDATA[<p>c++ socket编程 服务端源码</p>
<a id="more"></a>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/socket.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;arpa/inet.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;netinet/in.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cerrno&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_MSG_SIZE 256</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SERVER_PORT  9987</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BACKLOG 2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GetServerAddr</span><span class="params">(<span class="keyword">char</span> * addrname)</span></span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"please input server addr:"</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cin</span> &gt;&gt; addrname;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">(<span class="number">3</span>) tcp socket server</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span>&lt;&lt;<span class="string">"starting"</span>&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">int</span> sock_fd,client_fd; </span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">server_addr</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">client_addr</span>;</span> </span><br><span class="line">    <span class="keyword">char</span> msg[MAX_MSG_SIZE];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// (1) create socket descriptor</span></span><br><span class="line">    <span class="keyword">int</span> server_sockfd=socket(AF_INET,SOCK_STREAM,<span class="number">0</span>);</span><br><span class="line">    <span class="comment">// if failed to create socket descriptor</span></span><br><span class="line">    <span class="keyword">if</span>(server_sockfd&lt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">cerr</span> &lt;&lt; <span class="string">"socket Error:"</span>&lt;&lt;strerror(errno)&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// (2) init socket params</span></span><br><span class="line">    <span class="keyword">socklen_t</span>  addrlen=<span class="keyword">sizeof</span>(struct sockaddr_in);</span><br><span class="line">    bzero(&amp;server_addr,addrlen);</span><br><span class="line">    server_addr.sin_family=AF_INET;</span><br><span class="line">    server_addr.sin_addr.s_addr=htonl(INADDR_ANY);</span><br><span class="line">    server_addr.sin_port=htons(SERVER_PORT);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// (3) bind</span></span><br><span class="line">    <span class="keyword">if</span>(bind(server_sockfd,(struct sockaddr*)&amp;server_addr,<span class="keyword">sizeof</span>(struct sockaddr_in))&lt;<span class="number">0</span>)&#123; </span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">cerr</span> &lt;&lt; <span class="string">"Bind Error:"</span>&lt;&lt; strerror(errno)&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// (4) listen</span></span><br><span class="line">    <span class="keyword">if</span>(listen(server_sockfd,BACKLOG)&lt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">cerr</span> &lt;&lt; <span class="string">"Listen Error:"</span> &lt;&lt; strerror(errno)&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">        close(ser_sockfd);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// wait for connection </span></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="comment">// (5) accept</span></span><br><span class="line">        <span class="keyword">int</span> client_sockfd=accept(server_sockfd,(struct sockaddr*) &amp;client_addr, &amp;addrlen);</span><br><span class="line">        <span class="keyword">if</span>(client_sockfd&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">cerr</span> &lt;&lt; <span class="string">"Accept Error:"</span> &lt;&lt; strerror(errno)&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">// (6) receieve and send</span></span><br><span class="line">            recv(client_sockfd, msg, (<span class="keyword">size_t</span>)MAX_MSG_SIZE, <span class="number">0</span>); </span><br><span class="line">            <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"received a connection from:"</span> &lt;&lt; inet_ntoa(cli_addr.sin_addr)&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; msg &lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">            <span class="built_in">strcpy</span>(msg,<span class="string">"hi,I am server!"</span>);</span><br><span class="line">            send(client_sockfd, msg, <span class="keyword">sizeof</span>(msg),<span class="number">0</span>); </span><br><span class="line">            close(client_sockfd);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    close(server_sockfd);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>(1)  create socket descriptor<br>(2) init the socket params<br>(3) bind<br>(4) listen<br>(5) accept<br>(6) receieve and send</p>
]]></content>
      <categories>
        <category>c++</category>
      </categories>
      <tags>
        <tag>c++</tag>
        <tag>socket</tag>
      </tags>
  </entry>
  <entry>
    <title>(4) tcp socket client</title>
    <url>/2019/07/26/c++/4-tcp-socket-client/</url>
    <content><![CDATA[<p>c++ socket编程，客户端源码。</p>
<a id="more"></a>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/socket.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;arpa/inet.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;netinet/in.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cerrno&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_MSG_SIZE 256</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SERVER_PORT  9987</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GetServerAddr</span><span class="params">(<span class="keyword">char</span> * addrname)</span></span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"please input server addr:"</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cin</span> &gt;&gt; addrname;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cli_sockfd;</span><br><span class="line">    <span class="keyword">int</span> addrlen;</span><br><span class="line">    <span class="keyword">char</span> seraddr[<span class="number">14</span>];</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">ser_addr</span>, <span class="title">cli_addr</span>;</span></span><br><span class="line">    <span class="keyword">char</span> msg[MAX_MSG_SIZE];<span class="comment">/* 缓冲区*/</span></span><br><span class="line"></span><br><span class="line">    GetServerAddr(seraddr);</span><br><span class="line">   </span><br><span class="line">    <span class="comment">// (1)  create socket descriptor</span></span><br><span class="line">    cli_sockfd=socket(AF_INET,SOCK_STREAM,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(cli_sockfd&lt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">cerr</span> &lt;&lt; <span class="string">"socket Error:"</span>&lt;&lt;strerror(errno)&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// (2) init the client socket params</span></span><br><span class="line">    addrlen=<span class="keyword">sizeof</span>(struct sockaddr_in);</span><br><span class="line">    bzero(&amp;ser_addr,addrlen);</span><br><span class="line">    cli_addr.sin_family=AF_INET;</span><br><span class="line">    cli_addr.sin_addr.s_addr=htonl(INADDR_ANY);</span><br><span class="line">    cli_addr.sin_port=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// (3) bind</span></span><br><span class="line">    <span class="keyword">if</span>(bind(cli_sockfd,(struct sockaddr*)&amp;cli_addr,addrlen)&lt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">cerr</span> &lt;&lt; <span class="string">"Bind Error:"</span>&lt;&lt; strerror(errno)&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// (4) init the server connection params</span></span><br><span class="line">    addrlen=<span class="keyword">sizeof</span>(struct sockaddr_in);</span><br><span class="line">    bzero(&amp;ser_addr,addrlen);</span><br><span class="line">    ser_addr.sin_family=AF_INET;</span><br><span class="line">    ser_addr.sin_addr.s_addr=inet_addr(seraddr);</span><br><span class="line">    ser_addr.sin_port=htons(SERVER_PORT);</span><br><span class="line">    <span class="comment">// (5) connect to the server</span></span><br><span class="line">    <span class="keyword">if</span>(connect(cli_sockfd,(struct sockaddr*)&amp;ser_addr, addrlen)!=<span class="number">0</span>)<span class="comment">/*请求连接*/</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">cerr</span> &lt;&lt; <span class="string">"Connect Error:"</span> &lt;&lt; strerror(errno)&lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">        close(cli_sockfd);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// (6) receieve and send</span></span><br><span class="line">    <span class="built_in">strcpy</span>(msg,<span class="string">"hi,I am client!"</span>);</span><br><span class="line">    send(cli_sockfd, msg, <span class="keyword">sizeof</span>(msg),<span class="number">0</span>);</span><br><span class="line">    recv(cli_sockfd, msg, MAX_MSG_SIZE,<span class="number">0</span>); </span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; msg &lt;&lt;<span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">    close(cli_sockfd);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>(1) create socket descriptor<br>(2) init the socket params<br>(3) bind<br>(4) init the server connection params<br>(5) connect to server<br>(6) receieve and send</p>
]]></content>
      <categories>
        <category>c++</category>
      </categories>
      <tags>
        <tag>c++</tag>
        <tag>socket</tag>
      </tags>
  </entry>
  <entry>
    <title>docker-mariadb</title>
    <url>/2020/06/29/docker/docker-mariadb/</url>
    <content><![CDATA[<p>使用 docker 创建 mariadb 实例，挂载硬盘做数据持久化。</p>
<a id="more"></a>
<h3 id="1-拉取镜像"><a href="#1-拉取镜像" class="headerlink" title="1. 拉取镜像"></a>1. 拉取镜像</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:docker pull mariadb</span><br></pre></td></tr></table></figure>
<h3 id="2-创建容器"><a href="#2-创建容器" class="headerlink" title="2. 创建容器"></a>2. 创建容器</h3><p>一般创建 mariadb(或者 mysql)容器，需要映射 3306 端口，创建 root 账户的密码，同时挂载数据目录、日志目录和配置目录。<br>注意后台运行 -d<br>中文编码 —character-set-server=utf8 —collation-server=utf8_bin<br>日志挂载到物理机</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:docker run --name mysql-test -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 \</span><br><span class="line">    -v /usr/local/docker/mysql/conf:/etc/mysql \</span><br><span class="line">    -v /usr/local/docker/mysql/logs:/var/log/mysql \</span><br><span class="line">    -v /usr/local/docker/mysql/data:/var/lib/mysql \</span><br><span class="line">    -v /etc/localtime:/etc/localtime:ro \</span><br><span class="line">    -itd mariadb \</span><br><span class="line">    --character-set-server=utf8 --collation-server=utf8_bin</span><br></pre></td></tr></table></figure>
<h3 id="3-创建读写分离的主备集群"><a href="#3-创建读写分离的主备集群" class="headerlink" title="3. 创建读写分离的主备集群"></a>3. 创建读写分离的主备集群</h3><h4 id="3-1-读写分离"><a href="#3-1-读写分离" class="headerlink" title="3.1 读写分离"></a>3.1 读写分离</h4><h4 id="3-2-主备"><a href="#3-2-主备" class="headerlink" title="3.2 主备"></a>3.2 主备</h4><h3 id="4-创建代理-mycat"><a href="#4-创建代理-mycat" class="headerlink" title="4. 创建代理 - mycat"></a>4. 创建代理 - mycat</h3><h4 id="5-k8s管理-mycat-集群"><a href="#5-k8s管理-mycat-集群" class="headerlink" title="5. k8s管理 mycat 集群"></a>5. k8s管理 mycat 集群</h4><h4 id="6-canal同步"><a href="#6-canal同步" class="headerlink" title="6. canal同步"></a>6. canal同步</h4>]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>mysql</tag>
        <tag>mariadb</tag>
      </tags>
  </entry>
  <entry>
    <title>Usage (2) - ethereum develop environment on nodejs</title>
    <url>/2019/07/25/ethereum/Usage-2-ethereum-develop-environment-on-nodejs/</url>
    <content><![CDATA[<p>配置以太坊nodejs开发环境。<br>使用truffle调用以太坊rpc接口。<br>发布一个只能合约并测试。</p>
<a id="more"></a>
<h3 id="1-install-truffle-and-testrpc"><a href="#1-install-truffle-and-testrpc" class="headerlink" title="1. install truffle and testrpc"></a><strong>1. install truffle and testrpc</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo npm i -g truffle</span><br><span class="line">~:sudo npm i -g ethereumjs-testrpc</span><br></pre></td></tr></table></figure>
<p>Maybe you need to make soft link of the package.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo ln -s /usr/local/bin/node-8.xx/bin/truffle /usr/local/bin/truffle</span><br><span class="line">~:sudo ln -s /usr/local/bin/node-8.xx/bin/testrpc /usr/local/bin/testrpc</span><br></pre></td></tr></table></figure>
<h3 id="2-start-development"><a href="#2-start-development" class="headerlink" title="2. start development"></a><strong>2. start development</strong></h3><ul>
<li><h4 id="2-1-start-testnet-by-testrpc"><a href="#2-1-start-testnet-by-testrpc" class="headerlink" title="2.1 start testnet by testrpc"></a>2.1 start testnet by testrpc</h4><p>  <code>testrpc</code> will just build a temporary block chain in RAM.<br>  The development environment doesn’t need the huge testnet data like rinkeby.<br>  It will create ten accounts.</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:testrpc</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-2-init-project"><a href="#2-2-init-project" class="headerlink" title="2.2 init project"></a>2.2 init project</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:mkdir test_contract</span><br><span class="line">~:cd test_contract</span><br><span class="line">~:truffle init</span><br></pre></td></tr></table></figure>
<p>  Some new files and directories will be generated.</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── contracts   // directory of contracts</span><br><span class="line">├── migrations  // deploy script</span><br><span class="line">├── test  // test script</span><br><span class="line">├── truffle-config.js</span><br><span class="line">└── truffle.js  // config file, u can use truffle-conif.js or this.</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-3-config-network-to-deploy-contract"><a href="#2-3-config-network-to-deploy-contract" class="headerlink" title="2.3 config network to deploy contract"></a>2.3 config network to deploy contract</h4><p>  truffle.js<br>  Here we use two network.    </p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">networks: &#123;</span><br><span class="line">        development: &#123;</span><br><span class="line">            host: &quot;localhost&quot;,</span><br><span class="line">            port: 8545,</span><br><span class="line">            network_id: &quot;*&quot; // 匹配任何network id</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">live: &#123;</span><br><span class="line">    host: &quot;178.25.19.88&quot;, // Random IP for example purposes (do not use)</span><br><span class="line">    port: 80,</span><br><span class="line">    network_id: 1,        // Ethereum public network</span><br><span class="line">    // optional config values:</span><br><span class="line">    // gas  Gas limit used for deploys. Default is 4712388</span><br><span class="line">    // gasPrice Gas price used for deploys. Default is 100000000000 (100 Shannon).</span><br><span class="line">    // from - default address to use for any transaction Truffle makes during migrations</span><br><span class="line">    // provider - web3 provider instance Truffle should use to talk to the Ethereum network.</span><br><span class="line">    //          - if specified, host and port are ignored.</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-4-modify-a-new-contract"><a href="#2-4-modify-a-new-contract" class="headerlink" title="2.4 modify a new contract"></a>2.4 modify a new contract</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:cd contracts</span><br><span class="line">~:vim MyContract.js</span><br></pre></td></tr></table></figure>
<p>  Mycontract.js</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pragma solidity ^0.4.4;</span><br><span class="line">contract MyTest &#123;</span><br><span class="line">    function multiply(uint a) public pure returns(uint d) &#123;</span><br><span class="line">        return a * 7;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function say() public pure returns (string) &#123;</span><br><span class="line">        return &quot;Hello Contract&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  Input a, return a*7.<br>  <code>pure</code> like const after method.</p>
</li>
<li><h4 id="2-5-compile-and-deploy"><a href="#2-5-compile-and-deploy" class="headerlink" title="2.5 compile and deploy"></a>2.5 compile and deploy</h4><ol>
<li><p>modify deploy script.    </p>
<p> migrations/1_initial_migration.js</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> Migrations = artifacts.require(<span class="string">"./Migrations.sol"</span>);</span><br><span class="line"><span class="keyword">var</span> MyTest = artifacts.require(<span class="string">"./MyTest.sol"</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span>(<span class="params">deployer</span>) </span>&#123;</span><br><span class="line">deployer.deploy(Migrations);</span><br><span class="line">deployer.deploy(MyTest);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
</li>
<li><p>compile</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:truffle compile --compile-all</span><br></pre></td></tr></table></figure>
<p> <code>--compile-all</code> do not use hot compile. Hot compile will only compile the file modified from since compiling.<br> This command will compile contracts in contracts directory and put the result in build directory.</p>
</li>
<li><p>deploy</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:truffle migrate --reset</span><br></pre></td></tr></table></figure>
<p> <code>--reset</code> do not use hot migrate. Hot migrate will only deploy new js file in build directory.<br> <code>--network &lt;network_name&gt;</code> specify the network to deploy. You can config more than one network in config file.</p>
</li>
<li><p>test</p>
<p> Enter in truffle console.</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:truffle console</span><br><span class="line">truffle(development)&gt; var contract;</span><br><span class="line">undefined</span><br><span class="line"></span><br><span class="line">truffle(development)&gt; MyTest.deployed().then(function(instance)&#123;contract= instance;&#125;);</span><br><span class="line">undefined</span><br><span class="line"></span><br><span class="line">truffle(development)&gt; </span><br><span class="line">undefined</span><br><span class="line"></span><br><span class="line">truffle(development)&gt; </span><br><span class="line">undefined</span><br><span class="line"></span><br><span class="line">truffle(development)&gt; contract.multiply(3)</span><br><span class="line">&#123; [String: &apos;21&apos;] s: 1, e: 1, c: [ 21 ] &#125;</span><br><span class="line"></span><br><span class="line">truffle(development)&gt; </span><br><span class="line">undefined</span><br><span class="line"></span><br><span class="line">truffle(development)&gt; contract.say()</span><br><span class="line">&apos;Hello Contract&apos;</span><br></pre></td></tr></table></figure>
<p> Enter <code>.exit</code> to leave console.</p>
</li>
<li><p>automatic test</p>
<p> Automatic test script files are in test directory.<br> We can use <code>truffle test</code> to run these scripts.<br> A test script example.  </p>
<ul>
<li><p>test/Example.js</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pragma solidity ^0.4.0;  </span><br><span class="line"></span><br><span class="line">import &quot;truffle/Assert.sol&quot;;  </span><br><span class="line">import &quot;truffle/DeployedAddresses.sol&quot;;  </span><br><span class="line">import &quot;../contracts/MyTest.sol&quot;;  </span><br><span class="line"></span><br><span class="line">contract TestMyTest &#123;    </span><br><span class="line">        uint someValue;  </span><br><span class="line">        uint value;  </span><br><span class="line">        function testmultiply()&#123;  </span><br><span class="line">            someValue=3;  </span><br><span class="line">            MyTest aaa=MyTest(DeployedAddresses.MyTest());  </span><br><span class="line">            value = aaa.multiply(someValue);  </span><br><span class="line">            uint expected = 21;  </span><br><span class="line">            Assert.equal(value, expected, &quot;should 3*7=21&quot;);  </span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>run test</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:truffle test</span><br><span class="line">Using network &apos;development&apos;.</span><br><span class="line"></span><br><span class="line">Compiling ./contracts/MyTest.sol...</span><br><span class="line">Compiling ./test/TestMyTest.sol...</span><br><span class="line">Compiling truffle/Assert.sol...</span><br><span class="line">Compiling truffle/DeployedAddresses.sol...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">TestMyTest</span><br><span class="line">    ✓ testmultiply (83ms)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1 passing (548ms)</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ol>
</li>
</ul>
]]></content>
      <categories>
        <category>ethereum</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
        <tag>ethereum</tag>
        <tag>以太坊</tag>
        <tag>rpc</tag>
        <tag>contract</tag>
        <tag>智能合约</tag>
      </tags>
  </entry>
  <entry>
    <title>remove files from git control</title>
    <url>/2019/08/01/git/remove-files-from-git-control/</url>
    <content><![CDATA[<p>添加ignore文件。<br>已被本地git管理的文件加入ignore。<br>已被远程git管理的文件加入ignore。</p>
<a id="more"></a>
<p>Add a file name into gitignore but the file has alredy been tracked;</p>
<p>(1) add into .gitignore<br>a.txt<br>dir/</p>
<p>(2) remove cache<br>git rm -r —cached .<br>or git rm -rf —cached .</p>
<p>(3) if the file has been pushed to remote<br>delete remote file.<br>then remove cache</p>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>use an exist git project to create a new git project</title>
    <url>/2019/08/01/git/use-an-exist-git-project-to-create-a-new-git-project/</url>
    <content><![CDATA[<p>使用远程git项目创建新的git工程。<br>clone项目，修改remote地址，删除缓存的远程分支，推送本地分支到新的远程仓库。</p>
<a id="more"></a>
<p>(1) clone the exist one<br>git clone <a href="https://xxx.com/old.git" target="_blank" rel="noopener">https://xxx.com/old.git</a></p>
<p>now you will get a local branch <code>master</code></p>
<p>(2) checkout the remote branches you want on local<br>git checkout -b local1 origin/remote1<br>git checkout -b local2 origin/remote2</p>
<p>now you have <code>master</code>, <code>local1</code>,<code>local2</code></p>
<p>(3) create a new project on git website</p>
<p>url: <a href="https://xxx.com/new.git" target="_blank" rel="noopener">https://xxx.com/new.git</a></p>
<p>(4) change url of the local project to the new website<br>git remote set-url origin <a href="https://xxx.com/new.git" target="_blank" rel="noopener">https://xxx.com/new.git</a></p>
<p>(5) push the local project to website<br>git push origin master<br>git push origin local1<br>git push origin local2</p>
<p>(6) prune cache of other branches<br>git remote prune origin</p>
<p>(7) change the project name to new</p>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>About Git commands</title>
    <url>/2019/08/01/git/About-Git-commands/</url>
    <content><![CDATA[<p>git命令，从本地新建一个git工程关联到远程空工程。<br>从远程新建一个新工程拉到本地。</p>
<a id="more"></a>
<p>workspace==add==&gt;temporary storage==commit==&gt;local version repository==push==&gt;remote version repository.</p>
<p>(1)<strong>basic operation</strong><br><strong>git add <file_or_directory></file_or_directory></strong>  —&gt; add changes to temporary<br><strong>git commit [≶file_or_directory&gt;] -m “msg”</strong> —&gt; commit changes to local repository, [≶file_or_directory&gt;] optional arguments and null means all files.<br><strong>git push <remote_repository> <local_branch>[:<remote_branch>]</remote_branch></local_branch></remote_repository></strong> —&gt; push local changes to remote, [<remote_branch>:] optional argument and null means push the local branch to its tracking remote branch.<br><strong>git pull <remote_repository> [<remote_branch>:]<local_branch> </local_branch></remote_branch></remote_repository></strong>  —&gt;get update from remote then merge to the local branch. “<strong>git pull origin master</strong>“ equals to “<strong>git fetch —all &amp; git merge origin/master</strong>“.<br><strong>git merge <local_branch></local_branch></strong> —&gt; merge the specific branch to current branch in <strong>Fast Forward(FF)</strong>. Merge is like a process combines “add” and “commit”, “FF” means no msg  in commit.<br><strong>git merge ‐-no-ff -m “msg”</strong> —&gt; merge without “FF”.</remote_branch></p>
<p><strong>Conflict</strong><br>when we “<strong>merge</strong>“ a branch “<strong>a</strong>“ to current branch “<strong>b</strong>“, it may comes a “<strong>confilct</strong>“. If <strong>a</strong>‘s version is higher than <strong>b</strong>, the “<strong>merge</strong>“ will complete smoothly. But if not, as <strong>a</strong>‘s version is 2 and <strong>b</strong>‘s version is 2 or bigger, the “<strong>merge</strong>“ will fail. <strong>You need to resolve the conflict.</strong><br><strong>git merge</strong> will automatically gain all changes from two branches. You have to edit these changes and than “<strong>add</strong>“ and “<strong>commit</strong>“ for a <strong>new version</strong>. A <strong>new version</strong> means the conflict had been resolved.</p>
<h3 id="new-project"><a href="#new-project" class="headerlink" title="new project"></a><strong>new project</strong></h3><ul>
<li><strong>(1)start a new project on remote and local is null</strong><pre><code>  (1)start a new project on remote
  (2)clone to local
</code></pre></li>
<li><strong>(2)start a new project on local and remote is null</strong><pre><code>  (1)start a new project on local
  (2)start a new project on remote
      (3)```~:git remote add origin &lt;remote_project_URL&gt;``` --&gt; add a new repository named &quot;**origin**&quot;to reomte
      (4)```~:git pull origin master``` --&gt; update master from origin
      (5)```add``` and ```commit``` --&gt; update local repository
      (6)```~:git push origin master``` --&gt; push the initial porject to remote.
</code></pre></li>
</ul>
<p><strong>branch</strong><br><strong>git remote show origin</strong> —&gt; see remote branch of origin<br><strong>git remote prune origin</strong> —&gt; delete the local cache of remote branches that had been deleted at remote.<br><strong>git fetch</strong> —&gt; update local records of remote repository. <strong>You can’t use remote component directly with which local repository don’t have the component’s record. So, you must use “git fetch” to update the local records if you want to use a new branch at remote.</strong><br>(1)start a new branch on remote and local has no corresponding.<br>             (1)<strong>git checkout -b <new_local_branch> <origin remote_branchname></origin></new_local_branch></strong> —&gt; create a new local branch of the specific remote branch.<br>(2)start a new branch on local and remote has no corresponding.<br>             (1)<strong>git push <remote_repository> <local_branch></local_branch></remote_repository></strong> —&gt; just push it .</p>
<p><strong>push &amp; pull branch</strong><br><strong>git push <remote_repository> <local_branch></local_branch></remote_repository></strong> —&gt; it is a simplification of <strong>git push <remote_repository> <local_branch>:<remote_branch></remote_branch></local_branch></remote_repository></strong>.<br><strong>git push origin :<remote_branch></remote_branch></strong>—&gt;delete a remote branch.<br><strong>git pull <remote_repository> <local_branch></local_branch></remote_repository></strong> —&gt; it is a simplification of <strong>git pull <remote_repository> <remote_branch>:<remote_branch></remote_branch></remote_branch></remote_repository></strong>.</p>
<p><strong>others</strong><br><strong>git status</strong> —&gt; show status of workspace and temporary.<br><strong>git branch ‐-set-upstream-to=origin/<remote_branch> <local_branch></local_branch></remote_branch></strong> —&gt;track the local branch to a specific remote branch.<br><strong>git reflog</strong> —&gt; show all commit history and id.</p>
<p><strong>git config —unset —global user.name</strong> —&gt; unset user.name</p>
<p><strong>commit id on local</strong><br><strong>git log ‐-pretty=oneline</strong> —&gt; see logs of commit id and messages.<br><strong>git rev-parse HEAD</strong> —&gt; latest commit id of current branch<br><strong>git rev-parse short HEAD</strong> —&gt; have a try</p>
<p><strong>commit id on remote</strong><br><strong>git log FETCH_HEAD</strong> or <strong>git log origin/master</strong> —&gt; show commit id(s) and message(s) of remote branch.<br><strong>git rev-parse FETCH_HEAD</strong> or <strong>git rev-parse origin/master</strong> —&gt;lastest commit id of remote branch.<br><strong>git rev-parse short origin/master</strong> —&gt; have a try.</p>
<p><strong>set-url</strong><br><strong>git remote set-url origin <a href="https://xxx.xx/xxx.git" target="_blank" rel="noopener">https://xxx.xx/xxx.git</a></strong> —&gt; change remote url</p>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>查看reset消失的commit id</title>
    <url>/2019/08/01/git/%E6%9F%A5%E7%9C%8Breset%E6%B6%88%E5%A4%B1%E7%9A%84commit-id/</url>
    <content><![CDATA[<p>有时候本地分支是tracked远程分支，那么对远程commit执行reset会删除掉本地没有提到远程的commit，<br>这些误删的commit 在log里不会显示，但是可以通过本文介绍的命令查看。</p>
<a id="more"></a>
<p><code>git fsck --lost-found</code></p>
<p><code>git show &lt;commit-id&gt;</code></p>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>reset</tag>
        <tag>误删回退</tag>
      </tags>
  </entry>
  <entry>
    <title>Usage (1) - install ehereum</title>
    <url>/2019/07/25/ethereum/Usage-1-install-ehereum/</url>
    <content><![CDATA[<p>安装以太坊，源码编译安装</p>
<a id="more"></a>
<h3 id="1-install-go-client-geth"><a href="#1-install-go-client-geth" class="headerlink" title="1. install go client - geth"></a><strong>1. install go client - geth</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository -y ppa:ethereum/ethereum</span><br><span class="line">sudo add-apt-repository -y ppa:ethereum/ethereum-dev</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install ethereum</span><br><span class="line">sudo apt-get install solc</span><br></pre></td></tr></table></figure>
<h3 id="2-start-with-testnet"><a href="#2-start-with-testnet" class="headerlink" title="2. start with testnet"></a><strong>2. start with testnet</strong></h3><p>Use rinkeby testnet.<br>About 7.6G until 2018-05-25.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:geth --rinkeby</span><br></pre></td></tr></table></figure></p>
<h3 id="3-how-to-use-rinkeby-and-test-develop-on-it"><a href="#3-how-to-use-rinkeby-and-test-develop-on-it" class="headerlink" title="3. how to use rinkeby and test develop on it."></a><strong>3. how to use rinkeby and test develop on it.</strong></h3>]]></content>
      <categories>
        <category>ethereum</category>
      </categories>
      <tags>
        <tag>ethereum</tag>
        <tag>以太坊</tag>
      </tags>
  </entry>
  <entry>
    <title>Usage (3) - ethereum develop environment on geth</title>
    <url>/2019/07/25/ethereum/Usage-3-ethereum-develop-environment-on-geth/</url>
    <content><![CDATA[<p>创建以太坊私链。<br>为私链创建创世块。<br>在私有链上挖矿。</p>
<a id="more"></a>
<p>Build a private chain for development.<br>Config your genesis block first.</p>
<h3 id="1-mkdir"><a href="#1-mkdir" class="headerlink" title="1. mkdir"></a><strong>1. mkdir</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:mkdir test</span><br><span class="line">~:cd test</span><br><span class="line">~;mkdir chain</span><br></pre></td></tr></table></figure>
<h3 id="2-genesis-block-config"><a href="#2-genesis-block-config" class="headerlink" title="2. genesis block config"></a><strong>2. genesis block config</strong></h3><p><strong>test/genesis.json</strong><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;config&quot;: &#123;</span><br><span class="line">        &quot;chainId&quot;: 10,</span><br><span class="line">        &quot;homesteadBlock&quot;: 0,</span><br><span class="line">        &quot;eip155Block&quot;: 0,</span><br><span class="line">        &quot;eip158Block&quot;: 0</span><br><span class="line">    &#125;,</span><br><span class="line">  &quot;coinbase&quot;   : &quot;0x0000000000000000000000000000000000000000&quot;,</span><br><span class="line">  &quot;difficulty&quot; : &quot;0x4000&quot;,</span><br><span class="line">  &quot;extraData&quot;  : &quot;&quot;,</span><br><span class="line">  &quot;gasLimit&quot;   : &quot;0x8000000&quot;,</span><br><span class="line">  &quot;nonce&quot;      : &quot;0x0000000000000042&quot;,</span><br><span class="line">  &quot;mixhash&quot;    : &quot;0x0000000000000000000000000000000000000000000000000000000000000000&quot;,</span><br><span class="line">  &quot;parentHash&quot; : &quot;0x0000000000000000000000000000000000000000000000000000000000000000&quot;,</span><br><span class="line">  &quot;timestamp&quot;  : &quot;0x00&quot;,</span><br><span class="line">  &quot;alloc&quot;: &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="3-init-and-generate-your-genesis-block-for-your-private-chain"><a href="#3-init-and-generate-your-genesis-block-for-your-private-chain" class="headerlink" title="3. init and generate your genesis block for your private chain"></a><strong>3. init and generate your genesis block for your private chain</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:geth init ./genesis.json --datadir &quot;./chain&quot;</span><br></pre></td></tr></table></figure>
<ul>
<li><h4 id="3-1-geth-commands"><a href="#3-1-geth-commands" class="headerlink" title="3.1 geth commands"></a>3.1 geth commands</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">account           Manage accounts</span><br><span class="line">attach            Start an interactive JavaScript environment (connect to node)</span><br><span class="line">bug               opens a window to report a bug on the geth repo</span><br><span class="line">console           Start an interactive JavaScript environment</span><br><span class="line">copydb            Create a local chain from a target chaindata folder</span><br><span class="line">dump              Dump a specific block from storage</span><br><span class="line">dumpconfig        Show configuration values</span><br><span class="line">export            Export blockchain into file</span><br><span class="line">export-preimages  Export the preimage database into an RLP stream</span><br><span class="line">import            Import a blockchain file</span><br><span class="line">import-preimages  Import the preimage database from an RLP stream</span><br><span class="line">init              Bootstrap and initialize a new genesis block</span><br><span class="line">js                Execute the specified JavaScript files</span><br><span class="line">license           Display license information</span><br><span class="line">makecache         Generate ethash verification cache (for testing)</span><br><span class="line">makedag           Generate ethash mining DAG (for testing)</span><br><span class="line">monitor           Monitor and visualize node metrics</span><br><span class="line">removedb          Remove blockchain and state databases</span><br><span class="line">version           Print version numbers</span><br><span class="line">wallet            Manage Ethereum presale wallets</span><br><span class="line">help, h           Shows a list of commands or help for one command</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="4-start-your-private-chain-and-open-a-console-for-interactive"><a href="#4-start-your-private-chain-and-open-a-console-for-interactive" class="headerlink" title="4. start your private chain and open a console for interactive"></a><strong>4. start your private chain and open a console for interactive</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:geth --datadir &quot;./chain&quot; --networkid 15 --nodiscover --maxpeers 0 console</span><br></pre></td></tr></table></figure>
<ul>
<li><h4 id="4-1-usage"><a href="#4-1-usage" class="headerlink" title="4.1 usage"></a>4.1 usage</h4><p>  1) create account</p>
<pre><code>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;personal.newAccount()</span><br></pre></td></tr></table></figure>
</code></pre><p>  2) account list</p>
<pre><code>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; eth.accounts</span><br></pre></td></tr></table></figure>
</code></pre><p>  3) balance of account</p>
<pre><code>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; eth.getBalance(eth.accounts[0])</span><br><span class="line">0</span><br></pre></td></tr></table></figure>
</code></pre><p>  4) mining</p>
<pre><code>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;miner.start()</span><br></pre></td></tr></table></figure>

  percenage=100 is successful.
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;miner.stop()</span><br></pre></td></tr></table></figure>
</code></pre><p>  5) exit</p>
<pre><code>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;exit</span><br></pre></td></tr></table></figure>
</code></pre><p>  6) send money</p>
<pre><code>  Unlock account and send 3 wei from address_A to address_B
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;personal.unlockAccount(&quot;address_A&quot;,&quot;123&quot;)</span><br><span class="line">&gt;eth.sendTransaction(&#123;from:&quot;address_A&quot;,to:&quot;address_B&quot;,value:web3.toWei(3,&quot;ether&quot;)&#125;)</span><br></pre></td></tr></table></figure>
</code></pre></li>
</ul>
]]></content>
      <categories>
        <category>ethereum</category>
      </categories>
      <tags>
        <tag>private chain</tag>
        <tag>私链</tag>
        <tag>ethereum</tag>
        <tag>以太坊</tag>
        <tag>挖矿</tag>
        <tag>mining</tag>
      </tags>
  </entry>
  <entry>
    <title>gradle6+springboot多模块构建</title>
    <url>/2019/12/16/gradle/gradle6+springboot%E5%A4%9A%E6%A8%A1%E5%9D%97%E6%9E%84%E5%BB%BA/</url>
    <content><![CDATA[<p>gradle 6.0.1<br>springboot 2.2.2<br>构建多模块应用</p>
<a id="more"></a>
<p>(1) 应用结构</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── biz</span><br><span class="line">│   ├── build.gradle</span><br><span class="line">│   └── src</span><br><span class="line">│       └── main</span><br><span class="line">├── build.gradle</span><br><span class="line">├── common</span><br><span class="line">│   ├── dao</span><br><span class="line">│   │   ├── build.gradle</span><br><span class="line">│   │   └── src</span><br><span class="line">│   └── utils</span><br><span class="line">│       ├── build.gradle</span><br><span class="line">│       └── src</span><br><span class="line">├── settings.gradle</span><br><span class="line">└── web</span><br><span class="line">    ├── build.gradle</span><br><span class="line">    └── src</span><br></pre></td></tr></table></figure>
<p>(2) 注意点</p>
<ul>
<li>多模块 spring fatjar 应用，一般只有 web 模块包含启动类。所以除了 web 模块，其他模块 gradle task 里 <code>build bootJar</code>应该默认都禁用掉。<br><br></li>
<li>多模块 spring 应用，web 模块作为入口 jar，所以其他模块都是普通的 library 型的 jar，所以除了 web 模块，其他模块 gradle task 里 <code>build jar</code> 应该应该启用<br><br></li>
<li>由于只有 web 模块是入口 jar，所以其他模块的 gradle task 里的 <code>application bootRun</code> 都应该禁用，这样执行根项目的 <code>applicatoin bootRun</code> 就会只执行 web 模块的 main，不会报错。</li>
</ul>
<p>(3) 根项目 gradle 配置</p>
<ul>
<li>build.gradle</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">buildscript &#123;</span><br><span class="line"></span><br><span class="line">    repositories &#123;</span><br><span class="line">        maven &#123; url 'http://maven.aliyun.com/nexus/content/groups/public/' &#125;</span><br><span class="line">        mavenCentral()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    dependencies &#123;</span><br><span class="line">        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.2.2.RELEASE"</span><br><span class="line">        classpath "io.spring.gradle:dependency-management-plugin:1.0.8.RELEASE"</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">subprojects &#123;</span><br><span class="line"></span><br><span class="line">    apply plugin: 'org.springframework.boot'</span><br><span class="line">    apply plugin: 'io.spring.dependency-management'</span><br><span class="line">    apply plugin: 'java'</span><br><span class="line"></span><br><span class="line">    group 'com.fc.test'</span><br><span class="line">    version '1.0-SNAPSHOT'</span><br><span class="line">    sourceCompatibility = 1.8</span><br><span class="line"></span><br><span class="line">    bootJar &#123;</span><br><span class="line">        enabled = false</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    jar &#123;</span><br><span class="line">        enabled = true</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bootRun &#123;</span><br><span class="line">        enabled = false</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    configurations &#123;</span><br><span class="line">        compileOnly &#123;</span><br><span class="line">            extendsFrom annotationProcessor</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        maven &#123; url 'http://maven.aliyun.com/nexus/content/groups/public/' &#125;</span><br><span class="line">        mavenCentral()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>该配置设置了 springboot 两个插件的版本，并且禁用了子模块的 bootJar, bootRun，启用了 jar，注意在 web 模块需要这三个任务做相反的配置。</p>
<ul>
<li>settings.xml</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">rootProject.name = 'demo-parent'</span><br><span class="line">include 'biz'</span><br><span class="line">include 'web'</span><br><span class="line">include 'common-dao'</span><br><span class="line">include 'common-utils'</span><br></pre></td></tr></table></figure>
<p>(4) 一级子模块配置-biz</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    implementation 'org.springframework.boot:spring-boot-starter-cache'</span><br><span class="line">    compile 'org.ehcache:ehcache:3.8.1'</span><br><span class="line">    compile project(":common:dao")</span><br><span class="line">    compileOnly 'org.projectlombok:lombok'</span><br><span class="line">    annotationProcessor 'org.projectlombok:lombok'</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>(5) 二级子模块 common/utils, common/dao</p>
<ul>
<li>common:utils</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">//    compile group: 'org.springframework', name: 'spring-core'</span><br><span class="line">//    compile group: 'org.springframework', name: 'spring-beans'</span><br><span class="line">    implementation 'org.springframework.boot:spring-boot-starter-web'</span><br><span class="line">    compileOnly 'org.projectlombok:lombok'</span><br><span class="line">    annotationProcessor 'org.projectlombok:lombok'</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>common:dao</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    compile group: &apos;tk.mybatis&apos;, name: &apos;mapper-spring-boot-starter&apos;, version: &apos;2.1.1&apos;</span><br><span class="line">    compile group: &apos;org.xerial&apos;, name: &apos;sqlite-jdbc&apos;, version: &apos;3.28.0&apos;</span><br><span class="line">    compile project(&apos;:common:utils&apos;)</span><br><span class="line">    compileOnly &apos;org.projectlombok:lombok&apos;</span><br><span class="line">    annotationProcessor &apos;org.projectlombok:lombok&apos;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注意lombok的传递依赖问题， 本文使用lombok的方式，即使把 compileOnly改为 compile 也会导致编译时lombok不识别的问题，所以每个用到lombok的模块单独引入，最好的方式还是手写get/set等方法。</p>
]]></content>
      <categories>
        <category>gradle</category>
      </categories>
      <tags>
        <tag>gradle</tag>
        <tag>spring</tag>
      </tags>
  </entry>
  <entry>
    <title>c3p0-Generate data for MySQL</title>
    <url>/2019/07/31/java/c3p0-Generate-data-for-MySQL/</url>
    <content><![CDATA[<p>使用c3p0向mysql插入数据。<br><strong>todo:</strong> 未来支持多种连接池。</p>
<a id="more"></a>
<h3 id="1-pom-xml"><a href="#1-pom-xml" class="headerlink" title="(1) pom.xml"></a>(1) pom.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.46<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mchange<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="2-c3p0-init"><a href="#2-c3p0-init" class="headerlink" title="(2) c3p0 init"></a>(2) c3p0 init</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.mysqltest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mchange.v2.c3p0.ComboPooledDataSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.beans.PropertyVetoException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">C3P0Helper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ComboPooledDataSource ds = <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ds.setJdbcUrl(<span class="string">"jdbc:mysql://localhost:3306/db_name"</span>);</span><br><span class="line">            ds.setUser(<span class="string">"root"</span>);</span><br><span class="line">            ds.setPassword(<span class="string">"root"</span>);</span><br><span class="line">            ds.setDriverClass(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">            ds.setAcquireIncrement(<span class="number">5</span>);</span><br><span class="line">            ds.setInitialPoolSize(<span class="number">20</span>);</span><br><span class="line">            ds.setMinPoolSize(<span class="number">2</span>);</span><br><span class="line">            ds.setMaxPoolSize(<span class="number">50</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (PropertyVetoException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConn</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ds.getConnection();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3-Main"><a href="#3-Main" class="headerlink" title="(3) Main"></a>(3) Main</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.mysqltest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Timestamp;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestMain</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">            Thread thread = <span class="keyword">new</span> Thread(<span class="keyword">new</span> TestMain());</span><br><span class="line">            thread.setName(<span class="string">"thread-"</span>+i);</span><br><span class="line">            thread.start();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Connection connection = <span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement ps = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connection = C3P0Helper.getConn();</span><br><span class="line">            ps = connection.prepareStatement(<span class="string">"insert into users(username, create_time,creator) values(?)"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">                Timestamp timestamp = <span class="keyword">new</span> Timestamp(<span class="keyword">new</span> Date().getTime());</span><br><span class="line">                ps.setString(<span class="number">1</span>,Thread.currentThread().getName());</span><br><span class="line">                ps.setTimestamp(<span class="number">2</span>,timestamp);</span><br><span class="line">                ps.setString(<span class="number">3</span>,Thread.currentThread().getName());</span><br><span class="line">                ps.executeUpdate();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            System.out.println(Thread.currentThread().getName()+<span class="string">" Finished!"</span>);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">null</span> != ps) ps.close();</span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">null</span> != connection) connection.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>c3p0</tag>
      </tags>
  </entry>
  <entry>
    <title>high perform</title>
    <url>/2019/07/31/java/high-perform/</url>
    <content><![CDATA[<p>java单机高性能和数据安全实践。</p>
<a id="more"></a>
<p>(1) redis lock to prevent duplicated submit</p>
<p>(2) db optimistic lock</p>
<p>version = version +1 where version=#oldVersion#<br>this will toss the io-load to db system.</p>
<p>(3) spring transaction</p>
<ul>
<li>tansactin propagation</li>
<li>use <code>required</code> and <code>requires_new</code>; Default is <code>required</code>.<br>For batch missions, rollback the whole transaction is too wasted. Spit a batch mission transaction into different new transactions is much better. Each new sub transaction will rollback itself by throw exception if an exception happened. And the parent transaction could use <code>try...catch</code> to skip an exceptional sub transaction.</li>
</ul>
<p>(4) threads</p>
<p>You can use thread without any safty problem by using (1) (2) (3).</p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>high performance</title>
    <url>/2019/07/31/java/high-performance/</url>
    <content><![CDATA[<p>java的nio，异步和非阻塞。</p>
<a id="more"></a>
<p>同步异步，关注的是通信机制。<br>比如程序A调用程序B，或者方法A调用方法B，<br>二者的通信机制，是由A去主动询问B执行完成（同步），还是B主动通知A执行完成（异步）。</p>
<p>同步是最基本的实现。<br>而异步则可以通过编程模型或者多线程实现。</p>
<p>阻塞非阻塞，关注的是程序或者线程的状态。<br>A调用B，A在B执行过程中的状态，A什么都不干等待B的结果（阻塞），A调用之后不等待B的结果继续执行A自己的任务（非阻塞）。</p>
<p>对于线程来说，阻塞意味着失去CPU使用权，浪费了计算资源，而且线程本身也是昂贵的计算资源，所以阻塞是影响性能的关键。</p>
<p>使用异步可以实现非阻塞。</p>
<p>以I/O为例，程序调用OS做I/O操作</p>
<p>(1)多线程实现的异步非阻塞<br>首先一个连接一个线程是无可后非的。</p>
<p>但是当阻塞I/O出现时严重影响体验和性能。</p>
<p>1，阻塞操作转移到别的线程，带来良好体验。</p>
<p>对于java web俩说，每个连接一个线程，因此不可能让连接线程阻塞，<br>阻塞操作转移之后，还有一个好处，连接线程因为不会阻塞，所以执行完之后就会释放，资源能够及时使用</p>
<p>2，I/O操作绕过CPU，充分利用资源，</p>
<p>java nio<br>使用额外轮询线程，将阻塞转移到其他线程，带来良好体验，<br>但是否绕过cpu不得而知<br>多个连接线程 ，一个轮询线程，连接线程中的I/O注册到轮询线程并交付OS，<br>由轮询线程轮询I/O状态</p>
<p>java nio2<br>使用异步，<br>由OS通知I/O完成，带来良好体验，同时使用DMA，<br>充分利用资源。<br>多个连接线程，连接线程中的I/O使用OS和DMA，<br>不会造成阻塞，由OS通知链接线程</p>
<p>JAVA High Performance-01: Blocking and Asynchronous</p>
<p>Synchronous and Asynchronous,<br>they focus on the communication mechanism. Funcion A call function B,<br>A doing nothing but polling B for result,that is Synchronous mechanism.<br>If A doesn’t polling B, B will notify A with the result,<br>it is the Asynchronous mechanism.</p>
<p>Blocking and Non-Blocking,<br>they focus on the working state. Function A call function B,<br>A doing nothing but waiting for the result from B, that is Blocking.<br>If A doesn’t waiting for B, that is Non-Blocking.</p>
<p>(1)In java web,<br>every connection would have a thread.If a connection thread is blocked,<br>UE will be very bad. So blocking block must be moved out of connection thread.<br>But when will the block finish? Conneciton thread must polling the wroking thread.<br>Polling is also a blocking block.<br>(2)It means we must have other threads to do blocking work.<br>Threads and CPUs are expensive computing resources in a system, a thread must work on cpu,<br>if it was blocked,it will be suspended and other program can’t use this thread before released.<br>In JAVA nio, it uses a Selector thread do polling for every connection thread.It create good UE.</p>
<p>(3)But working thread still hold threads, but the max count of threads is a system is the bottleneck.<br>I/O should get round the CPU. In JAVA nio2, it uses DMA to do I/O, and the OS will notify connection thread.</p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>nio</tag>
      </tags>
  </entry>
  <entry>
    <title>high1-总览</title>
    <url>/2019/11/15/java/high1-%E6%80%BB%E8%A7%88/</url>
    <content><![CDATA[<p>web项目的缓存架构介绍</p>
<a id="more"></a>
<p>为项目加上多层缓存，可以有效提高性能。</p>
<h3 id="1-深入分布式缓存-大概是京东的缓存架构，-结构如下"><a href="#1-深入分布式缓存-大概是京东的缓存架构，-结构如下" class="headerlink" title="(1) 深入分布式缓存 大概是京东的缓存架构， 结构如下:"></a>(1) <code>深入分布式缓存</code> 大概是京东的缓存架构， 结构如下:</h3><p><a id="li_1"></a></p>
<p>nginx 缓存 -&gt; redis 缓存集群 -&gt; tomcat 集群，jvm缓存</p>
<p>请求到达nginx层， nginx 从本地取缓存，如果没取到，则取 redis 缓存，如果还没取到，则走 tomcat， tomcat 会尝试从jvm缓存读取，如果jvm缓存没有就去数据库，读完会写到 redis，也会返回给nginx， nginx会做缓存然后返回结果。</p>
<h3 id="2-自已yy的缓存架构"><a href="#2-自已yy的缓存架构" class="headerlink" title="(2) 自已yy的缓存架构"></a>(2) 自已yy的缓存架构</h3><p>redis 缓存集群 -&gt; tomcat 集群, jvm缓存</p>
<p>与 <a href="#li_1">(1)</a> 的架构相比，缺少了 nginx 缓存。</p>
<p>mysql 调优</p>
<p>(1) 使用查询 缓存 query cache</p>
<p>query cache 使用 hash表缓存 select 语句的执行结果集 resultSet， select语句的hash值就是key。</p>
<ol>
<li><p>query_cache 有两个关键参数 </p>
<p> query_cache_size    缓存的大小<br> query_cache_type    off(完全不用查询缓存)/on(除显示写明不用外，默认都用)/demand(除显式写明用外，默认都不用)</p>
</li>
<li><p>query_cache 合理性评价指标</p>
</li>
</ol>
<p>通过一下命令之一，查看 query_cache 状态<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:show variables like &quot;%query_cache%&quot;</span><br><span class="line">~:show status like &quot;Qcache%&quot;</span><br></pre></td></tr></table></figure></p>
<p>会显示以下参数<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Qcache inserts          缓存更新次数， 缓存未命中时往缓存中插入数据的次数</span><br><span class="line"></span><br><span class="line">Qcache hits             缓存命中率，数值很小说明命中率低，可以考虑不用缓存  </span><br><span class="line"></span><br><span class="line">Qcache lowmem prunes    缓存淘汰次数，数值非常大，说明缓存设置过小经常不够用导致经常刷新和淘汰数据</span><br><span class="line"></span><br><span class="line">Qcache free blocks      缓存区的存储空间碎片数量，如果数值过大，说明内存碎片太多，应该清理了</span><br></pre></td></tr></table></figure></p>
<p>以上数据中 hits 和 inserts 是最重要的指标，二者之和就是使用缓存的次数，因此缓存命中率 = hist/(hits+inserts)</p>
<ol>
<li>innodb 缓存池</li>
</ol>
<p><code>innodb_buffer_pool_size</code>       innodb 缓存池大小</p>
<p>innodb 在内存中开辟一个缓存池，用于缓存 所有的数据索引和被操作的数据。读取和写入都先经过缓存池，读取时，先从缓存池读，读不到则从磁盘读然后写到缓存然后返回结果。写入时，也是先在缓存中完成再同步到磁盘上（同步频率大于每秒若干条）;<br>缓存池大小，在独立的mysql服务器上一般80%物理内存。<br>缓存池命中率: (innodb_buffer_pool_read_requests - innodb_buffer_pool_reads) / innodb_buffer_pool_read_requests</p>
<p><code>table_cache</code>       表的高速缓存数量， mysql 会缓存一定数量的表到缓存区，一般来说每个connection至少会访问一张表，如果connection需要的表不在缓存区就会加载该表到缓存区（如果，缓存数量不够，就会淘汰某个旧的缓存）。</p>
<p>java 缓存</p>
<ol>
<li>平台级缓存 </li>
</ol>
<p><code>深入分布式缓存</code>中的介绍平台缓存是专门用于缓存的一些库，比如java的 ehcache。区别于 redis,mongodb,memcached 这种应用级缓存。</p>
<p>一般作为一级缓存使用。</p>
<p>在我看来就是提供 <code>jvm 缓存</code>， ehcache 虽然工作早jvm里，但是也支持集群和扩展。</p>
<ol>
<li>应用级缓存</li>
</ol>
<p>像 redis, mongodb, memcached 这种，一个独立的应用中间件，可以独立部署运行。</p>
<p>多级缓存架构</p>
<ol>
<li>nginx 本地缓存 第三层</li>
</ol>
<p>多种实现方式 Lua Shared Dict/Nginx Proxy Cache/或者本地redis</p>
<ol>
<li><p>redis 集群 第二层</p>
</li>
<li><p>jvm 缓存  第一层</p>
</li>
<li><p>数据库缓存 第0层</p>
</li>
</ol>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>cache</tag>
        <tag>高性能</tag>
        <tag>缓存</tag>
      </tags>
  </entry>
  <entry>
    <title>java ee - eclipse</title>
    <url>/2019/07/31/java/java-ee-eclipse/</url>
    <content><![CDATA[<p>eclipse 开发环境的配置</p>
<a id="more"></a>
<h3 id="1-install"><a href="#1-install" class="headerlink" title="(1) install"></a>(1) install</h3><p>国内镜像比如清华<br><a href="https://mirrors.tuna.tsinghua.edu.cn/eclipse/technology/epp/downloads/release/" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/eclipse/technology/epp/downloads/release/</a></p>
<h3 id="2-设置"><a href="#2-设置" class="headerlink" title="(2) 设置"></a>(2) 设置</h3><ul>
<li><p>更新地址和插件地址</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">windows-&gt;preferences</span><br><span class="line">(1) 当前版本号的更新地址 2018-12，清华大学镜像，2018-12版本</span><br><span class="line">    https://mirrors.tuna.tsinghua.edu.cn/eclipse/mpc/2018-12/</span><br><span class="line"></span><br><span class="line">(2) 插件商店 EPP Marketplace Client</span><br><span class="line">    https://mirrors.tuna.tsinghua.edu.cn/eclipse/mpc/2018-12/</span><br><span class="line"></span><br><span class="line">(3) The Eclipse Project Updates</span><br><span class="line">    https://mirrors.tuna.tsinghua.edu.cn/eclipse/eclipse/updates/4.10</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="3-快捷方式"><a href="#3-快捷方式" class="headerlink" title="(3) 快捷方式"></a>(3) 快捷方式</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Version=1.0</span><br><span class="line">Type=Application</span><br><span class="line">Name=Eclipse</span><br><span class="line">Icon=/usr/local/bin/eclipse/icon.xpm</span><br><span class="line">Exec=&quot;/usr/local/bin/eclipse/eclipse&quot; %f</span><br><span class="line">Comment=Capable and Ergonomic IDE for JVM</span><br><span class="line">Categories=Development;IDE;</span><br><span class="line">Terminal=false</span><br></pre></td></tr></table></figure>
<h3 id="4-终端字体"><a href="#4-终端字体" class="headerlink" title="(4) 终端字体"></a>(4) 终端字体</h3><h3 id="5-maven配置"><a href="#5-maven配置" class="headerlink" title="(5) maven配置"></a>(5) maven配置</h3><h3 id="6-jdk和jre配置"><a href="#6-jdk和jre配置" class="headerlink" title="(6) jdk和jre配置"></a>(6) jdk和jre配置</h3><ul>
<li><p>window-&gt;preferences-&gt;java-&gt;installed JREs</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">使用java_home即可</span><br></pre></td></tr></table></figure>
</li>
<li><p>eclipse_home/eclipse.ini</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">在-vmargs上边添加</span><br><span class="line">-vm</span><br><span class="line">/usr/local/lib/jdk1.8.0_201/bin</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="7-插件"><a href="#7-插件" class="headerlink" title="(7) 插件"></a>(7) 插件</h3><ul>
<li><p>darkest theme</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">全黑主题</span><br><span class="line">新的icon</span><br></pre></td></tr></table></figure>
</li>
<li><p>spring tools</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">spring dashboard</span><br></pre></td></tr></table></figure>
</li>
<li><p>EasyShell</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">可以把teminal跳转到工程目录</span><br></pre></td></tr></table></figure>
</li>
<li><p>ANSI Escape in Console</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">run/debug可以显示颜色(eclipse本身只有白色)</span><br><span class="line">并可以正常显示空格和制表符等符号</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="8-导入git-maven多模块spring项目"><a href="#8-导入git-maven多模块spring项目" class="headerlink" title="(8) 导入git maven多模块spring项目"></a>(8) 导入git maven多模块spring项目</h3><p>import from git -&gt; 导入到某个eclipse工作空间外的位置<br>import existing maven -&gt; 把maven项目导入到eclipse工作空间</p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>eclipse</tag>
      </tags>
  </entry>
  <entry>
    <title>lamp</title>
    <url>/2019/07/31/java/lamp/</url>
    <content><![CDATA[<p>linux + apache2 + php + mysql 的开发环境配置。</p>
<a id="more"></a>
<p>apache2<br>php 7.2<br>mariadb 10.2</p>
<p>(1) install mariadb</p>
<p>(2) install apache2<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo apt-get install apache2</span><br></pre></td></tr></table></figure></p>
<p>Apache2 will listen port 80 when it started.<br>If 80 is already in use, disable it and use another port and config.</p>
<ul>
<li><h4 id="port"><a href="#port" class="headerlink" title="port"></a>port</h4><p>cd /etc/apache2<br>vim ports.conf</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#Listen 80</span><br><span class="line">Listen 9080</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="root-dir"><a href="#root-dir" class="headerlink" title="root dir"></a>root dir</h4><p>cd /etc/apache2/sites-available<br>cp 000-default.conf 9080-php.conf<br>vim 9080-php.conf</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ServerName localhost</span><br><span class="line"></span><br><span class="line">DocumentRoot /home/hm70/work/shop</span><br><span class="line">&lt;Directory &quot;/home/hm70/work/shop&quot;&gt;</span><br><span class="line">		Options Indexes FollowSymLinks</span><br><span class="line">	    	AllowOverride None</span><br><span class="line">	    	Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>ln -s /etc/apache2/sites-available/9080-php.conf /etc/apache2/sites-enable/9080-php.conf</p>
<ul>
<li>localhost:9080</li>
</ul>
<p>(3) php </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo apt-get install php7.2</span><br><span class="line"># mysql support</span><br><span class="line">~:sudo apt-get install php7.2-mysql</span><br><span class="line"># picture(jpeg,gif,png) support</span><br><span class="line">~:sudo apt-get install php7.2-gd</span><br></pre></td></tr></table></figure>
<p>(4) index.php<br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(mysqli_connect(<span class="string">"localhost"</span>,<span class="string">"root"</span>,<span class="string">"root"</span>))&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"success"</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"failed"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p>
<ul>
<li>localhost:9080</li>
</ul>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>throws throw try catch finally</title>
    <url>/2019/07/31/java/throws-throw-try-catch-finally/</url>
    <content><![CDATA[<p>try-catch块的使用总结。</p>
<a id="more"></a>
<h3 id="1-你可以在任何地方使用try-catch-finally，包括在它们自己当中"><a href="#1-你可以在任何地方使用try-catch-finally，包括在它们自己当中" class="headerlink" title="1. 你可以在任何地方使用try...catch...finally，包括在它们自己当中"></a><strong>1. 你可以在任何地方使用<code>try...catch...finally</code>，包括在它们自己当中</strong></h3><p>(1) 异常是一个生产者消费者模式，<code>try...catch</code>可以捕获并消费掉它，消费掉了，程序就不会终止否则全盘终止。<code>try...catch</code>也可以不消费它而再次<code>throw</code>出去或者是包装成自定义异常然后<code>throw</code>出去 —— 如果你觉得有这么做的必要。</p>
<h3 id="2-你也可以在任何地方使用throw异常，但是应该同时使用throws，用来通知方法调用者"><a href="#2-你也可以在任何地方使用throw异常，但是应该同时使用throws，用来通知方法调用者" class="headerlink" title="2. 你也可以在任何地方使用throw异常，但是应该同时使用throws，用来通知方法调用者"></a><strong>2. 你也可以在任何地方使用<code>throw</code>异常，但是应该同时使用<code>throws</code>，用来通知方法调用者</strong></h3><p>(2) <code>throw</code>一个原生异常，编译器不会报错，但这会让Exception变得隐蔽不容易被发现 —— 所以为了代码健康，应该在方法声明上加上<code>throws</code>，通知调用者。</p>
<p>(3)  <code>throw</code>一个自定义异常，编译器会立刻报错，应该在方法声明里加上<code>throws</code>，（你当然可以在<code>throw</code>两边包上一个<code>try...catch</code>原地消费掉它——但是这么做的意义不大，<code>throw</code>一个实质性的Exception就是为了提醒调用者某些潜在的可能的错误）。</p>
<h3 id="3-throws可以传递Exception但不会消费掉它，最终还是需要try-catch来消费掉"><a href="#3-throws可以传递Exception但不会消费掉它，最终还是需要try-catch来消费掉" class="headerlink" title="3. throws可以传递Exception但不会消费掉它，最终还是需要try...catch来消费掉"></a><strong>3. <code>throws</code>可以传递Exception但不会消费掉它，最终还是需要<code>try...catch</code>来消费掉</strong></h3>]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>Exception</tag>
        <tag>异常</tag>
      </tags>
  </entry>
  <entry>
    <title>tomcat nio model</title>
    <url>/2019/07/31/java/tomcat-nio-model/</url>
    <content><![CDATA[<p>tomcat nio简介</p>
<a id="more"></a>
<p>首先B/S架构和C/S架构一样基于Socket(TCP)通信<br>Tomcat作为web服务器，<br>接收client的Socket,解析其中的HttPServletRequest然后传递给后台的java web，由java web解析。<br>接收后台java web的HttpServletResponse封装到Socket中传给client.</p>
<p>而Tomcat在从Socket中获取HttpServletRequest的过程中完成了高性能的nio过程。<br>过程如下<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(1)就像所有的socket通信，tomcat最外层有一个阻塞线程，用于侦听socket，侦听到socket之后，由Acceptor线程池为每个socket连接建立一个连接线程</span><br><span class="line"></span><br><span class="line">(2)buffer-channel-selector是nio的一般过程</span><br><span class="line">tomcat模型，从连接线程中获取socketchannel,封装成niochannel,</span><br><span class="line">再把niochannel封装到PollerEvent对象，</span><br><span class="line">再把PollerEvent对象压到event queue队列</span><br><span class="line"></span><br><span class="line">(3)Poller线程是单一线程，维护一个Selector，</span><br><span class="line">该线程轮询event queue中的channel，获取需要执行I/O的Socket，</span><br><span class="line"></span><br><span class="line">(4)Worker线程池用于为耗时操作创建线程，</span><br><span class="line">poller轮询到执行I/O的socket把它传递到worker线程，</span><br><span class="line">worker线程从socket中获取request解析为HttpServletRequest，</span><br><span class="line">然后传递到后台Servlet中处理，然后把response通过该socket发送到client.</span><br></pre></td></tr></table></figure></p>
<p><img src="https://upload-images.jianshu.io/upload_images/5420342-711ada810597742e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="f570bf7c-4f06-3ba9-8be2-8581d167a0de.jpg"></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>nio</tag>
        <tag>tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title>管理端框架-layui (1) - 弹窗返回数据到调用者窗口</title>
    <url>/2019/07/31/java/%E7%AE%A1%E7%90%86%E7%AB%AF%E6%A1%86%E6%9E%B6-layui-1-%E5%BC%B9%E7%AA%97%E8%BF%94%E5%9B%9E%E6%95%B0%E6%8D%AE%E5%88%B0%E8%B0%83%E7%94%A8%E8%80%85%E7%AA%97%E5%8F%A3/</url>
    <content><![CDATA[<p>layui和jqgrid的使用实践。</p>
<a id="more"></a>
<h3 id="1-调用者调用以下函数"><a href="#1-调用者调用以下函数" class="headerlink" title="(1) 调用者调用以下函数"></a>(1) 调用者调用以下函数</h3><ul>
<li><p>js</p>
  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">openView</span>(<span class="params">title, width, height, url, winname, closeFunc</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// //判断id值是否存在</span></span><br><span class="line">    <span class="comment">// if (id == undefined || id == '') &#123;</span></span><br><span class="line">    <span class="comment">//     layer.alert('id获取异常', &#123;icon: 5, skin: 'layer-ext-moon'&#125;);</span></span><br><span class="line">    <span class="comment">//     return;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断url中是否已经挂参</span></span><br><span class="line">    <span class="keyword">if</span> (url.indexOf(<span class="string">"?"</span>) == <span class="number">-1</span>) &#123;</span><br><span class="line">        url = url + <span class="string">"?winname="</span> + winname;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        url = url + <span class="string">"&amp;winname="</span> + winname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> index = parent.layer.open(&#123;</span><br><span class="line">        <span class="comment">// skin: 'layui-layer-molv',</span></span><br><span class="line">        type: <span class="number">2</span>, <span class="comment">//iframe 层</span></span><br><span class="line">        title: title,</span><br><span class="line">        scrollbar: <span class="literal">false</span>,</span><br><span class="line">        fix: <span class="literal">false</span>, <span class="comment">//不固定</span></span><br><span class="line">        maxmin: <span class="literal">true</span>,</span><br><span class="line">        area: [width, height],</span><br><span class="line">        btn: [<span class="string">'确定'</span>],</span><br><span class="line">        yes: <span class="function"><span class="keyword">function</span> (<span class="params">index, layero</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> data = <span class="built_in">window</span>.parent[layero.find(<span class="string">'iframe'</span>)[<span class="number">0</span>][<span class="string">'name'</span>]].validateForm();</span><br><span class="line">            $(<span class="string">"#phone"</span>).val(data[<span class="string">"phone"</span>]);</span><br><span class="line">            $(<span class="string">"#phoneLabel"</span>).html(data[<span class="string">"phone"</span>]);</span><br><span class="line">            $(<span class="string">"#userId"</span>).val(data[<span class="string">"userId"</span>]);</span><br><span class="line">            $(<span class="string">"#realName"</span>).val(data[<span class="string">"realName"</span>]);</span><br><span class="line">            $(<span class="string">"#realNameLabel"</span>).html(data[<span class="string">"realName"</span>]);</span><br><span class="line">            parent.layer.close(index);</span><br><span class="line">        &#125;,</span><br><span class="line">        end: closeFunc,</span><br><span class="line">        content: url</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>代码解析</p>
<ol>
<li><p><code>var data = window.parent[layero.find(&#39;iframe&#39;)[0][&#39;name&#39;]].validateForm();</code><br>jquery通过iframe层找到弹窗dom，调用弹窗dom的 validateForm() 函数，在该函数中返回数据。</p>
<p>2.</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"#phone"</span>).val(data[<span class="string">"phone"</span>]);</span><br><span class="line">$(<span class="string">"#phoneLabel"</span>).html(data[<span class="string">"phone"</span>]);</span><br><span class="line">$(<span class="string">"#userId"</span>).val(data[<span class="string">"userId"</span>]);</span><br><span class="line">$(<span class="string">"#realName"</span>).val(data[<span class="string">"realName"</span>]);</span><br><span class="line">$(<span class="string">"#realNameLabel"</span>).html(data[<span class="string">"realName"</span>]);</span><br></pre></td></tr></table></figure>
<p>为调用者页面上的dom设置值。</p>
</li>
</ol>
</li>
</ul>
<h3 id="2-弹窗页面-validateForm-函数"><a href="#2-弹窗页面-validateForm-函数" class="headerlink" title="(2) 弹窗页面 validateForm() 函数"></a>(2) 弹窗页面 validateForm() 函数</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">validateForm</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> id = jQuery(jqGridId).jqGrid(<span class="string">'getGridParam'</span>, <span class="string">'selrow'</span>);</span><br><span class="line">        <span class="keyword">var</span> data = jQuery(jqGridId).getRowData(id);</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>以上是jqgrid的表格数据获取方式。</p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>jqgrid</tag>
      </tags>
  </entry>
  <entry>
    <title>重复支付</title>
    <url>/2019/07/31/java/%E9%87%8D%E5%A4%8D%E6%94%AF%E4%BB%98/</url>
    <content><![CDATA[<p>关于重复支付的解决方案。</p>
<a id="more"></a>
<p>(1) 系统集成了多个支付平台</p>
<p>由于网络延迟或者抓包等原因，可能导致重复支付。</p>
<p>(2) 虽然可以通过设置标志减少延迟的时间，降低重复的概率，但是仍然要考虑重复支付的情况</p>
<p>(3) 解决的方法是所有支付成功入队后</p>
<p>如果订单已支付，则对后续的支付执行原路径退款。这个模式认为重复支付一定会发生(因此不用考虑针对复杂网络延迟的开发模型)，重复支付发生后原路径退回即可。</p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>jquery组件绑定事件的闭包问题</title>
    <url>/2019/07/25/jquery/jquery%E7%BB%84%E4%BB%B6%E7%BB%91%E5%AE%9A%E4%BA%8B%E4%BB%B6%E7%9A%84%E9%97%AD%E5%8C%85%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>闭包问题导致动态组件无法获取正确数据。<br>比如循环生成的按钮打印序号，打印序号都是最大值。</p>
<a id="more"></a>
<ul>
<li><h4 id="1-产生闭包问题的代码"><a href="#1-产生闭包问题的代码" class="headerlink" title="1. 产生闭包问题的代码"></a>1. 产生闭包问题的代码</h4>  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> divDom = $(<span class="string">"#div1"</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">    <span class="keyword">var</span> btnDom = $(<span class="string">"&lt;button&gt;test"</span> + i + <span class="string">"&lt;/button&gt;"</span>);</span><br><span class="line">    btnDom.click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;alert(i);&#125;);</span><br><span class="line">    divDom.append(btnDom);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  上面这段函数产生5个按钮，在点击按钮时alert对应的id<br>  但是实际效果是每个按钮都会alert 5。</p>
</li>
<li><h4 id="2-解决方法-动态传参"><a href="#2-解决方法-动态传参" class="headerlink" title="2. 解决方法,动态传参"></a>2. 解决方法,动态传参</h4>  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(dom).click(&#123;<span class="string">"id"</span>:i&#125;, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    alert(e.data.id);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <categories>
        <category>jQuery</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>jQuery</tag>
        <tag>闭包</tag>
      </tags>
  </entry>
  <entry>
    <title>linux增加语言编码解决乱码</title>
    <url>/2020/04/11/linux/linux%E5%A2%9E%E5%8A%A0%E8%AF%AD%E8%A8%80%E7%BC%96%E7%A0%81%E8%A7%A3%E5%86%B3%E4%B9%B1%E7%A0%81/</url>
    <content><![CDATA[<p>某些语言文字乱码，需要手动添加该语言的编码。比如中文缺少 zh_CN.UTF-8，导致乱码。</p>
<a id="more"></a>
<h3 id="1-查看系统当前使用的语言和编码"><a href="#1-查看系统当前使用的语言和编码" class="headerlink" title="(1) 查看系统当前使用的语言和编码"></a>(1) 查看系统当前使用的语言和编码</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:locale -a</span><br></pre></td></tr></table></figure>
<h3 id="2-生成指定语言的某种编码及原理"><a href="#2-生成指定语言的某种编码及原理" class="headerlink" title="(2) 生成指定语言的某种编码及原理"></a>(2) 生成指定语言的某种编码及原理</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:locale-gen zh_CN.UTF-8</span><br></pre></td></tr></table></figure>
<p>locale-gen 根据参数值搜索 /etc/locale.gen 里的配置，如果locale.gen里没有配置则不会生成。</p>
<p>locale.gen 里的配置如下<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">locale  charset</span><br></pre></td></tr></table></figure></p>
<p>locale 就是支持的语言，所有支持的语言都在 /usr/share/i18n/locales 里配置，在locale.gen可以为语言增加后缀比如 .UTF-8， 需要 sed 来分割后缀。</p>
<p>charset 是支持的编码，所有支持的编码都在 /usr/share/i18n/charmaps 里配置，都是.gz文件，所以需要 gzip 支持。</p>
<p>locale-gen最后生成的语言和编码会覆盖 <code>locale -a</code>里展示的所有的内容。</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>ubuntu</tag>
        <tag>manjaro</tag>
        <tag>locale</tag>
        <tag>local-gen</tag>
      </tags>
  </entry>
  <entry>
    <title>manjaro-gnome-18.1.5-安装</title>
    <url>/2020/02/03/manjaro/manjaro-gnome-18-1-5-%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<p>manjaro gnome 18.1.5 u盘安装单系统，或与win10构成双系统</p>
<a id="more"></a>
<h3 id="1-系统版本介绍"><a href="#1-系统版本介绍" class="headerlink" title="1. 系统版本介绍"></a>1. 系统版本介绍</h3><p>manjaro-gnome 18.0 直接使用 <code>pacman -Syu</code> 升级到 18.1.5 会导致桌面组件缺失，无法进入桌面。</p>
<p>pacman 安装pip的命令有变化，python3-pip 变成了 python-pip，并且截止当前时间 2020-02-03，pacman安装的python-pip是相对于 python 3.8.1 版本，如果系统当前的 python 环境是 3.7，也会导致 pip 出现问题</p>
<h3 id="2-u盘启动盘制作"><a href="#2-u盘启动盘制作" class="headerlink" title="2. u盘启动盘制作"></a>2. u盘启动盘制作</h3><h4 id="1-格式化"><a href="#1-格式化" class="headerlink" title="(1) 格式化"></a>(1) 格式化</h4><p>使用 ultraliso 制作，如果 ultraliso 能识别到u盘，则在 ultraliso 界面中格式化整个u盘空间为fat32，如果不识别，请使用其他工具格式化。</p>
<h4 id="2-写入方式"><a href="#2-写入方式" class="headerlink" title="(2) 写入方式"></a>(2) 写入方式</h4><p>raw，其他格式导致 uefi 下无法从u盘启动。</p>
<p>然后执行写入，等待完成。</p>
<h4 id="3-成功后的u盘分区"><a href="#3-成功后的u盘分区" class="headerlink" title="(3) 成功后的u盘分区"></a>(3) 成功后的u盘分区</h4><p>成功后，u盘空间被分为三个区<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">第一个区是隐藏分区，是 manjaro 系统文件，不要动这个分区，也不要变成可见。</span><br><span class="line">第二个是一个可见分区， 很小的空间，几乎无法使用，无需理会。</span><br><span class="line">第三个区是一个隐藏分区，占了u盘大部分空间，该区域可以重新格式化产生一个可用分区，用来存东西。</span><br></pre></td></tr></table></figure></p>
<h3 id="3-单系统分区"><a href="#3-单系统分区" class="headerlink" title="3. 单系统分区"></a>3. 单系统分区</h3><p>120G 硬盘为例</p>
<p>系统盘可以整个覆盖，所以可以用默认的安装方案。</p>
<p>手动分区</p>
<p>1G, primary, file-system: fat32, mount point: boot-efi, flag: boot, esp</p>
<p>8G, primary, file-system: linux-swap, mount point: , flag: swap</p>
<p>50G, primary, file-system: ext4, mount point: /, flag: </p>
<p>70G(剩下的空间),primary, file-system: ext4, mount point: /home, flag</p>
<h3 id="4-win10双系统分区"><a href="#4-win10双系统分区" class="headerlink" title="4. win10双系统分区"></a>4. win10双系统分区</h3><p>安装到独立的120硬盘，分区和 单系统分区相同。</p>
]]></content>
      <categories>
        <category>manjaro</category>
      </categories>
      <tags>
        <tag>manjaro</tag>
      </tags>
  </entry>
  <entry>
    <title>manjaro20环境配置</title>
    <url>/2020/08/09/manjaro/manjaro20%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>manjaro20的安装与开发环境搭建。安装过程中比较麻烦的是与win7组双系统的设置问题。</p>
<a id="more"></a>
<h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h2><h3 id="1-1-独立安装"><a href="#1-1-独立安装" class="headerlink" title="1.1 独立安装"></a>1.1 独立安装</h3><ul>
<li>u盘制作</li>
</ul>
<p><code>utralISO</code>或者<code>rufus</code>，U盘格式化为<code>fat32</code>，使用<code>raw</code>格式写入镜像，成功后U盘的大多数空间会被隐藏，通过磁盘管理工具分配盘符即可使用。</p>
<ul>
<li><p>bios模式</p>
<p>  <code>UEFI</code></p>
</li>
<li><p>系统盘分区表</p>
<p>  GPT或MBR都可以</p>
</li>
<li><p>分区</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">分区1:</span></span><br><span class="line">    <span class="string">说明:</span> <span class="string">grub启动分区</span></span><br><span class="line">    <span class="string">容量:</span> <span class="number">1</span><span class="string">GB</span></span><br><span class="line">    <span class="string">格式:</span> <span class="string">fat32</span></span><br><span class="line">    <span class="string">挂载点:</span> <span class="string">无</span></span><br><span class="line"><span class="attr">    Flags:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">boot</span></span><br><span class="line"><span class="string">分区2:</span></span><br><span class="line">    <span class="string">说明:</span> <span class="string">交换分区，与内存等量或稍小</span></span><br><span class="line">    <span class="string">容量:</span> <span class="number">8</span><span class="string">GB</span></span><br><span class="line">    <span class="string">格式:</span> <span class="string">linuxswap</span></span><br><span class="line">    <span class="string">挂载点:</span> <span class="string">无</span></span><br><span class="line"><span class="attr">    Flags:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">swap</span></span><br><span class="line"><span class="string">分区3:</span></span><br><span class="line">    <span class="string">说明:</span> <span class="string">系统分区</span></span><br><span class="line">    <span class="string">容量:</span> <span class="number">50</span><span class="string">GB</span></span><br><span class="line">    <span class="string">格式:</span> <span class="string">ext4</span></span><br><span class="line">    <span class="string">挂载点:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">    Flags:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">无</span></span><br><span class="line"><span class="string">分区4:</span></span><br><span class="line">    <span class="string">说明:</span> <span class="string">home分区目录</span></span><br><span class="line">    <span class="string">容量:</span> <span class="string">一般是系统盘剩余空间</span></span><br><span class="line">    <span class="string">格式:</span> <span class="string">ext4</span></span><br><span class="line">    <span class="string">挂载点:</span> <span class="string">/home</span></span><br><span class="line"><span class="attr">    Flags:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">无</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>系统安装到<code>分区1</code></p>
<h3 id="1-2-双系统安装"><a href="#1-2-双系统安装" class="headerlink" title="1.2 双系统安装"></a>1.2 双系统安装</h3><h4 id="1-2-1-win7-manjaro20"><a href="#1-2-1-win7-manjaro20" class="headerlink" title="1.2.1 win7 + manjaro20"></a>1.2.1 win7 + manjaro20</h4><p>manjaro的系统盘分区表和分区可以参考<code>独立安装</code>的分区，不过<code>分区1grub启动分区要特别注意下</code><br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">分区1:</span></span><br><span class="line">    <span class="string">说明:</span> <span class="string">grub启动分区</span></span><br><span class="line">    <span class="string">容量:</span> <span class="number">1</span><span class="string">GB</span></span><br><span class="line">    <span class="string">格式:</span> <span class="string">fat32</span></span><br><span class="line">    <span class="string">挂载点:</span> <span class="string">无</span></span><br><span class="line"><span class="attr">    Flags:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">boot</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">legacy-boot</span></span><br></pre></td></tr></table></figure></p>
<ul>
<li><p>win7遇到的问题</p>
<p>  (1) <code>win7</code>仅支持<code>legacy</code>或<code>uefi+csm</code>的bios。如果uefi主板不支持csm，则uefi模式下安装完win7会导致第一次启动卡在启动界面，此时需要修改bios为legacy模式（或开启旧支持），然后启动win7安装完显卡驱动即可把主板改回uefi(或关闭旧支持)。<br><br></p>
</li>
<li><p>启动项改为grub<br>  (1) grub要求bios为uefi模式。</p>
<p>  (2) 安装完win7后默认的启动项为<code>windows boot manager</code>，很多教程<code>错误</code>的推荐用<code>easyBCD</code>去增加grub启动项，实际上增加的启动项会出现在<code>win boot manager</code>的列表中，该选项实际上无法启动linux，<code>在win boot manager界面选择退出（esc按键退出）会回到grub</code>。虽然可以返回到grub，但很不友好，可以在bios里修改启动顺序把grub改为第一个，<code>注意，由于win7每次启动会修改win boot manager为第一启动项，所以要在bios里禁用win boot manager</code>。</p>
</li>
</ul>
<h4 id="1-2-2-win10-manjaro20"><a href="#1-2-2-win10-manjaro20" class="headerlink" title="1.2.2 win10 + manjaro20"></a>1.2.2 win10 + manjaro20</h4><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">bios:</span> <span class="string">uefi</span></span><br><span class="line"><span class="string">manjaro安装:</span> <span class="string">完全按照独立安装的来</span></span><br></pre></td></tr></table></figure>
<h2 id="2-系统定制"><a href="#2-系统定制" class="headerlink" title="2. 系统定制"></a>2. 系统定制</h2><h3 id="2-1-首先配置镜像"><a href="#2-1-首先配置镜像" class="headerlink" title="2.1 首先配置镜像"></a>2.1 首先配置镜像</h3><p><code>/etc/pacman.d/mirrorlist</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## Country : China</span><br><span class="line">Server = http://mirrors.aliyun.com/manjaro/stable/$repo/$arch</span><br></pre></td></tr></table></figure></p>
<h3 id="2-2-zsh"><a href="#2-2-zsh" class="headerlink" title="2.2 zsh"></a>2.2 zsh</h3><p>manjaro自带zsh和一些插件，但是没有安装oh-my-zsh，也没有配置p10k主题，所以安装下oh-my-zsh和p10k即可。</p>
<h4 id="2-2-1-安装oh-my-zsh"><a href="#2-2-1-安装oh-my-zsh" class="headerlink" title="2.2.1 安装oh-my-zsh"></a>2.2.1 安装oh-my-zsh</h4><p>克隆github的oh-my-zsh到你的家目录,重命名为.oh-my-zsh，可以用gitee加速。<br>然后把 .oh-my-zsh/templates/zshrc.zsh-template 复制到家目录/.zshrc 即可</p>
<h4 id="2-2-2-安装p10k"><a href="#2-2-2-安装p10k" class="headerlink" title="2.2.2 安装p10k"></a>2.2.2 安装p10k</h4><p>克隆该仓库powerlevel10k，可以用gitee加速，到.oh-my-zsh/custom/themes/powerlevel10k。然后在.zshrc总修改主题。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ZSH_THEME=&quot;powerlevel10k/powerlevel10k&quot;</span><br></pre></td></tr></table></figure>
<p>p10k配置完之后，首次启动zsh，会引导p10k配置，如果未来想重新配置可用命令：<code>p10k configure</code></p>
<h4 id="2-2-3-安装其他插件"><a href="#2-2-3-安装其他插件" class="headerlink" title="2.2.3 安装其他插件"></a>2.2.3 安装其他插件</h4><ul>
<li><p>git插件</p>
<p>  该插件可以用来提示git分支和分支状态</p>
</li>
<li><p>自动提示插件</p>
<p>  该插件可以根据输入历史自动补齐命令</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">plugins=(git colored-man-pages zsh-autosuggestions)</span><br></pre></td></tr></table></figure>
<p>其中git和man插件由oh-my-zsh自带，自动补齐插件需要自行下载到.oh-my-zsh/plugins/zsh-autosuggestions</p>
<h4 id="2-2-4-history时间戳"><a href="#2-2-4-history时间戳" class="headerlink" title="2.2.4 history时间戳"></a>2.2.4 history时间戳</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">HIST_STAMPS=&quot;yyyy-mm-dd&quot;</span><br></pre></td></tr></table></figure>
<h3 id="2-3-neovim"><a href="#2-3-neovim" class="headerlink" title="2.3 neovim"></a>2.3 neovim</h3><p>neovim是vim的一个分支，界面更友好，使用异步模块。使用spacevim可以一站式配置vim/neovim的插件和界面。</p>
<h4 id="2-3-1-安装neovim"><a href="#2-3-1-安装neovim" class="headerlink" title="2.3.1 安装neovim"></a>2.3.1 安装neovim</h4><p>可以使用命令行安装，但是可能安装完之后没有自动生成vim软连接，自行配置下。</p>
<h4 id="2-3-2-安装spacevim"><a href="#2-3-2-安装spacevim" class="headerlink" title="2.3.2 安装spacevim"></a>2.3.2 安装spacevim</h4><ul>
<li>安装spacevim<br>这个插件通过一个shell脚本安装，该脚本主要是从github下载spacevim的插件和依赖，spacevim在国内有gitee的库，所以可以把脚本里的仓库地址修改为国内镜像，至于依赖可能没有国内仓库，自行clone。<br><br></li>
<li><p>配置spacevim<br>spacevim可以配置很多地方，但最常用的是主题，代码补齐，git插件，至于状态栏使用默认的即可。</p>
<p>主题需要启用主题模块才能在options里修改，代码补齐需要补齐模块，自带的git插件ginna由于有bug所以用fugitive，demo如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#=============================================================================</span><br><span class="line"># dark_powered.toml --- dark powered configuration example for SpaceVim</span><br><span class="line"># Copyright (c) 2016-2017 Wang Shidong &amp; Contributors</span><br><span class="line"># Author: Wang Shidong &lt; wsdjeg at 163.com &gt;</span><br><span class="line"># URL: https://spacevim.org</span><br><span class="line"># License: GPLv3</span><br><span class="line">#=============================================================================</span><br><span class="line"></span><br><span class="line"># All SpaceVim option below [option] section</span><br><span class="line">[options]</span><br><span class="line">    # set spacevim theme. by default colorscheme layer is not loaded,</span><br><span class="line">    # if you want to use more colorscheme, please load the colorscheme</span><br><span class="line">    # layer</span><br><span class="line">    colorscheme = &quot;gruvbox&quot;</span><br><span class="line">    colorscheme_bg = &quot;dark&quot;</span><br><span class="line">    # Disable guicolors in basic mode, many terminal do not support 24bit</span><br><span class="line">    # true colors</span><br><span class="line">    enable_guicolors = true</span><br><span class="line">    # Disable statusline separator, if you want to use other value, please</span><br><span class="line">    # install nerd fonts</span><br><span class="line">    statusline_separator = &quot;arrow&quot;</span><br><span class="line">    statusline_inactive_separator = &quot;arrow&quot;</span><br><span class="line">    buffer_index_type = 4</span><br><span class="line">    enable_tabline_filetype_icon = true</span><br><span class="line">    enable_statusline_mode = false</span><br><span class="line"></span><br><span class="line"># Enable autocomplete layer</span><br><span class="line">[[layers]]</span><br><span class="line">name = &apos;autocomplete&apos;</span><br><span class="line">auto_completion_return_key_behavior = &quot;complete&quot;</span><br><span class="line">auto_completion_tab_key_behavior = &quot;smart&quot;</span><br><span class="line"></span><br><span class="line">[[layers]]</span><br><span class="line">name = &apos;shell&apos;</span><br><span class="line">default_position = &apos;top&apos;</span><br><span class="line">default_height = 30</span><br><span class="line"></span><br><span class="line">[[layers]]</span><br><span class="line">name = &apos;VersionControl&apos;</span><br><span class="line"></span><br><span class="line">[[layers]]</span><br><span class="line">name = &apos;git&apos;</span><br><span class="line">git-plugin = &apos;fugitive&apos;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="2-3-chrome浏览器"><a href="#2-3-chrome浏览器" class="headerlink" title="2.3 chrome浏览器"></a>2.3 chrome浏览器</h3><h4 id="2-3-1-安装chrome"><a href="#2-3-1-安装chrome" class="headerlink" title="2.3.1 安装chrome"></a>2.3.1 安装chrome</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo pacman -S google-chrome</span><br></pre></td></tr></table></figure>
<h4 id="2-3-2-安装vim插件"><a href="#2-3-2-安装vim插件" class="headerlink" title="2.3.2 安装vim插件"></a>2.3.2 安装vim插件</h4><p>vimium插件可以从商店获取，但国内无法访问商店，可以从源码编译安装，vimium源码是nodejs项目，所以可以在系统配置了node之后，再来做这一步。</p>
<p>vimium github地址，可以clone到gitee上加速<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https://github.com/philc/vimium.git</span><br></pre></td></tr></table></figure></p>
<p>进入该项目执行build<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:cd vimium</span><br><span class="line">~:./make.js build</span><br></pre></td></tr></table></figure></p>
<p>然后在chrome 插件界面打开开发模式，然后pack extension，选择vimium文件夹打包即可，会在vimium同级目录生成插件和签名文件，插件拖动到chrome里即会自动安装。</p>
<h3 id="2-4-搜狗输入法"><a href="#2-4-搜狗输入法" class="headerlink" title="2.4 搜狗输入法"></a>2.4 搜狗输入法</h3><p>在manjaro20的仓库里已经没有了fcitx-sogoupinyin这个包，但是有同学打包了ubuntu-kylin里的企业版到github上项目名称为<code>fcitx-sogouimebs</code>，下载arch的包在本地用pacman安装即可。</p>
<p>github地址<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https://github.com/laomocode/fcitx-sogouimebs.git</span><br></pre></td></tr></table></figure></p>
<p>本地安装<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo pacman -U fcitx-sogouimebs.pkg.tar.xz</span><br></pre></td></tr></table></figure></p>
<h2 id="3-JAVA环境配置"><a href="#3-JAVA环境配置" class="headerlink" title="3. JAVA环境配置"></a>3. JAVA环境配置</h2><p>比较简单由于使用了openjdk14，所以顺便用openj9虚拟机替代hotspot</p>
<p>主要配置下java和maven的环境变量<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">JAVA_HOME=xxx</span><br><span class="line">MAVEN_HOME=xxx</span><br><span class="line">PATH=$&#123;PATH&#125;:$&#123;JAVA_HOME&#125;/bin:$&#123;MAVEN_HOME&#125;/bin</span><br><span class="line">export PATH</span><br></pre></td></tr></table></figure></p>
<p>顺道配置下maven本地仓库</p>
<ul>
<li>在/home/username/.m2/ 下复制 maven_home/conf/settings.xml，指定仓库地址和镜像地址<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>/home/nomq/work/repo<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>aliyun<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/repositories/central/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="4-JS环境配置"><a href="#4-JS环境配置" class="headerlink" title="4. JS环境配置"></a>4. JS环境配置</h2><h3 id="4-1-nvm和node安装"><a href="#4-1-nvm和node安装" class="headerlink" title="4.1 nvm和node安装"></a>4.1 nvm和node安装</h3><p>使用nvm配置node12的环境，nvm可以方便的管理多版本的node，并且自由切换版本。</p>
<p>首先下载nvm安装脚本</p>
<p>然后安装node，配置npm国内镜像</p>
<h3 id="4-2-此处简单介绍下hexo的配置"><a href="#4-2-此处简单介绍下hexo的配置" class="headerlink" title="4.2 此处简单介绍下hexo的配置"></a>4.2 此处简单介绍下hexo的配置</h3><p>因为之前配置了hexo，next主题，但是没有做任何记录，本次因为配置hexo实际上是next主题的mathjax支持，所以记录下。</p>
<p>hexo自带的公式渲染工具 hexo-render-marked由于存在一些配置问题，要使用 hexo-render-kramed替换<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:npm un -S hexo-render-marked</span><br><span class="line">~:npm i -S hexo-render-kramed</span><br></pre></td></tr></table></figure></p>
<p>开启next对mathjax的支持，其中公式引擎默认是mathjax，可以用但是引用的js文件可以改为cloudflare，国内更快。<br>${project_root}/themes/next/_config.yml<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">math:</span><br><span class="line">    enable: true</span><br></pre></td></tr></table></figure></p>
<p>开启该支持后，文章的头部需要添加<code>mathjax: true</code>才会渲染，当然也可以修改next配置文件默认所有文章渲染。比如以下：<br><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">manjaro20环境配置</span></span><br><span class="line"><span class="attr">copyright:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2020</span><span class="bullet">-08</span><span class="bullet">-09</span> <span class="number">03</span><span class="string">:01:40</span></span><br><span class="line"><span class="attr">mathjax:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">manjaro</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">arch</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">linux</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">tensorflow</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">cuda</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">win7</span></span><br></pre></td></tr></table></figure></p>
<p>接下来是一个行公式展示：</p>
<script type="math/tex; mode=display">
\begin{aligned}
    \vec{A}\vec{v} = \lambda\vec{v}
\end{aligned}</script><h2 id="5-python环境配置"><a href="#5-python环境配置" class="headerlink" title="5. python环境配置"></a>5. python环境配置</h2><p>主要是开发工具和tensorflow以及cuda的配置</p>
<h3 id="5-1-环境配置"><a href="#5-1-环境配置" class="headerlink" title="5.1 环境配置"></a>5.1 环境配置</h3><p>环境配置主要是指pip，需要配置下pip的国内镜像，在/home/username/.pip/pip.conf<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[global]</span><br><span class="line">index-url=https://mirrors.aliyun.com/pypi/simple/</span><br><span class="line">trusted-host=https://mirrors.aliyun.com/pypi/simple/</span><br></pre></td></tr></table></figure></p>
<h3 id="5-2-开发工具"><a href="#5-2-开发工具" class="headerlink" title="5.2 开发工具"></a>5.2 开发工具</h3><p>如果有kite，可以使用vscode就行了，一般早上可能网速好能下载到kite。<br>没有kite就用pycharm。</p>
<h3 id="5-2-tensorflow"><a href="#5-2-tensorflow" class="headerlink" title="5.2 tensorflow"></a>5.2 tensorflow</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:pip install tensorflow</span><br></pre></td></tr></table></figure>
<p>tensorflow-2.3.0 支持cuda10.1和cudnn7，在nvidia相关配置里会说明。</p>
<h3 id="5-3-nvidia驱动和cuda"><a href="#5-3-nvidia驱动和cuda" class="headerlink" title="5.3 nvidia驱动和cuda"></a>5.3 nvidia驱动和cuda</h3><p>manjaro20的软件仓库已经把cuda更新到了10.2，cudnn-8，需要自行下载安装cuda10.1和cudnn7，否则tensorflow无法使用GPU，目前仓库没有降级版本，只能从nvidia官网下载指定版本，不用担心，下载速度还是很快的。</p>
<p>cuda <code>https://developer.nvidia.com/cuda-downloads</code> 选择<code>Legacy Releases</code>会跳转到其他版本选择页，选择10.1最新的版本是update2，系统是Linux-Unbuntu-18.04-runfile(local)，这是个run文件，arch也可以使用的。<br>下载完成后，执行<code>sudo sh cuda_10.1.243_418.87.00_linux.run</code>安装，会跳出选择界面让你选择各种配置其中包括nvidia驱动，取消驱动勾选因为我们自行安装驱动，注意cuda10.1需要nvidia驱动418（可以在manjaro硬件设置里安装），高于这个版本需要先降级。之后应该会安装成功，但是cuda相关的命令比如nvcc还不能用，按照安装完成的提示，把cuda的bin目录添加到path即可。至于library路径，已经自动添加到/etc/ld.so.conf，后边添加cudnn到cuda时，需要<code>sudo ldconfig</code>来更新下library。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">```</span><br><span class="line">cudnn，链接地址 `https://developer.nvidia.com/cudnn`，需要登录之后才能选择下载，在下载页选择`Archived cuDNN Releases`才能展示出旧版本，然后选择for cuda10.1，之后直接选择`cuDNN Library for Linux`，这是个压缩包，需要手动解压和配置。</span><br><span class="line"></span><br><span class="line">解压之后的目录名也叫cuda，把该目录下的头文件和so文件复制到cuda的安装目录即可</span><br></pre></td></tr></table></figure></p>
<h1 id="cuda-安装目录-usr-local-cuda-10-1"><a href="#cuda-安装目录-usr-local-cuda-10-1" class="headerlink" title="cuda 安装目录 /usr/local/cuda-10.1/"></a>cuda 安装目录 /usr/local/cuda-10.1/</h1><h1 id="cudnn-解压目录-home-username-cuda"><a href="#cudnn-解压目录-home-username-cuda" class="headerlink" title="cudnn 解压目录 /home/username/cuda"></a>cudnn 解压目录 /home/username/cuda</h1><p>~:sudo cp ~/cuda/include/cudnn.h /usr/local/cuda-10.1/include/<br>~:sudo cp ~/cuda/lib/libcudnn* /usr/local/cuda-10.1/lib/<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">由于 cudnn的lib目录有软链接，所以在cuda里也要重建下</span><br></pre></td></tr></table></figure></p>
<p>lrwxrwxrwx 1 user user   13 10月 28  2019 libcudnn.so -&gt; libcudnn.so.7<br>lrwxrwxrwx 1 user user   17 10月 28  2019 libcudnn.so.7 -&gt; libcudnn.so.7.6.5<br>-rwxr-xr-x 1 user user 409M 10月 28  2019 libcudnn.so.7.6.5<br>-rw-r—r— 1 user user 386M 10月 28  2019 libcudnn_static.a<br>```<br>按照这个关系重建即可，附加说明下在cudnn-8里，lib目录多出了两个其他的so文件，也是要重新配置软链接的。</p>
]]></content>
      <categories>
        <category>manjaro</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>arch</tag>
        <tag>tensorflow</tag>
        <tag>cuda</tag>
        <tag>win7</tag>
      </tags>
  </entry>
  <entry>
    <title>manjaro内核管理</title>
    <url>/2020/03/31/manjaro/manjaro%E5%86%85%E6%A0%B8%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<p>两种方式管理内核<br>通过命令行查询内核/安装新内核/删除旧内核，也适用于其他发行版;<br>通过manjaro自带的内核管理gui工具管理内核。</p>
<a id="more"></a>
<h3 id="1-命令行管理内核"><a href="#1-命令行管理内核" class="headerlink" title="1. 命令行管理内核"></a>1. 命令行管理内核</h3><p>命令行可以通过三种方式获取编译好的内核：发行版软件仓库获取，内核源码编译获取</p>
<p><code>uname -r</code> 可以查看内核版本</p>
<p>manjaro 查看正在使用的内核 <code>mhwd-kernel -li</code></p>
<p>5.x lts 是 5.4.28，非lts的在软件仓库中可能是找不到相关包的。</p>
<p>可以在linux网站和manjaro内核管理gui上看到 lts版本;</p>
<p>linux内核网站 kernel.org</p>
<p>manjaro内核管理gui入口: manjaro settings -&gt; kernel</p>
<h4 id="1-1-软件仓库"><a href="#1-1-软件仓库" class="headerlink" title="1.1 软件仓库"></a>1.1 软件仓库</h4><p>(1) 查询可用的kernel</p>
<p>比如 linux-kernel 5.4.28<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:pacman -Ss linux54</span><br></pre></td></tr></table></figure></p>
<p>(2) 安装<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo pacman -S linux54 linux54-headers linux54-ndiswrapper</span><br></pre></td></tr></table></figure></p>
<p>其中 <code>ndiswrapper</code> 是网卡驱动。如果是在虚拟机上，还要安装虚拟机模块，<code>linux54-virtualbox-host-modules</code>。<br>如果需要安装更多驱动，比如nvidia显卡, sudo pacman -S linux54-extramodules 会提示选择</p>
<p>(3) 切换内核到新版本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo mhwd-kernel -i linux54</span><br></pre></td></tr></table></figure>
<p>(4) 删除旧版本内核<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo pacman -R linux53</span><br></pre></td></tr></table></figure></p>
<h4 id="1-2-使用编译好的内核"><a href="#1-2-使用编译好的内核" class="headerlink" title="1.2 使用编译好的内核"></a>1.2 使用编译好的内核</h4><p>manjaro目前不提供类似于ubuntu那样的 内核deb文件下载，所以只能下载内核源码自行编译。直接编译源码可能要花掉好几个小时。</p>
]]></content>
      <categories>
        <category>manjaro</category>
      </categories>
      <tags>
        <tag>manjaro</tag>
        <tag>linux kernel</tag>
      </tags>
  </entry>
  <entry>
    <title>manjaro多桌面环境</title>
    <url>/2020/03/31/manjaro/manjaro%E5%A4%9A%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<p>manjaro滚动更新可能导致桌面环境bug或不可用，比如gnome版本更新导致插件异常，安装多个桌面可以在必要时切换环境。<br>本文是在gnome的基础上，安装 kde</p>
<a id="more"></a>
<h3 id="1-安装kde"><a href="#1-安装kde" class="headerlink" title="1. 安装kde"></a>1. 安装kde</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo pacman -S plasma</span><br></pre></td></tr></table></figure>
<p>会提示选择额外的包，默认全选，安装完之后kde就安装好了。</p>
<h3 id="2-对于虚拟机，可能需要配置分辨率"><a href="#2-对于虚拟机，可能需要配置分辨率" class="headerlink" title="2. 对于虚拟机，可能需要配置分辨率"></a>2. 对于虚拟机，可能需要配置分辨率</h3>]]></content>
      <categories>
        <category>manjaro</category>
      </categories>
      <tags>
        <tag>manjaro</tag>
        <tag>kde</tag>
        <tag>gnome</tag>
      </tags>
  </entry>
  <entry>
    <title>manjaro滚动更新与问题解决</title>
    <url>/2020/03/31/manjaro/manjaro%E6%BB%9A%E5%8A%A8%E6%9B%B4%E6%96%B0%E4%B8%8E%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</url>
    <content><![CDATA[<p>manjaro基于arch，所以带有滚动更新。频繁的滚动更新会导致某些非稳定的bug，比如gnome版本升级可能导致插件无法使用。长时间不做更新，也会导致更新在删除某些软件时提示依赖错误。</p>
<a id="more"></a>
<h3 id="1-长时间不更新导致的依赖问题"><a href="#1-长时间不更新导致的依赖问题" class="headerlink" title="1. 长时间不更新导致的依赖问题"></a>1. 长时间不更新导致的依赖问题</h3><p>更新A包时提示B包依赖A更低的版本号，此时选择删除掉B，但是可能提示C依赖B，可能会有很多的逐层的依赖。</p>
<p>正确的操作是，逐层记录依赖关系，找到源头一层层删除，然后更新系统，更新完之后可以尝试重新安装删除的包。<br>但是一般自动更新提示依赖问题，可能就是因为更新中删除了某些包，在更新结束之后，重新安装这些包可能提示找不到，这也是正常的，有时候可能导致某些软件不可用，比如gnome更新之后，插件不可用。</p>
<h3 id="2-pip-的问题"><a href="#2-pip-的问题" class="headerlink" title="2. pip 的问题"></a>2. pip 的问题</h3><p>有时，需要更新系统时发现 pip无法使用了，比如代码错误，import错误等等，这通常是因为某些python包版本变化导致，或python版本变化导致。<br>比如pip的安装包名从 pip 变成了python-pip，python从3.7变成了3.8。<br>如果你不会修改pip的python依赖，那么就先更新系统。一般在更新完系统之后pip的依赖会自动更新完成。</p>
<p>如果需要自行修改源代码并重新运用到 site-pakcages，可以通过clone源码的方式，需要编辑setup.py。<br>安装命令 pip install -e 或者 python setup.py develop ，这两个方式用于开发调试会很快捷。去掉 -e或者develop通常就是安装那些代码固定不变，不需要调试的模块。</p>
]]></content>
      <categories>
        <category>manjaro</category>
      </categories>
      <tags>
        <tag>manjaro</tag>
      </tags>
  </entry>
  <entry>
    <title>Manjaro镜像源配置</title>
    <url>/2019/07/29/manjaro/manjaro%E7%9A%84%E9%95%9C%E5%83%8F%E6%BA%90%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>Manjaro 的软件源配置比 Ubuntu 稍微复杂一些，因为 archlinux 的软件源配置使用 conf 格式的节点式配置，支持 $ 变量。并且 Manjaro 没有国内的企业镜像源支持，院校提供有稳定版本但速度稍慢，企业站提供 arch 的源，但提供的软件不稳定会导致系统崩溃。</p>
<a id="more"></a>
<h3 id="1-archlinux-镜像源配置文件"><a href="#1-archlinux-镜像源配置文件" class="headerlink" title="1. archlinux 镜像源配置文件"></a><strong>1. archlinux 镜像源配置文件</strong></h3><ul>
<li><h4 id="etc-pacman-conf"><a href="#etc-pacman-conf" class="headerlink" title="/etc/pacman.conf"></a>/etc/pacman.conf</h4></li>
</ul>
<p>arch 把软件按照类型分别存放在四个仓库</p>
<p>core: 系统核心部分，基础组件，决定系统能否启动。这部分应该使用 manjaro stable 的镜像。<br>extra: 应用层功能基础组件，比如 shell,de 等等，系统的基本功能，也应该使用 manjaro stable 的镜像。<br>mutilib: 一些额外的东西，用户基本不接触，最好使用 manjaro stable 镜像。<br>community: 社区软件，应用层的软件都可以从这个仓库获取，可以使用 arch 的源，以保持软件最新。</p>
<p>此外还可以添加额外的仓库，以获取独有的软件支持: 其他的源，比如 archlinuxcn， 包含一些中文相关的特有软件比如 sogoupinyin。</p>
<p>节点网址中必须包含仓库名，且会教研返回值中的仓库名是否与节点名相同。</p>
<p>配置格式有两种，以中文仓库 archlinuxcn 为例     </p>
<ol>
<li>仓库名变量配置<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[archlinuxcn]</span><br><span class="line">SigLevel = Optional TrusAll</span><br><span class="line">Server = https://mirrors.tuna.tsinghua.edu.cn/$repo/$arch</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>节点名 <code>archlinuxcn</code> 就是仓库名, 变量 <code>$repo</code> 取的就是节点名</p>
<ol>
<li>仓库名直接配置<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[archlinuxcn]</span><br><span class="line">SigLevel = Optional TrusAll</span><br><span class="line">Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>网址中直接写仓库地址</p>
<ul>
<li><h4 id="etc-pacman-d-mirrorlist"><a href="#etc-pacman-d-mirrorlist" class="headerlink" title="/etc/pacman.d/mirrorlist"></a>/etc/pacman.d/mirrorlist</h4></li>
</ul>
<p>pacman.conf 支持包含文件，四个仓库默认包含该文件，所以可以把国内的镜像地址直接写在 mirrorlist 里<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Server = https://mirrors.tuna.tsinghua.edu.cn/manjaro/stable/$repo/$arch</span><br></pre></td></tr></table></figure></p>
<p>但是，像 community 仓库 可能要使用最新版，以阿里云镜像为例<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[community]</span><br><span class="line">SigLevel = PackageRequired</span><br><span class="line">Server = https://mirrors.aliyun.com/archlinux/$repo/os/$arch</span><br></pre></td></tr></table></figure></p>
<p>要注意镜像源路径中的其他路径，不能漏掉。</p>
<h3 id="2-具体配置过程"><a href="#2-具体配置过程" class="headerlink" title="2. 具体配置过程"></a><strong>2. 具体配置过程</strong></h3><ul>
<li><h4 id="修改-etc-pacman-d-mirrorlist，-使用国内源"><a href="#修改-etc-pacman-d-mirrorlist，-使用国内源" class="headerlink" title="修改 /etc/pacman.d/mirrorlist， 使用国内源"></a>修改 /etc/pacman.d/mirrorlist， 使用国内源</h4><p>  使用 stable 的高校 manjaro 源， 比如清华大学，其他的 Server 可以删掉</p>
<p>  <code>Server = https://mirrors.tuna.tsinghua.edu.cn/manjaro/stable/$repo/$arch</code></p>
</li>
<li><h4 id="修改-community-为-阿里云的arch源，以保持应用软件更新"><a href="#修改-community-为-阿里云的arch源，以保持应用软件更新" class="headerlink" title="修改 community 为 阿里云的arch源，以保持应用软件更新"></a>修改 community 为 阿里云的arch源，以保持应用软件更新</h4><p>  /etc/pacman.conf</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[community]</span><br><span class="line">SigLevel = PackageRequired</span><br><span class="line">Server = https://mirrors.aliyun.com/archlinux/$repo/os/$arch</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="添加-archlinuxcn-以获取-搜狗输入法"><a href="#添加-archlinuxcn-以获取-搜狗输入法" class="headerlink" title="添加 archlinuxcn 以获取 搜狗输入法"></a>添加 archlinuxcn 以获取 搜狗输入法</h4><p>  /etc/pacman.conf</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[archlinuxcn]</span><br><span class="line">SigLevel = Optional TrustAll</span><br><span class="line">Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="同步本地仓库信息，更新缓存"><a href="#同步本地仓库信息，更新缓存" class="headerlink" title="同步本地仓库信息，更新缓存"></a>同步本地仓库信息，更新缓存</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo pacman -Syy</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <categories>
        <category>manjaro</category>
      </categories>
      <tags>
        <tag>manjaro</tag>
        <tag>pacman</tag>
      </tags>
  </entry>
  <entry>
    <title>Manjaro输入法配置</title>
    <url>/2019/07/29/manjaro/manjaro%E8%BE%93%E5%85%A5%E6%B3%95%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p><code>搜狗拼音</code>需要<code>fcitx</code>的支持。<br>需要配置 中文镜像源 以获取搜狗拼音的包。</p>
<a id="more"></a>
<h3 id="1-fcitx-安装"><a href="#1-fcitx-安装" class="headerlink" title="1. fcitx 安装"></a><strong>1. fcitx 安装</strong></h3><p>截止 2019-11-01 Manjaro 18.1.2， 使用 fcitx 5 即可。<br>但是有多种不同的实现，此处使用 qt的实现<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo pacman -S fcitx-im fcitx-configtool fcitx-sogoupinyin</span><br></pre></td></tr></table></figure></p>
<p><code>fcitx-im</code> </p>
<p>** <code>fcitx-configtool</code> 是 fcitx 的配置界面</p>
<h3 id="2-应用输入法"><a href="#2-应用输入法" class="headerlink" title="2. 应用输入法"></a><strong>2. 应用输入法</strong></h3><p><code>~/.xprofile</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">export GTK_IM_MODULE=fcitx</span><br><span class="line">export QT_IM_MODULE=fcitx</span><br><span class="line">export XMODIFIERS=&quot;@im=fcitx&quot;%</span><br></pre></td></tr></table></figure></p>
<p>在 fcitx 的配置界面添加 搜狗输入法 </p>
]]></content>
      <categories>
        <category>manjaro</category>
      </categories>
      <tags>
        <tag>manjaro</tag>
        <tag>fcitx</tag>
      </tags>
  </entry>
  <entry>
    <title>Mariadb 安装</title>
    <url>/2019/07/29/manjaro/mariadb-10.4%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<p>Manjaro 18.1.2安装 Mariadb 10过程中并未设置用户名和密码。<br>用户需要手动配置, 可能会遇到默认的数据库没有安装导致无法启动，并且启动之后还要设置用户密码等等。<br>类似于mysql 5.7的配置过程。</p>
<a id="more"></a>
<h3 id="1-安装后无法启动服务"><a href="#1-安装后无法启动服务" class="headerlink" title="1. 安装后无法启动服务"></a><strong>1. 安装后无法启动服务</strong></h3><p>使用 <code>journalctl -xe</code> 查看服务启动日志，mariadb相关错误中，主要是一些系统表无法加载或打开之类的错误，如下：<br><code>Could not open mysql.plugin table. Some plugins may be not loaded</code><br>这是因为安装过程中没有安装系统表，需要使用 <code>mysql_install_db</code> 来安装。注意 root 权限。<br>命令如下:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo systemctl stop mariadb</span><br><span class="line">~:sudo rm -R /var/lib/mysql/*</span><br><span class="line">~:sudo mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql</span><br><span class="line">~:sudo systemctl start mariadb</span><br></pre></td></tr></table></figure></p>
<h3 id="2-配置root用户密码"><a href="#2-配置root用户密码" class="headerlink" title="2. 配置root用户密码"></a><strong>2. 配置root用户密码</strong></h3><p>最初只有两个用户<br>root@localhost: 没有密码但只能使用 sudo 权限登录 ;<br>mysql@localhost: 没有密码但只能使用 系统的mysql用户 权限登录(由于系统不开放mysql的登录权限，所以不用)。</p>
<p>mariadb 对很多旧的函数仍然支持，可以在登录 root@localhost 之后，修改密码:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:set password=password(&quot;root&quot;);</span><br></pre></td></tr></table></figure></p>
<p>相比 mysql 5.7 要简单很多。</p>
]]></content>
      <categories>
        <category>manjaro</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>mariadb</tag>
        <tag>manjaro</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL recursion select</title>
    <url>/2019/07/26/mysql/MySQL-recursion-select/</url>
    <content><![CDATA[<p>一个mysql自下向上的递归查询sql。<br>实践经验告诉我，这样的sql不用也罢。<br>如果要避免这样的用法，首先要设计好表结构，其次可以把部分递归逻辑转换到代码里。如果有性能方面的考量可以考虑函数或存储过程，或优化好表结构。</p>
<a id="more"></a>
<p>递归查询的需求： 用户邀请层级关系，在该关系上存在（一/二/三）三级代理商。如下。用户表和代理商表没有代理关系的字段，也就是用户表里没有所属代理商字段。代理商也没有代理商代理的用户列表。在用户表建立代理商字段，或者建立代理商代理用户关系表，变动时，更改数据太多。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">用户A邀请了用户B，用户B邀请了用户C，用户C邀请了用户D，A-&gt;B-&gt;C-&gt;D。</span><br><span class="line">而A是三级代理商，则根据D的上级邀请关系，查询出D的三级代理商。</span><br><span class="line">需要查出C-&gt;查出B-&gt;查出A。</span><br><span class="line"></span><br><span class="line">相应的，代理商要查询出自己代理了哪些用户，A-&gt;B-&gt;C-&gt;D，这样的顺序查询。</span><br></pre></td></tr></table></figure></p>
<ul>
<li>一个优化</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">建立用户的邀请层级关系表，比如 A a， B a.b， C a.b.c，D a.b.c.d。</span><br><span class="line">查询时就会方便很多。</span><br></pre></td></tr></table></figure>
<p>在查询中使用变量和子查询可以形成递归。<br>查询结果里的子查询因为变量修改重新发起查询。<br>一个自下向上的递归<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> cid,(<span class="keyword">select</span> @<span class="keyword">var</span>:= parent_id <span class="keyword">from</span> table1 <span class="keyword">where</span> <span class="keyword">id</span>=cid) pid </span><br><span class="line"><span class="keyword">from</span> </span><br><span class="line">table1, (<span class="keyword">select</span> @<span class="keyword">var</span> := <span class="number">10</span>) init_id</span><br><span class="line"><span class="keyword">where</span> </span><br><span class="line">table1.id = @<span class="keyword">var</span></span><br><span class="line"><span class="keyword">and</span> table1.parent_i &lt;&gt; <span class="number">0</span>;</span><br></pre></td></tr></table></figure></p>
<p>以上例子将查询id=10的所有祖先节点.</p>
]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>query/select</tag>
        <tag>recursion query</tag>
        <tag>递归查询</tag>
      </tags>
  </entry>
  <entry>
    <title>my.cnf standard</title>
    <url>/2019/07/26/mysql/my-cnf-standard/</url>
    <content><![CDATA[<p>mysql 开启了慢查询日志和二进制日志的配置文件。</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[client]</span><br><span class="line">default-character-set=utf8</span><br><span class="line">[mysqld]</span><br><span class="line">character_set_server=utf8</span><br><span class="line">max_connections=800</span><br><span class="line"># O_DIRECT for local, and fsync for san</span><br><span class="line">innodb_flush_method=O_DIRECT</span><br><span class="line">lower_case_table_names=1</span><br><span class="line"></span><br><span class="line"># mysqld log</span><br><span class="line">log_error=/var/log/mysql/mysqld.log</span><br><span class="line"># slow query log</span><br><span class="line">slow_query_log=on</span><br><span class="line">slow_query_log_file=/var/log/mysql/mysql_slow_query.log</span><br><span class="line">long_query_time=2</span><br><span class="line"># bin log</span><br><span class="line">server_id=1</span><br><span class="line">log_bin=/var/log/mysql/mysql-bin</span><br><span class="line">log_bin_index=/var/log/mysql/mysql-bin.index</span><br><span class="line"># default is 0, for master and slaves, creating functions is unsafe if the functions will change the data.</span><br><span class="line"># and slaves want copy unsafe functions from master unless log_bin_trust_function_creators=1 on slaves.</span><br><span class="line"># so you can set log_bin_trust_function_creators=1.</span><br><span class="line"># Or you specify the types of the functions in [DETERMINISTIC,NO SQL,READS SQL DATA]</span><br><span class="line">log_bin_trust_function_creators=1</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql db and user disapear</title>
    <url>/2019/07/26/mysql/mysql-db-and-user-disapear/</url>
    <content><![CDATA[<p>mysql 创建的数据库和用户消失的问题。<br>win10上能重复安装mysql service，但每次只能启动一个。<br>每个service的库是不一样的，会导致库和用户消失的问题。</p>
<a id="more"></a>
<p>mysql 5.6<br>windows10</p>
<h3 id="1-Theory"><a href="#1-Theory" class="headerlink" title="1. Theory"></a><strong>1. Theory</strong></h3><p>A service is an instance of mysql.<br>We can use <code>mysqld --install [service_name_not_necessary]</code> to install a mysql service.<br>But things isn’t like oracle. Though there can be more than one mysql instance in windows. But only one of them can be start and keep runing.</p>
<h3 id="2-Problem"><a href="#2-Problem" class="headerlink" title="2. Problem"></a><strong>2. Problem</strong></h3><p>If you create somthing in a mysql instance. And at next time, if windows starts a different instance, after logining into mysql you won’t see any issues you created before.</p>
<h3 id="3-Deal"><a href="#3-Deal" class="headerlink" title="3. Deal"></a><strong>3. Deal</strong></h3><p>Most convenient way.<br>Change the service to the right instance.</p>
<p>If you want only one instance, you should delete extra instances. </p>
<p>install an instance<br><code>mysqld --install [service_name]</code> service name is not necessary</p>
<p>delete an instance<br><code>mysqld --remove [service_name]</code> service name is not necessary</p>
<p>delete an service with windows command<br><code>sc delete mysql_service_name</code> service_name is necessary but don’t need the service really exists.</p>
<h3 id="4-net-start-amp-stop-mysql"><a href="#4-net-start-amp-stop-mysql" class="headerlink" title="4. net start &amp; stop mysql"></a><strong>4. net start &amp; stop mysql</strong></h3><p><code>net start service_name</code> it can start a service, use this command to start a msyql instance, the service must exits (you can use <code>mysqld --install [service_name]</code> to install a mysql service). If the service doesn’t exist,  error 2185 will occure.</p>
]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>windows</tag>
        <tag>mysql service</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql import a sql file</title>
    <url>/2019/07/26/mysql/mysql-import-a-sql-file/</url>
    <content><![CDATA[<p>mysql导入sql脚本时存在的一些错误和解决办法。<br>比如函数指定了创建者，可能会导致权限问题。<br>导入导出也会设计到sql，一般也需要关掉bin log。</p>
<a id="more"></a>
<h3 id="1-review-the-dump-and-import-commands"><a href="#1-review-the-dump-and-import-commands" class="headerlink" title="1. review the dump and import commands"></a><strong>1. review the dump and import commands</strong></h3><h4 id="1-1-dump"><a href="#1-1-dump" class="headerlink" title="1.1 dump"></a>1.1 dump</h4><ul>
<li><h5 id="1-1-1-dump-tables-data（include-indexes）-and-triggers"><a href="#1-1-1-dump-tables-data（include-indexes）-and-triggers" class="headerlink" title="1.1.1 dump tables, data（include indexes） and triggers"></a>1.1.1 dump tables, data（include indexes） and triggers</h5>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:mysqldump -h 192.168.0.100 -P 3306 -u root -p&quot;root&quot; -default-character-set=utf8 db_name | gzip &gt; db_name_utf8.sql.gz</span><br></pre></td></tr></table></figure>
</li>
<li><h5 id="1-1-2-dump-procedures-and-functions"><a href="#1-1-2-dump-procedures-and-functions" class="headerlink" title="1.1.2 dump procedures and functions"></a>1.1.2 dump procedures and functions</h5>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:mysqldump -h 192.168.0.100 -P 3306 -u root -p&quot;root&quot; -default-character-set=utf8 -ndt -R db_name | gzip &gt; db_name_func_utf8.sql.gz</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="1-2-import"><a href="#1-2-import" class="headerlink" title="1.2 import"></a>1.2 import</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:gunzip &lt; db_name_utf8.sql.gz | mysql -h 192.168.0.100 -P 3306 -u root -p&quot;root&quot; db_name</span><br></pre></td></tr></table></figure>
<h3 id="2-errors"><a href="#2-errors" class="headerlink" title="2. errors"></a><strong>2. errors</strong></h3><h4 id="2-1-function-sql"><a href="#2-1-function-sql" class="headerlink" title="2.1 function.sql"></a>2.1 function.sql</h4><ul>
<li><h5 id="2-1-1-remove-definer"><a href="#2-1-1-remove-definer" class="headerlink" title="2.1.1 remove definer"></a>2.1.1 remove definer</h5><p>  It will need you specify definer if theres definer in your sql<br>  <strong>==&gt;</strong> vim<br>  <strong>==&gt;</strong> find all <code>DEFINER</code><br>  <strong>==&gt;</strong> remove them</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">:%s/CREATE DEFINER=`user`@`host`/CREATE/g</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-1-2-data-sql"><a href="#2-1-2-data-sql" class="headerlink" title="2.1.2 data.sql"></a>2.1.2 data.sql</h4><p>  <strong>remove definer</strong><br>  <strong>==&gt;</strong> vim<br>  <strong>==&gt;</strong> find all <code>DEFINER</code><br>  you will find sql like this</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/*!50013 DEFINER=`root`@`%` SQL SECURITY DEFINER */</span><br></pre></td></tr></table></figure>
<p>  <strong>==&gt;</strong> remove them</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">:%s/\/\*.* DEFINER=`root`@`%` .* \*\// /g</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-1-3-remove-sql-log-bin"><a href="#2-1-3-remove-sql-log-bin" class="headerlink" title="2.1.3 remove sql_log_bin"></a>2.1.3 remove sql_log_bin</h4><p>  <strong>==&gt;</strong> vim<br>  remove all like this</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SET @MYSQLDUMP_TEMP_LOG_BIN = @@SESSION.SQL_LOG_BIN;</span><br><span class="line">SET @@SESSION.SQL_LOG_BIN= 0;</span><br><span class="line">SET @@GLOBAL.GTID_PURGED=&apos;2f42730f-f678-11e7-9f60-0017fa0116c4:1-91374&apos;;</span><br><span class="line">SET @@SESSION.SQL_LOG_BIN = @MYSQLDUMP_TEMP_LOG_BIN;</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-1-4-remove-database-specify-sql"><a href="#2-1-4-remove-database-specify-sql" class="headerlink" title="2.1.4 remove database specify sql"></a>2.1.4 remove database specify sql</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">:%s/ALTER DATABASE `db`/-- ALTER DATABASE `db`/g</span><br><span class="line">:%s/USE `db`/-- USE `db`/g</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>mysqldump</tag>
        <tag>mysql import</tag>
        <tag>mysql导入</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql import csv</title>
    <url>/2019/07/26/mysql/mysql-import-csv/</url>
    <content><![CDATA[<p>连接mysql之后导入csv数据</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">LOAD DATA LOCAL INFILE &apos;/home/fwdadmin/test.csv&apos; </span><br><span class="line">INTO TABLE bankinfo </span><br><span class="line">FIELDS </span><br><span class="line">ESCAPED BY    &apos;\\&apos; </span><br><span class="line">TERMINATED BY     &apos;,&apos; </span><br><span class="line">ENCLOSED BY   &apos;&quot;&apos; </span><br><span class="line">LINES TERMINATED BY   &apos;\r\n&apos; </span><br><span class="line">(`bankcode`,`bankname`); --fileds area that you want.</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>csv</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql open logs</title>
    <url>/2019/07/26/mysql/mysql-open-logs/</url>
    <content><![CDATA[<p>windows mysql开启慢查询日志和二进制日志。<br>需要注意路径里的斜杠要使用unix风格。</p>
<a id="more"></a>
<p><strong>Notice:</strong> All path use “/“ instead of “\“.<br>mysql 5.6 mariadb<br>windows10 </p>
<p><strong>my.ini</strong></p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="comment"># error log</span></span><br><span class="line"><span class="attr">log_error</span>=<span class="string">"D:/mysql_logs/error.log"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># open it to save all slow query logs into files</span></span><br><span class="line"><span class="attr">general_log</span>=<span class="literal">on</span></span><br><span class="line"><span class="attr">general_log_file</span>=<span class="string">"D:/mysql_logs/query.log"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># slow query log</span></span><br><span class="line"><span class="attr">slow_query_log</span>=<span class="literal">on</span></span><br><span class="line"><span class="attr">slow_query_log_file</span>=<span class="string">"D:/mysql_logs/slow_query.log"</span></span><br><span class="line"><span class="attr">long_query_time</span>=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># binary log</span></span><br><span class="line"><span class="comment"># update, insert and delete operation will be convert into binary and saved into these file. You can use these files to roll back your databases.</span></span><br><span class="line"><span class="attr">server-id</span>=<span class="number">1</span></span><br><span class="line"><span class="comment"># Notice: if you  want to use binary log, you have to specify your functions' type with one of (DETERMINISTIC,NO SQL,READS SQL DATA)</span></span><br><span class="line"><span class="comment"># CREATE DEFINER=`username`@`%` READS SQL DATA FUNCTION `fn_getitemclock`(i_itemid bigint,i_clock int,i_pos int) RETURNS int(11)...begin...end</span></span><br><span class="line"><span class="comment"># Or set log_bin_trust_function_creators=1 in my.ini, it is less safe for master-slave system.</span></span><br><span class="line"><span class="comment"># log_bin="D:/mysql_logs/log_bin/binlog-bin"</span></span><br><span class="line"><span class="comment"># lob_bin_index="D:/mysql_logs/log_bin/binlog"  </span></span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>windows</tag>
        <tag>mysql 5.6</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql tar.gz linux</title>
    <url>/2019/07/26/mysql/mysql-tar-gz-linux/</url>
    <content><![CDATA[<p>mysql bin包解压安装和配置</p>
<a id="more"></a>
<h3 id="1-decompress"><a href="#1-decompress" class="headerlink" title="1. decompress"></a><strong>1. decompress</strong></h3><h3 id="2-create-group-and-user-for-mysql"><a href="#2-create-group-and-user-for-mysql" class="headerlink" title="2. create group and user for mysql"></a><strong>2. create group and user for mysql</strong></h3><p>groupadd -g mysql<br>useradd -g mysql mysql</p>
<h3 id="3-init-mysql"><a href="#3-init-mysql" class="headerlink" title="3. init mysql"></a><strong>3. init mysql</strong></h3><p>cd mysql_home</p>
<ul>
<li><h4 id="3-1-use-scripts-to-create-mysql-system-database"><a href="#3-1-use-scripts-to-create-mysql-system-database" class="headerlink" title="3.1 use scripts to create mysql system database"></a>3.1 use scripts to create mysql system database</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:./scripts/mysql_install_db --user=mysql</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="3-2-start-myql"><a href="#3-2-start-myql" class="headerlink" title="3.2 start myql"></a>3.2 start myql</h4><p>  <code>~:./bin/mysql_safe --user=mysql</code></p>
</li>
</ul>
<h3 id="4-login-mysql-and-set-password"><a href="#4-login-mysql-and-set-password" class="headerlink" title="4. login mysql and set password"></a><strong>4. login mysql and set password</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:mysql -u root</span><br><span class="line">~:set password =password(&apos;admin123&apos;);</span><br></pre></td></tr></table></figure>
<h3 id="5-register-mysql-as-system-service"><a href="#5-register-mysql-as-system-service" class="headerlink" title="5. register mysql as system service"></a><strong>5. register mysql as system service</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:cp support-files/mysql.server /etc/init.d/mysql</span><br><span class="line">~:chconfig --add mysql</span><br><span class="line">~:chconfig mysql on</span><br></pre></td></tr></table></figure>
<h3 id="6-reboot-system"><a href="#6-reboot-system" class="headerlink" title="6. reboot system"></a><strong>6. reboot system</strong></h3><h3 id="7-etc-my-cnf"><a href="#7-etc-my-cnf" class="headerlink" title="7. /etc/my.cnf"></a><strong>7. /etc/my.cnf</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">character_set_server=utf8</span><br><span class="line">lower_case_table_names=1</span><br></pre></td></tr></table></figure>
<h3 id="8-restart-mysql"><a href="#8-restart-mysql" class="headerlink" title="8. restart mysql"></a><strong>8. restart mysql</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:systemctl restart mysql</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>mysqlbinlog</title>
    <url>/2019/07/26/mysql/mysqlbinlog/</url>
    <content><![CDATA[<p>导出并转码mysql二进制日志。<br>mysql bin log里包含了数据库操作日志，可用于数据回滚。</p>
<a id="more"></a>
<h3 id="1-选择数据库"><a href="#1-选择数据库" class="headerlink" title="1. 选择数据库"></a><strong>1. 选择数据库</strong></h3><p>提取指定的数据库的日志<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:mysqlbinlog -d db_name mysql-bin.000001 &gt; test.log</span><br></pre></td></tr></table></figure></p>
<h3 id="2-base64转码为可读的sql"><a href="#2-base64转码为可读的sql" class="headerlink" title="2. base64转码为可读的sql"></a><strong>2. base64转码为可读的sql</strong></h3><p>-v 把sql语句转码为可读<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:mysqlbinlog --base64-output=decode-rows -v mysql-bin.000001 &gt; test.log</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>mysql log</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql账户问题</title>
    <url>/2019/09/12/mysql/mysql%E8%B4%A6%E6%88%B7%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>mysql 5.7 安装之后设置密码无效。普通用户无法登录的情况</p>
<a id="more"></a>
<p>root用户可以直接登录。或者按照/etc/mysql/debian.cnf里的用户名密码登录后</p>
<p>更新mysql.user里的密码和插件。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">update mysql.user set authentication_string=password(&apos;123&apos;), plugin=&apos;mysql_native_password&apos; where user=&apos;root&apos;;</span><br></pre></td></tr></table></figure>
<p>restart mysql.service</p>
]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu 18.04 install mariadb 10.3</title>
    <url>/2019/07/26/mysql/ubuntu-18-04-install-mariadb-10-3/</url>
    <content><![CDATA[<p>安装mariadb指定版本。<br>mariadb的配置和界面比mysql更加友好。兼容性也更强。<br>此处只是一些安装后的错误和解决办法。</p>
<a id="more"></a>
<p>You can see the steps in my article. (11)<br><a href="https://www.jianshu.com/p/30c720becad8" target="_blank" rel="noopener">steps</a></p>
<p>Here are some error dealing.</p>
<h3 id="1-Plugin-39-unix-socket-39-is-not-loaded"><a href="#1-Plugin-39-unix-socket-39-is-not-loaded" class="headerlink" title="1. Plugin &#39;unix_socket&#39; is not loaded."></a><strong>1. <code>Plugin &#39;unix_socket&#39; is not loaded.</code></strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:systemctl start mariadb</span><br><span class="line">~:sudo mysqld_safe --skip-grant-tables &amp;</span><br><span class="line">~:mysql -u root</span><br><span class="line">~:select host,user,plugin from mysql.user where user=&apos;root&apos;;</span><br><span class="line">~:update mysql.user set plugin=&apos;mysql_native_password&apos; where user=&apos;root&apos;;</span><br><span class="line">~:set password =password(&apos;new_password&apos;);</span><br><span class="line">~:systemctl restart mysql</span><br></pre></td></tr></table></figure>
<h3 id="2-my-cnf"><a href="#2-my-cnf" class="headerlink" title="2. my.cnf"></a><strong>2. my.cnf</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:mysql --help|grep my.cnf</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:cp /etc/mysql/mariadb.cnf my.cnf</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>mariadb</tag>
      </tags>
  </entry>
  <entry>
    <title>respository install mysql</title>
    <url>/2019/07/26/mysql/respository-install-mysql/</url>
    <content><![CDATA[<p>项目可能需要指定版本的mysql，因为不同版本兼容性问题。<br>mysql官方提供了仓库安装的方式，可以选择不同的版本安装。<br>由于发行版自带的包管理器可能只能安装最新版，所以需要以上方式。<br>本文介绍了 centos7 上的安装方式。</p>
<a id="more"></a>
<h2 id="CentOS7-install-mysql-by-repository"><a href="#CentOS7-install-mysql-by-repository" class="headerlink" title="CentOS7 install mysql by repository"></a>CentOS7 install mysql by repository</h2><h3 id="1-remove-installed-mysql"><a href="#1-remove-installed-mysql" class="headerlink" title="1. remove installed mysql"></a><strong>1. remove installed mysql</strong></h3><ul>
<li><h4 id="1-1-to-see-if-theres-mysql-installed"><a href="#1-1-to-see-if-theres-mysql-installed" class="headerlink" title="1.1 to see if theres mysql installed"></a>1.1 to see if theres mysql installed</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:rpm -qa | grep mysql</span><br></pre></td></tr></table></figure>
<p>  or</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:yum list installed | grep mysql</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="1-2-uninstall"><a href="#1-2-uninstall" class="headerlink" title="1.2 uninstall"></a>1.2 uninstall</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:yum -y remove mysql-libs*</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="2-get-the-repository-rpm-for-your-system-platform"><a href="#2-get-the-repository-rpm-for-your-system-platform" class="headerlink" title="2. get the repository rpm for your system platform"></a><strong>2. get the repository rpm for your system platform</strong></h3><ul>
<li><h4 id="2-1-download-the-repository-rpm"><a href="#2-1-download-the-repository-rpm" class="headerlink" title="2.1 download the repository.rpm"></a>2.1 download the repository.rpm</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:wget http://...</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-2-install-this-repository"><a href="#2-2-install-this-repository" class="headerlink" title="2.2 install this repository"></a>2.2 install this repository</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:rpm -Uvh repo.rpm</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="3-install-mysql"><a href="#3-install-mysql" class="headerlink" title="3. install mysql"></a><strong>3. install mysql</strong></h3><ul>
<li><h4 id="3-1-to-see-repolist-of-mysql-that-can-be-installed"><a href="#3-1-to-see-repolist-of-mysql-that-can-be-installed" class="headerlink" title="3.1 to see repolist of mysql that can be installed"></a>3.1 to see repolist of mysql that can be installed</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:yum repolist all | grep mysql</span><br></pre></td></tr></table></figure>
<p>  or this command to see the enabled version only</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:yum repolist enabled|grep mysql</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="3-2-choose-the-version-you-need"><a href="#3-2-choose-the-version-you-need" class="headerlink" title="3.2 choose the version you need"></a>3.2 choose the version you need</h4><p>  now mysql 5.7 is enabled and if you use command to install mysql you will get mysql 5.7 installed.</p>
</li>
<li><h5 id="3-3-vim-etc-yum-repos-d-mysql-community-repo"><a href="#3-3-vim-etc-yum-repos-d-mysql-community-repo" class="headerlink" title="3.3 vim /etc/yum.repos.d/mysql-community.repo"></a>3.3 vim /etc/yum.repos.d/mysql-community.repo</h5><p>  here we choose 5.6</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># mysql 5.6</span><br><span class="line">...</span><br><span class="line">enabled=0</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"># mysql 5.7</span><br><span class="line">...</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure>
<p>  than you can see the status of each version.</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:yum repolist all | grep mysql</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="3-4-install-mysql"><a href="#3-4-install-mysql" class="headerlink" title="3.4 install mysql"></a>3.4 install mysql</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:yum install mysql-community-server</span><br></pre></td></tr></table></figure>
<p>  this command will  install the enabled verison.</p>
</li>
</ul>
<h3 id="4-dependecies-error"><a href="#4-dependecies-error" class="headerlink" title="4. dependecies error"></a><strong>4. dependecies error</strong></h3><p><code>~:yum install mysql-community-server</code> will install the dependencies automatically, but if you don’t have a repository to download these dependencies, it will fail to install mysql.</p>
<ul>
<li><h4 id="4-1-add-repository-to-system"><a href="#4-1-add-repository-to-system" class="headerlink" title="4.1 add repository to system"></a>4.1 add repository to system</h4></li>
<li><h4 id="4-2-down-load-repository-to-etc-yum-repos-d"><a href="#4-2-down-load-repository-to-etc-yum-repos-d" class="headerlink" title="4.2 down load repository to /etc/yum.repos.d/"></a>4.2 down load repository to <code>/etc/yum.repos.d/</code></h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:wget http://mirrors.163.com/.help/CentOS7-Base-163.repo</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="4-3-use-the-repository"><a href="#4-3-use-the-repository" class="headerlink" title="4.3 use the repository"></a>4.3 use the repository</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:yum clean all</span><br><span class="line">~:yum makecache</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="4-4-then-you-can-try-to-install-mysql-again"><a href="#4-4-then-you-can-try-to-install-mysql-again" class="headerlink" title="4.4 then you can try to install mysql again"></a>4.4 then you can try to install mysql again</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:yum install mysql-community-server</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="5-mysql-service"><a href="#5-mysql-service" class="headerlink" title="5. mysql service"></a><strong>5. mysql service</strong></h3><ul>
<li><h4 id="5-1-service"><a href="#5-1-service" class="headerlink" title="5.1 service"></a>5.1 service</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:service mysqld status</span><br><span class="line">~:service mysqld start</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="5-2-or-systemctl"><a href="#5-2-or-systemctl" class="headerlink" title="5.2 or systemctl"></a>5.2 or systemctl</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:systemctl status mysqld.service</span><br><span class="line">~:systemctl start mysqld.service</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="6-than-you-should-change-mysql-config"><a href="#6-than-you-should-change-mysql-config" class="headerlink" title="6. than you should change mysql config"></a><strong>6. than you should change mysql config</strong></h3><p>vim /etc/my.cnf<br>you can see a standard config <a href="https://www.jianshu.com/p/db43e8c7f977" target="_blank" rel="noopener">a standard my.cnf</a>.</p>
<h3 id="7-than-you-may-import-a-sql-file"><a href="#7-than-you-may-import-a-sql-file" class="headerlink" title="7. than you may import a sql file"></a><strong>7. than you may import a sql file</strong></h3><p>you can see how to import a file by following this article<br><a href="https://www.jianshu.com/p/50288f95296f" target="_blank" rel="noopener">mysql import a sql file</a>.</p>
]]></content>
      <categories>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>mysql 5.6</tag>
        <tag>centos</tag>
        <tag>mysql repository</tag>
        <tag>mysql 5.7</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx 反向代理</title>
    <url>/2019/07/25/nginx/nginx-%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/</url>
    <content><![CDATA[<p>nginx不能直接把请求代理到公共域名，也不能把公共域名的请求代理到本地或其他公共域名。<br>通过hosts文件的配置，把公共域名解析为指定IP，即可实现两种代理方式，但要注意跨域问题。</p>
<a id="more"></a>
<h3 id="1-nginx和系统hosts文件先后关系"><a href="#1-nginx和系统hosts文件先后关系" class="headerlink" title="1. nginx和系统hosts文件先后关系"></a><strong>1. nginx和系统hosts文件先后关系</strong></h3><p><a href="http://url:port" target="_blank" rel="noopener">http://url:port</a> -&gt; hosts解析 ip -&gt; 请求报文 -&gt; nginx获取报文信息 host ip信息，如果匹配就重定向，否则放过。</p>
<h3 id="2-由以上先后关系可以看出"><a href="#2-由以上先后关系可以看出" class="headerlink" title="2. 由以上先后关系可以看出"></a><strong>2. 由以上先后关系可以看出</strong></h3><p>nginx代理 listen(或者server_name)可以是ip地址，或者是hosts列表里映射过的域名。nginx直接listen ip很好理解， listen域名则需要在hosts列表里配置过(手动配置或自动解析过)。比如域名还没申请到，但是又不想改数据库配置，就可以修改hosts和nginx配置达到使用域名的效果。</p>
<h3 id="3-跨域支持"><a href="#3-跨域支持" class="headerlink" title="3. 跨域支持"></a><strong>3. 跨域支持</strong></h3><ul>
<li><h4 id="3-1-hosts"><a href="#3-1-hosts" class="headerlink" title="3.1 hosts"></a>3.1 hosts</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">127.0.0.1  www.abc.com</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="3-2-nginx-conf"><a href="#3-2-nginx-conf" class="headerlink" title="3.2 nginx.conf"></a>3.2 nginx.conf</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">                listen          80;</span><br><span class="line">                server_name     www.abc.com;</span><br><span class="line"></span><br><span class="line">                location / &#123;</span><br><span class="line">                        proxy_pass http://localhost:8080;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>
<p>  这个配置没有使用负载均衡的upstream配置。<br>  访问www.abc.com解析为127.0.0.1:80 将被转到localhost:8080</p>
</li>
</ul>
<h3 id="4-请求失败"><a href="#4-请求失败" class="headerlink" title="4. 请求失败"></a><strong>4. 请求失败</strong></h3><ul>
<li><h4 id="4-1-主要是跨域导致的失败"><a href="#4-1-主要是跨域导致的失败" class="headerlink" title="4.1 主要是跨域导致的失败"></a>4.1 主要是跨域导致的失败</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">localhost:8080这个服务器的页面包含多个对静态资源的请求。但是我们没有修改数据库配置，导致服务器上静态资源的url仍然是www.abc.com。</span><br><span class="line">直接访问localhost:8080后，当页面上请求 www.abc.com时，就会导致跨域，chrome会在console里报错跨域，虽然可以在nginx里配置跨域，但是只是不再报错，请求仍然失败。</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="4-2-解决方法是"><a href="#4-2-解决方法是" class="headerlink" title="4.2 解决方法是"></a>4.2 解决方法是</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">客户端/浏览器只访问代理地址 www.abc.com</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="5-基于实践经验的得到的最终结果"><a href="#5-基于实践经验的得到的最终结果" class="headerlink" title="5. 基于实践经验的得到的最终结果"></a><strong>5. 基于实践经验的得到的最终结果</strong></h3><p>服务端，在部署服务的机器上使用局域网或者localhost地址，在nginx里用新的地址代理实际地址。<br>而客户端 只访问服务端代理地址，不访问实际部署的地址。</p>
]]></content>
      <categories>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>nginx</tag>
        <tag>hosts</tag>
        <tag>跨域</tag>
        <tag>反向代理</tag>
      </tags>
  </entry>
  <entry>
    <title>(1) quick start (1) init project</title>
    <url>/2019/07/23/nodejs/(1)%20quick%20start%20(1)%20init%20project/</url>
    <content><![CDATA[<p>react 快速开始<br>初始化项目<br>webpack4</p>
<a id="more"></a>
<p>the following steps will lead you create a new node project.<br>the final tree</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">└── package.json</span><br></pre></td></tr></table></figure>
<h3 id="1-init-a-project"><a href="#1-init-a-project" class="headerlink" title="1. init a project"></a><strong>1. init a project</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:mkdir lesson1</span><br><span class="line">~:cd lesson1</span><br><span class="line">~:npm init</span><br></pre></td></tr></table></figure>
<p><code>npm init</code> will generate <code>package.json</code> in lesson1/. </p>
<ul>
<li><h4 id="1-1-package-json"><a href="#1-1-package-json" class="headerlink" title="1.1 package.json"></a>1.1 package.json</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"lesson1"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"main"</span>: <span class="string">"index.js"</span>,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"author"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"license"</span>: <span class="string">"ISC"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>package.json</code> file manages the javascript packages or modules like maven pom.xml. Now add <code>webpack</code> to our project , <code>name</code> and <code>version</code> specification of it like the followting code:</p>
</li>
<li><h4 id="1-2-command"><a href="#1-2-command" class="headerlink" title="1.2 command"></a>1.2 command</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:npm install --save-dev webpack</span><br><span class="line">~:npm install --save-dev webpack-cli</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="1-3-package-json"><a href="#1-3-package-json" class="headerlink" title="1.3 package.json"></a>1.3 package.json</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"lesson1"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"main"</span>: <span class="string">"index.js"</span>,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"author"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"license"</span>: <span class="string">"ISC"</span>,</span><br><span class="line">  <span class="attr">"devDependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"webpack"</span>: <span class="string">"^4.41.2"</span>,</span><br><span class="line">    <span class="attr">"webpack-cli"</span>: <span class="string">"^3.3.10"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="1-4-this-is-the-develop-dependencies"><a href="#1-4-this-is-the-develop-dependencies" class="headerlink" title="1.4 this is the develop dependencies"></a>1.4 this is the develop dependencies</h4><figure class="highlight"><table><tr><td class="code"><pre><span class="line">"devDependencies": &#123;</span><br><span class="line">    "webpack": "^4.41.2",</span><br><span class="line">    "webpack-cli": "^3.3.10"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>--save or -S</code>: if we don’t use this command, we have to add the dependencies manually. This command will add packages to <code>dependencies</code>.<br><code>--save-dev or -D</code>: it’s similar to <code>--save</code>, but it will add packages to <code>devDependencies</code>.<br>dev means we just use these packages in development, and in our final product, some of the packages we don’t need such like webpack, and some will be compiled into a more advanced file such like jQuery. </p>
</li>
</ul>
]]></content>
      <categories>
        <category>node</category>
        <category>react</category>
      </categories>
      <tags>
        <tag>react</tag>
        <tag>node</tag>
        <tag>webpack</tag>
      </tags>
  </entry>
  <entry>
    <title>(10) taobao mirros</title>
    <url>/2019/07/23/nodejs/(10)%20taobao%20mirros/</url>
    <content><![CDATA[<p>为npm更换淘宝源</p>
<a id="more"></a>
<h2 id="10-taobao-mirros"><a href="#10-taobao-mirros" class="headerlink" title="(10) taobao mirros"></a><strong>(10) taobao mirros</strong></h2><p>show current mirros<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm config get registry</span><br></pre></td></tr></table></figure></p>
<p>set registry<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm config set registry &quot;https://registry.npm.taobao.org&quot;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>node</category>
      </categories>
      <tags>
        <tag>node</tag>
        <tag>mirrors</tag>
        <tag>npm源</tag>
      </tags>
  </entry>
  <entry>
    <title>(11) mathjax in html</title>
    <url>/2019/07/23/nodejs/(11)%20mathjax%20in%20html/</url>
    <content><![CDATA[<p>为 react 项目引入 mathjax.js 用于处理 LaTex 语言数学公式</p>
<a id="more"></a>
<h2 id="11-mathjax-in-html"><a href="#11-mathjax-in-html" class="headerlink" title="(11) mathjax in html"></a><strong>(11) mathjax in html</strong></h2><p>I want to use formulas in my pages.</p>
<ul>
<li><h4 id="1-script-environment"><a href="#1-script-environment" class="headerlink" title="1. script environment"></a>1. script environment</h4><p>  index.html</p>
  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">src</span>=<span class="string">"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/x-mathjax-config"</span>&gt;</span></span><br><span class="line">        MathJax.Hub.Config(&#123;</span><br><span class="line"><span class="javascript">            tex2jax: &#123;<span class="attr">inlineMath</span>: [[<span class="string">'$'</span>,<span class="string">'$'</span>], [<span class="string">'\('</span>,<span class="string">'\)'</span>]]&#125;</span></span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">'root'</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-latex-in-js"><a href="#2-latex-in-js" class="headerlink" title="2. latex in js"></a>2. latex in js</h4><p>  App.js</p>
  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; Component &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'./App.css'</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">Component</span></span>&#123;</span><br><span class="line">    render()&#123;</span><br><span class="line">        <span class="keyword">return</span> (            </span><br><span class="line">            &lt;div&gt;</span><br><span class="line">                $$\frac &#123;<span class="number">1</span>&#125;&#123;<span class="number">2</span>&#125; $$</span><br><span class="line">            &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        );</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">export default App;</span></span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="3-development-and-build"><a href="#3-development-and-build" class="headerlink" title="3. development and build"></a>3. development and build</h4><p>  development<br>  <code>~:npm start</code></p>
<p>  build<br>  <code>~:npm run build</code></p>
</li>
</ul>
]]></content>
      <categories>
        <category>node</category>
        <category>react</category>
      </categories>
      <tags>
        <tag>react</tag>
        <tag>node</tag>
        <tag>mathjax</tag>
        <tag>LaTex</tag>
      </tags>
  </entry>
  <entry>
    <title>(12) open browser after webpack compile</title>
    <url>/2019/07/23/nodejs/(12)%20open%20browser%20after%20webpack%20compile/</url>
    <content><![CDATA[<p>调试服务器启动后自动打开浏览器展示首页。<br>npm start调用的是webpack的插件，为webpack安装相关插件，可以在服务启动后自动打开指定浏览器访问指定的页面。<br>webpack4</p>
<a id="more"></a>
<h2 id="12-open-browser-after-webpack-compile"><a href="#12-open-browser-after-webpack-compile" class="headerlink" title="(12) open browser after webpack compile"></a><strong>(12) open browser after webpack compile</strong></h2><ul>
<li><p>webpack.config.dev.js</p>
  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> host_port = <span class="number">3000</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry:  path.resolve(__dirname,<span class="string">'src/index.js'</span>),</span><br><span class="line">    output: &#123;</span><br><span class="line">        path: path.resolve(__dirname, <span class="string">'build/'</span>),</span><br><span class="line">        filename: <span class="string">'static/js/bundle.js'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules:[</span><br><span class="line">            &#123;</span><br><span class="line">                oneOf:[</span><br><span class="line">                    &#123; </span><br><span class="line">                        test: <span class="regexp">/\.(js|jsx)$/</span>, </span><br><span class="line">                        loader: <span class="string">'babel-loader'</span>,</span><br><span class="line">                        query:</span><br><span class="line">                        &#123;</span><br><span class="line">                            presets:[<span class="string">'react'</span>]</span><br><span class="line">                        &#125;,</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123; </span><br><span class="line">                        test: <span class="regexp">/\.css$/</span>, </span><br><span class="line">                        loader: <span class="string">"style-loader!css-loader"</span></span><br><span class="line">                    &#125;,                    </span><br><span class="line">                    &#123;</span><br><span class="line">                        test: [<span class="regexp">/\.bmp$/</span>, /\.gif$/, /\.jpe?g$/, /\.png$/],</span><br><span class="line">                        <span class="comment">//loader: require.resolve('url-loader'),</span></span><br><span class="line">                        loader: <span class="string">'url-loader'</span>,</span><br><span class="line">                        options: &#123;</span><br><span class="line">                        limit: <span class="number">10000</span>,</span><br><span class="line">                        name: <span class="string">'static/media/[name].[hash:8].[ext]'</span>,</span><br><span class="line">                        &#125;,</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        exclude: [<span class="regexp">/\.js$/</span>,/\.html$/,/\.json$/],</span><br><span class="line">                        <span class="comment">//loader: require.resolve('url-loader'),</span></span><br><span class="line">                        loader: <span class="string">'file-loader'</span>,</span><br><span class="line">                        options: &#123;</span><br><span class="line">                        name: <span class="string">'static/media/[name].[hash:8].[ext]'</span>,</span><br><span class="line">                        &#125;,</span><br><span class="line">                    &#125;,</span><br><span class="line"></span><br><span class="line">                ],</span><br><span class="line">            &#125;,</span><br><span class="line">        ],</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins:[</span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">            inject: <span class="literal">true</span>, <span class="comment">//inject all js at the bottom of the body</span></span><br><span class="line">            template: path.resolve(__dirname, <span class="string">'public/index.html'</span>), <span class="comment">//source file</span></span><br><span class="line">        &#125;),</span><br><span class="line">    ],</span><br><span class="line">    devServer: &#123;</span><br><span class="line">        contentBase: path.resolve(__dirname, <span class="string">'public'</span>),</span><br><span class="line">        historyApiFallback: <span class="literal">false</span>,</span><br><span class="line">        inline:<span class="literal">true</span>,</span><br><span class="line">        port:host_port,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>package.json scripts</p>
  <figure class="highlight"><table><tr><td class="code"><pre><span class="line">"scripts": &#123;</span><br><span class="line">    "start": "webpack-dev-server --config webpack.config.dev.js --open"</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
</li>
<li><p>run </p>
<p>  <code>~:npm start</code></p>
</li>
</ul>
]]></content>
      <categories>
        <category>node</category>
        <category>react</category>
      </categories>
      <tags>
        <tag>react</tag>
        <tag>node</tag>
        <tag>webpack</tag>
      </tags>
  </entry>
  <entry>
    <title>(13) react-router</title>
    <url>/2019/07/23/nodejs/(13)%20react-router/</url>
    <content><![CDATA[<p>单页面应用使用不同的组件替代了传统的多页面，url 跳转页面也就变成了 url 跳转组件，react-router 就是提供 url 跳转组件的能力。</p>
<a id="more"></a>
<h2 id="13-react-router"><a href="#13-react-router" class="headerlink" title="(13) react-router"></a><strong>(13) react-router</strong></h2><h3 id="1-为什么使用router"><a href="#1-为什么使用router" class="headerlink" title="(1) 为什么使用router"></a><strong>(1) 为什么使用router</strong></h3><p>传统多页面应用，使用url定位资源位置，但是多页面应用实际只有一个url，不同的页面使用了不同的组件实现，那么想要跳转这些组件就可以用router。</p>
<h3 id="2-安装依赖"><a href="#2-安装依赖" class="headerlink" title="(2) 安装依赖"></a><strong>(2) 安装依赖</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:npm i react-router react-router-dom</span><br></pre></td></tr></table></figure>
<p>仅使用<code>react-router</code>就能实现路由能力，但是路由的配置会很麻烦， <code>react-router-dom</code>提供了一些react组件，这些组件封装好了路由逻辑，使路由更简单，还提供了一些比如switch组件只渲染匹配的组件提高性能。</p>
<h3 id="3-完整的demo"><a href="#3-完整的demo" class="headerlink" title="(3) 完整的demo"></a><strong>(3) 完整的demo</strong></h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;Router&gt;</span><br><span class="line">    &lt;Route path=<span class="string">"/"</span> component=&#123;App&#125;&gt;</span><br><span class="line">        &lt;Route path=<span class="string">"component1"</span> component=&#123;Component1&#125; /&gt;</span><br><span class="line">        &lt;Route path=<span class="string">"component2"</span> component=&#123;Component2&#125;&gt;</span><br><span class="line">            &lt;Route path=<span class="string">"messages/:id"</span> component=&#123;Message&#125; /&gt;</span><br><span class="line">        &lt;<span class="regexp">/Route&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>Route&gt;</span><br><span class="line">&lt;<span class="regexp">/Router&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;App&gt;</span></span><br><span class="line"><span class="regexp">&lt;Link to="/</span>component1<span class="string">"&gt;</span></span><br><span class="line"><span class="string">&lt;/App&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="4-组件介绍"><a href="#4-组件介绍" class="headerlink" title="(4) 组件介绍"></a><strong>(4) 组件介绍</strong></h3><p><code>Router</code> 最外层根组件，它依赖于浏览器的history做路由，router管理整个应用的路由，它会拦截url并渲染<br><code>Route</code> url和组件映射，当url匹配时组件就会被渲染<br><code>Link</code> 类似于a标签，做url跳转</p>
<p><code>react-router-dom</code> 前边介绍的Router其实只是一层抽象，react-router-dom提供了若干实现，最常用的BrowserRouter和HashRouter，其中BrowserRouter依赖于H5的history API来解析url，特点是会产生真实请求，由于url实际对应的只是个组件所以会报错，需要服务端渲染。HashRouter则通过hashhistory在url中增加#隔离，实现纯前端路由，url不会做实际请求。</p>
<h3 id="5-进阶"><a href="#5-进阶" class="headerlink" title="(5) 进阶"></a><strong>(5) 进阶</strong></h3><p>在引入了redux之后，使用异步组件redux-saga，redux-saga并不支持router能力，<code>connected-react-router</code> 类似于react-router-dom 提供了redux-saga支持的router能力，它把url跳转封装为reducer dispatch，并且用法与react-router相同。</p>
]]></content>
      <categories>
        <category>node</category>
        <category>react</category>
      </categories>
      <tags>
        <tag>react</tag>
        <tag>node</tag>
        <tag>rector-router</tag>
      </tags>
  </entry>
  <entry>
    <title>(14) redux全家桶</title>
    <url>/2020/07/02/nodejs/(14)%20redux%E5%85%A8%E5%AE%B6%E6%A1%B6/</url>
    <content><![CDATA[<p><code>redux</code> redux提供了一个store组件，store使用自身的state管理所有数据，并提供api让其他组件注册数据到state和订阅state里的数据，这样react的数据就无需逐层的props传递了。<br><code>react-redux</code>   该组件封装了redux的注册和订阅逻辑编程Provider组件和connect函数，使redux使用更简单。Provider就是把store引入ui, connect函数就是把各个组件的数据注册到sotre里。<br><code>redux-saga</code>    使用es6的异步编程模型实现异步能力，使redux可以把网络请求和数据返回变成异步，从而全面结果网络数据。</p>
<a id="more"></a>
<p>正文</p>
]]></content>
      <categories>
        <category>nodejs</category>
      </categories>
      <tags>
        <tag>react</tag>
        <tag>node</tag>
        <tag>redux</tag>
        <tag>redux-saga</tag>
      </tags>
  </entry>
  <entry>
    <title>(2) quick start (2) webpack config to compile javascript</title>
    <url>/2019/07/23/nodejs/(2)%20quick%20start%20(2)%20webpack%20config%20to%20compile%20javascript/</url>
    <content><![CDATA[<p>react 快速开始<br>使用webpack编译和打包项目<br>webpack4</p>
<a id="more"></a>
<p>The following steps will show you how to use webpack.<br>We will configure <code>webpack.config.js</code> and compile source files to build the project. </p>
<p>The final tree<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── package.json</span><br><span class="line">├── package-lock.json</span><br><span class="line">├── src</span><br><span class="line">│   └── index.js</span><br><span class="line">└── webpack.config.js</span><br></pre></td></tr></table></figure></p>
<h3 id="1-webpck-compile"><a href="#1-webpck-compile" class="headerlink" title="1. webpck compile"></a><strong>1. webpck compile</strong></h3><h4 id="1-1-code-js"><a href="#1-1-code-js" class="headerlink" title="1.1. code js"></a><strong>1.1. code js</strong></h4><ul>
<li><h5 id="1-1-1-index-js"><a href="#1-1-1-index-js" class="headerlink" title="1.1.1 index.js"></a>1.1.1 index.js</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">'Hello, this is a test!'</span>);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="1-2-compile-js"><a href="#1-2-compile-js" class="headerlink" title="1.2. compile js"></a><strong>1.2. compile js</strong></h4><p>We did <a href="p/b5df2e74aa20">init project</a> and installed <code>webpack</code>.<br><code>npm install</code> just install a package in current project directory.<br><code>webpack</code> can be used as a command if it was installed in global.</p>
<ul>
<li><h5 id="1-2-1-install-global"><a href="#1-2-1-install-global" class="headerlink" title="1.2.1 install global"></a>1.2.1 install global</h5><p><code>~:npm install -g webpack</code><br><code>~:npm install -g webpack-cli</code></p>
</li>
<li><h5 id="1-2-2-use-webpack-to-compile"><a href="#1-2-2-use-webpack-to-compile" class="headerlink" title="1.2.2 use webpack to compile"></a>1.2.2 use webpack to compile</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:webpack abc.js bundle.js</span><br></pre></td></tr></table></figure>
<p>It will compile abc.js and create bundle.js. We use bundle.js in index.html.</p>
</li>
</ul>
<h3 id="2-webpack-config-js"><a href="#2-webpack-config-js" class="headerlink" title="2. webpack.config.js"></a><strong>2. webpack.config.js</strong></h3><p>We have too many compiling ruls with different source files and options.<br>So we have to simplify the webpack command rule.</p>
<p>And then we can just use <code>~:webpack</code> to instead of <code>~:webpack src/abc.js -o build/static/bundle.js</code>.</p>
<p>Put all webpack compiling rule in config file:</p>
<ul>
<li><h4 id="2-1-create-webpack-config-js"><a href="#2-1-create-webpack-config-js" class="headerlink" title="2.1 create webpack.config.js"></a>2.1 create <code>webpack.config.js</code></h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry: [</span><br><span class="line">        <span class="string">'./src/index.js'</span></span><br><span class="line">    ],</span><br><span class="line">    output: &#123;</span><br><span class="line">        path: path.resolve(__dirname, <span class="string">'build/static/js'</span>),</span><br><span class="line">        filename: <span class="string">'bundle.js'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>__dirname</code>: is a environment variable of node, value is the project folder path.<br><code>entry</code>: webpack will analyze your entry file for dependencies to other files. These files (called modules) are included in your bundle.js too. webpack will give each module a unique id and save all modules accessible by id in the bundle.js file. Only the entry module is executed on startup. A small runtime provides the require function and executes the dependencies when required.<br><code>output</code>: webpack will create lesson1/build/bundle.js. All modules will be included in this file.</p>
</li>
</ul>
<h3 id="3-node-script"><a href="#3-node-script" class="headerlink" title="3. node script"></a><strong>3. node script</strong></h3><ul>
<li><h4 id="3-1-package-json"><a href="#3-1-package-json" class="headerlink" title="3.1 package.json"></a>3.1 package.json</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"lesson1"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"main"</span>: <span class="string">"index.js"</span>,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;amp;&amp;amp; exit 1"</span>,</span><br><span class="line">    <span class="attr">"build"</span>: <span class="string">"webpack"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"author"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"license"</span>: <span class="string">"ISC"</span>,</span><br><span class="line">  <span class="attr">"devDependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"html-webpack-plugin"</span>: <span class="string">"^3.2.0"</span>,</span><br><span class="line">    <span class="attr">"webpack"</span>: <span class="string">"^4.41.2"</span>,</span><br><span class="line">    <span class="attr">"webpack-cli"</span>: <span class="string">"^3.3.10"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>~:npm run build</code></p>
</li>
<li><h4 id="3-2-run-bundle-js"><a href="#3-2-run-bundle-js" class="headerlink" title="3.2 run bundle.js"></a>3.2 run bundle.js</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:cd build/static/js</span><br><span class="line">~:node bundle.js</span><br><span class="line">Hello, this is a test!</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>node</category>
        <category>react</category>
      </categories>
      <tags>
        <tag>react</tag>
        <tag>node</tag>
        <tag>webpack</tag>
      </tags>
  </entry>
  <entry>
    <title>(15) redux与router</title>
    <url>/2020/07/02/nodejs/(15)%20redux%E4%B8%8Erouter/</url>
    <content><![CDATA[<p>redux虽然实现了数据管理，但它无法直接使用router的功能，比如redux-saga异步请求的要根据请求结果做url跳转，只能是组件收到数据后自行跳转。<br><code>connected-react-router</code> 把跳转过程封装成reducer dispatch，从而实现了一个类似于router push的api，这个api可以在redux-saga里使用。</p>
<a id="more"></a>
<p>正文</p>
]]></content>
      <categories>
        <category>nodejs</category>
      </categories>
      <tags>
        <tag>react</tag>
        <tag>node</tag>
        <tag>redux</tag>
        <tag>router</tag>
      </tags>
  </entry>
  <entry>
    <title>(5) quick start (5) css</title>
    <url>/2019/07/23/nodejs/(5)%20quick%20start%20(5)%20css/</url>
    <content><![CDATA[<p>react 快速开始<br>webpack引入css插件处理css文件，webpack要处理的所有文件都是资源文件包括css，webpack要引入相应的插件才能正确处理不同类型的资源文件。</p>
<a id="more"></a>
<p>The following steps will lead you to create css file and use styles in the at js.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── node_modules</span><br><span class="line">├── package.json</span><br><span class="line">├── package-lock.json</span><br><span class="line">├── public</span><br><span class="line">│   └── index.html</span><br><span class="line">├── src</span><br><span class="line">│   ├── index.css</span><br><span class="line">│   └── index.js</span><br><span class="line">├── webpack.config.dev.js</span><br><span class="line">└── webpack.config.js</span><br></pre></td></tr></table></figure>
<h3 id="1-loaders"><a href="#1-loaders" class="headerlink" title="1. loaders"></a><strong>1. loaders</strong></h3><p>Webpack can only deal with javascript originally. It must install special loaders to deal with target type files. CSS files need <code>css-loader</code> and <code>style-loader</code>.<br>css-loader process the url in js or html.<br>style-loader replace url to css code in js or html.</p>
<ul>
<li><h4 id="1-1-install"><a href="#1-1-install" class="headerlink" title="1.1 install"></a>1.1 install</h4><p>  <code>~:npm install css-loader style-loader --save-dev</code></p>
</li>
<li><h4 id="1-2-config-of-dev-server"><a href="#1-2-config-of-dev-server" class="headerlink" title="1.2 config of dev server"></a>1.2 config of dev server</h4>  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry:  path.resolve(__dirname,<span class="string">'src/index.js'</span>),</span><br><span class="line">    output: &#123;</span><br><span class="line">        path: path.resolve(__dirname, <span class="string">'build/static/js'</span>),</span><br><span class="line">        filename: <span class="string">'bundle.js'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: [</span><br><span class="line">            &#123; <span class="attr">test</span>: <span class="regexp">/\.css$/</span>, <span class="attr">loader</span>: <span class="string">"style-loader!css-loader"</span> &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins:[</span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">            inject: <span class="literal">true</span>, <span class="comment">//inject all js at the bottom of the body</span></span><br><span class="line">            template: path.resolve(__dirname, <span class="string">'public/index.html'</span>), <span class="comment">//source file</span></span><br><span class="line">        &#125;),</span><br><span class="line">    ],</span><br><span class="line">    devServer: &#123;</span><br><span class="line">        contentBase: path.resolve(__dirname, <span class="string">'public'</span>),</span><br><span class="line">        historyApiFallback: <span class="literal">false</span>,</span><br><span class="line">        inline:<span class="literal">true</span>,</span><br><span class="line">        port:<span class="number">3000</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="2-code-source-in-src"><a href="#2-code-source-in-src" class="headerlink" title="2. code source in src/"></a><strong>2. code source in src/</strong></h3><ul>
<li><h4 id="2-1-index-css"><a href="#2-1-index-css" class="headerlink" title="2.1 index.css"></a>2.1 index.css</h4>  <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-2-index-js"><a href="#2-2-index-js" class="headerlink" title="2.2 index.js"></a>2.2 index.js</h4>  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">require</span>(<span class="string">'./index.css'</span>)</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">"hello, this is a test!"</span>);</span><br><span class="line"><span class="comment">//console.log('Hello, this is a test!');</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="3-result"><a href="#3-result" class="headerlink" title="3. result"></a><strong>3. result</strong></h3><p><code>~:npm start</code></p>
]]></content>
      <categories>
        <category>node</category>
        <category>react</category>
      </categories>
      <tags>
        <tag>react</tag>
        <tag>node</tag>
        <tag>webpack</tag>
      </tags>
  </entry>
  <entry>
    <title>(6) quick start (6) react</title>
    <url>/2019/07/23/nodejs/(6)%20quick%20start%20(6)%20react/</url>
    <content><![CDATA[<p>react 快速开始<br>webpack引入css插件处理css文件，webpack要处理的所有文件都是资源文件包括css，webpack要引入相应的插件才能正确处理不同类型的资源文件。</p>
<a id="more"></a>
<h3 id="1-install-modules"><a href="#1-install-modules" class="headerlink" title="1. install modules"></a><strong>1. install modules</strong></h3><ul>
<li><h4 id="1-1-react"><a href="#1-1-react" class="headerlink" title="1.1 react"></a>1.1 react</h4><p>  <code>~:npm install --save-dev react</code><br>  React core.</p>
</li>
<li><h4 id="1-2-react-dom"><a href="#1-2-react-dom" class="headerlink" title="1.2 react-dom"></a>1.2 react-dom</h4><p>  <code>~:npm install --save-dev react-dom</code><br>  ReactDOM for root render.</p>
</li>
<li><h4 id="1-3-babel-loader"><a href="#1-3-babel-loader" class="headerlink" title="1.3 babel-loader"></a>1.3 babel-loader</h4><p>  <code>~:npm install --save-dev babel-loader</code><br>  Use jsx language in js or jsx. Must config in <code>webpack.config.js</code>.</p>
</li>
<li><h4 id="1-4-babel-core"><a href="#1-4-babel-core" class="headerlink" title="1.4 babel-core"></a>1.4 babel-core</h4><p>  <code>~:npm install --save-dev babel-core</code><br>  babel core</p>
</li>
<li><h4 id="1-5-babel-preset-react"><a href="#1-5-babel-preset-react" class="headerlink" title="1.5 babel-preset-react"></a>1.5 babel-preset-react</h4><p>  <code>~:npm install --save-dev babel-preset-react</code><br>  babel for react. Must config in <code>webpack.config.js</code>.</p>
</li>
</ul>
<h3 id="2-webpack-config"><a href="#2-webpack-config" class="headerlink" title="2. webpack config"></a><strong>2. webpack config</strong></h3><ul>
<li><h4 id="2-1-webpack-config-dev-js"><a href="#2-1-webpack-config-dev-js" class="headerlink" title="2.1 webpack.config.dev.js"></a>2.1 webpack.config.dev.js</h4>  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry:  path.resolve(__dirname,<span class="string">'src/index.js'</span>),</span><br><span class="line">    output: &#123;</span><br><span class="line">        path: path.resolve(__dirname, <span class="string">'build/static/js'</span>),</span><br><span class="line">        filename: <span class="string">'bundle.js'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        loaders: [</span><br><span class="line">            <span class="comment">// css loader</span></span><br><span class="line">            &#123; <span class="attr">test</span>: <span class="regexp">/\.css$/</span>, <span class="attr">loader</span>: <span class="string">"style-loader!css-loader"</span> &#125;,</span><br><span class="line">            <span class="comment">// babel loader</span></span><br><span class="line">            &#123; </span><br><span class="line">                test: <span class="regexp">/\.(js|jsx)$/</span>, </span><br><span class="line">                loader: <span class="string">"babel-loader"</span>,</span><br><span class="line">                <span class="comment">// babel preset react</span></span><br><span class="line">                query:</span><br><span class="line">                &#123;</span><br><span class="line">                    presets:[<span class="string">'react'</span>]</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins:[</span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">            inject: <span class="literal">true</span>, <span class="comment">//inject all js at the bottom of the body</span></span><br><span class="line">            template: path.resolve(__dirname, <span class="string">'public/index.html'</span>), <span class="comment">//source file</span></span><br><span class="line">        &#125;),</span><br><span class="line">    ],</span><br><span class="line">    devServer: &#123;</span><br><span class="line">        contentBase: path.resolve(__dirname, <span class="string">'public'</span>),</span><br><span class="line">        historyApiFallback: <span class="literal">false</span>,</span><br><span class="line">        inline:<span class="literal">true</span>,</span><br><span class="line">        port:<span class="number">3000</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="3-code-js"><a href="#3-code-js" class="headerlink" title="3. code js"></a><strong>3. code js</strong></h3><ul>
<li><h4 id="3-1-index-js"><a href="#3-1-index-js" class="headerlink" title="3.1 index.js"></a>3.1 index.js</h4>  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; Component &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> ReactDOM <span class="keyword">from</span> <span class="string">'react-dom'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'./index.css'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// require('./index.css')</span></span><br><span class="line"><span class="comment">// document.write("hello, this is a test!");</span></span><br><span class="line"><span class="comment">//console.log('Hello, this is a test!');</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">Component</span></span>&#123;</span><br><span class="line">    render()&#123;</span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">                First React DOM!</span><br><span class="line">            &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        );</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">ReactDOM.render(</span></span><br><span class="line"><span class="regexp">    &lt;App/</span>&gt;,</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">'root'</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p>  <code>import React from &#39;react&#39;;</code> every component needs to import react core module <code>React</code>.<br>  <code>import ReactDOM from &#39;react-dom&#39;;</code> if you want to render a component in your html page you have to import ReactDOM and use it.</p>
</li>
</ul>
<h3 id="4-run"><a href="#4-run" class="headerlink" title="4 run"></a><strong>4 run</strong></h3><ul>
<li><h4 id="4-1-command"><a href="#4-1-command" class="headerlink" title="4.1 command"></a>4.1 command</h4><p>  <code>~:npm start</code></p>
</li>
</ul>
]]></content>
      <categories>
        <category>node</category>
        <category>react</category>
      </categories>
      <tags>
        <tag>react</tag>
        <tag>node</tag>
        <tag>webpack</tag>
      </tags>
  </entry>
  <entry>
    <title>(7) quick start (7) images and url loader</title>
    <url>/2019/07/23/nodejs/(7)%20quick%20start%20(7)%20images%20and%20url%20loader/</url>
    <content><![CDATA[<p>react 快速开始<br>webpack引入url插件处理图片资源文件。<br>图片url可能需要特殊处理，本地调试和生产打包用到的服务器路径都不相同，用url插件可以根据环境替换图片资源url域名。</p>
<a id="more"></a>
<h3 id="1-directory-tree"><a href="#1-directory-tree" class="headerlink" title="1. directory tree"></a><strong>1. directory tree</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── package.json</span><br><span class="line">├── package-lock.json</span><br><span class="line">├── public</span><br><span class="line">│   └── index.html</span><br><span class="line">├── README.md</span><br><span class="line">├── src</span><br><span class="line">│   ├── App.css</span><br><span class="line">│   ├── App.js</span><br><span class="line">│   ├── img</span><br><span class="line">│   │   └── test.jpg</span><br><span class="line">│   └── index.js</span><br><span class="line">├── webpack.config.dev.js</span><br><span class="line">└── webpack.config.js</span><br></pre></td></tr></table></figure>
<h3 id="2-url-loader"><a href="#2-url-loader" class="headerlink" title="2. url loader"></a><strong>2. url loader</strong></h3><ul>
<li><h4 id="2-1-url-loader"><a href="#2-1-url-loader" class="headerlink" title="2.1 url-loader"></a>2.1 url-loader</h4><p>1) help webpack process images during building.<br>2) change image url in js and css to build path.</p>
  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">'./images/test.png'</span>/&gt;</span> -&gt; <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">'./static/media/test.png'</span>/&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-2-install"><a href="#2-2-install" class="headerlink" title="2.2 install"></a>2.2 install</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:npm install --save-dev url-loader file-loader</span><br></pre></td></tr></table></figure>
<p>  url-loader depends on file-loader.</p>
</li>
<li><h4 id="2-3-webpack-config"><a href="#2-3-webpack-config" class="headerlink" title="2.3 webpack config"></a>2.3 webpack config</h4><p>  webpack.config.js</p>
  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="built_in">module</span>: &#123;</span><br><span class="line">        loaders: [</span><br><span class="line">            &#123; <span class="attr">test</span>: <span class="regexp">/\.css$/</span>, <span class="attr">loader</span>: <span class="string">"style-loader!css-loader"</span> &#125;,</span><br><span class="line">            &#123; </span><br><span class="line">                test: <span class="regexp">/\.(js|jsx)$/</span>, </span><br><span class="line">                loader: <span class="string">"babel-loader"</span>,</span><br><span class="line">                query:</span><br><span class="line">                &#123;</span><br><span class="line">                    presets:[<span class="string">'react'</span>]</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                test: [<span class="regexp">/\.bmp$/</span>, /\.gif$/, /\.jpe?g$/, /\.png$/],</span><br><span class="line">                <span class="comment">//loader: require.resolve('url-loader'),</span></span><br><span class="line">                loader: <span class="string">'url-loader'</span>,</span><br><span class="line">                options: &#123;</span><br><span class="line">                limit: <span class="number">10000</span>,</span><br><span class="line">                name: <span class="string">'static/media/[name].[ext]'</span>,</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>  <code>limit: 10000</code>, images less than 10000 bytes will return a data URI instead of a path.</p>
</li>
</ul>
<h3 id="3-images"><a href="#3-images" class="headerlink" title="3. images"></a><strong>3. images</strong></h3><ul>
<li><h4 id="3-1-App-js"><a href="#3-1-App-js" class="headerlink" title="3.1 App.js"></a>3.1 App.js</h4><p>  import xxx from ‘./xxx/xxx.ext’;</p>
  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; Component &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'./App.css'</span></span><br><span class="line"><span class="keyword">import</span> test_jpg <span class="keyword">from</span> <span class="string">'./img/test.jpg'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">Component</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    render()&#123;</span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">            &lt;img src=&#123;test_jpg&#125; alt=<span class="string">'back'</span>/&gt;</span><br><span class="line">            &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        );</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">export default App;</span></span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="3-2-in-css"><a href="#3-2-in-css" class="headerlink" title="3.2 in css"></a>3.2 in css</h4>  <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="comment">/* background-image: url(./img/test.jpg); */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="4-build-project"><a href="#4-build-project" class="headerlink" title="4. build project"></a><strong>4. build project</strong></h3><ul>
<li><h4 id="4-1-build"><a href="#4-1-build" class="headerlink" title="4.1 build"></a>4.1 build</h4><p>  <code>~:npm run build</code></p>
</li>
<li><h4 id="4-2-debug"><a href="#4-2-debug" class="headerlink" title="4.2 debug"></a>4.2 debug</h4><p>  <code>~:npm start</code></p>
</li>
</ul>
]]></content>
      <categories>
        <category>node</category>
        <category>react</category>
      </categories>
      <tags>
        <tag>react</tag>
        <tag>node</tag>
        <tag>webpack</tag>
      </tags>
  </entry>
  <entry>
    <title>(4) quick start (4) webpack-dev-server</title>
    <url>/2019/07/23/nodejs/(4)%20quick%20start%20(4)%20webpack-dev-server/</url>
    <content><![CDATA[<p>react 快速开始<br>使用webpack启动本地调试服务。在没有webpack这类工具之前，需要集成单独的服务器中间件部署静态资源，比如tomcat或者其他的node的服务器中间件。<br>webpack4</p>
<a id="more"></a>
<p>The following steps will lead you create http server for development.<br>Here we use <code>webpack-dev-server</code> to build it for <code>Hot Module Replacement</code> and <code>automatic refresh</code>.</p>
<h3 id="1-install-webpack-dev-server"><a href="#1-install-webpack-dev-server" class="headerlink" title="1. install webpack-dev-server"></a><strong>1. install webpack-dev-server</strong></h3><p><code>~:npm install --save-dev webpack-dev-server</code></p>
<h3 id="2-config-in-webpack-config-js"><a href="#2-config-in-webpack-config-js" class="headerlink" title="2. config in webpack.config.js"></a><strong>2. config in webpack.config.js</strong></h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry:  path.resolve(__dirname,<span class="string">'src/index.js'</span>),</span><br><span class="line">    output: &#123;</span><br><span class="line">        path: path.resolve(__dirname, <span class="string">'build/static/js'</span>),</span><br><span class="line">        filename: <span class="string">'bundle.js'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    plugins:[</span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">            inject: <span class="literal">true</span>, </span><br><span class="line">            template: path.resolve(__dirname, <span class="string">'public/index.html'</span>),</span><br><span class="line">            filename: path.resolve(__dirname,<span class="string">'build/index.html'</span>),</span><br><span class="line">            minify:&#123;</span><br><span class="line">                removeAttributeQuotes: <span class="literal">true</span>,</span><br><span class="line">                collapseWhitespace: <span class="literal">true</span>,</span><br><span class="line">                removeRedundantAttributes: <span class="literal">true</span>,</span><br><span class="line">                useShortDoctype: <span class="literal">true</span>,</span><br><span class="line">                removeEmptyAttributes: <span class="literal">true</span>,</span><br><span class="line">                removeStyleLinkTypeAttributes: <span class="literal">true</span>,</span><br><span class="line">                keepClosingSlash: <span class="literal">true</span>,</span><br><span class="line">                minifyJS: <span class="literal">true</span>,</span><br><span class="line">                minifyCSS: <span class="literal">true</span>,</span><br><span class="line">                minifyURLs: <span class="literal">true</span>,</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;),</span><br><span class="line">    ],</span><br><span class="line">    devServer: &#123;</span><br><span class="line">        contentBase: path.resolve(__dirname, <span class="string">'public'</span>),</span><br><span class="line">        historyApiFallback: <span class="literal">false</span>,</span><br><span class="line">        inline:<span class="literal">true</span>,</span><br><span class="line">        port:<span class="number">3000</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>contentBase</code>: specify the content base, the server will serve the static files in this directory.<br><code>historyApiFallback</code>: if your project is SPA, make it true.<br><code>inline</code>: automatic refresh and hot module replacement.</p>
<h3 id="2-node-script"><a href="#2-node-script" class="headerlink" title="2. node script"></a><strong>2. node script</strong></h3><ul>
<li><h4 id="2-1-package-json"><a href="#2-1-package-json" class="headerlink" title="2.1 package.json"></a>2.1 package.json</h4>  <figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"lesson1"</span>,</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">    <span class="attr">"description"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"main"</span>: <span class="string">"index.js"</span>,</span><br><span class="line">    <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">        <span class="attr">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span>,</span><br><span class="line">        <span class="attr">"start"</span>: <span class="string">"webpack-dev-server"</span>,</span><br><span class="line">        <span class="attr">"build"</span>: <span class="string">"webpack"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"author"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"license"</span>: <span class="string">"ISC"</span>,</span><br><span class="line">    <span class="attr">"devDependencies"</span>: &#123;</span><br><span class="line">        <span class="attr">"html-webpack-plugin"</span>: <span class="string">"^3.2.0"</span>,</span><br><span class="line">        <span class="attr">"webpack"</span>: <span class="string">"^4.41.2"</span>,</span><br><span class="line">        <span class="attr">"webpack-cli"</span>: <span class="string">"^3.3.10"</span>,</span><br><span class="line">        <span class="attr">"webpack-dev-server"</span>: <span class="string">"^3.9.0"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  <code>~:npm start</code></p>
</li>
</ul>
<h3 id="3-Javascripts-haven’t-been-injected"><a href="#3-Javascripts-haven’t-been-injected" class="headerlink" title="3. Javascripts haven’t been injected."></a><strong>3. Javascripts haven’t been injected.</strong></h3><p>Error: Javascripts haven’t been injected. </p>
<h3 id="4-multiple-webpack-config-files"><a href="#4-multiple-webpack-config-files" class="headerlink" title="4. multiple webpack config files"></a><strong>4. multiple webpack config files</strong></h3><p><code>webpack --config webpack.config.js</code><br>Webpack could specify a config file for compiling.<br>We’ve created some scripts in <code>package.json</code> to run <code>webpack</code>.<br>Now we create a new config file for webpack-dev-server so solve the injection problem.</p>
<ul>
<li><h4 id="4-1-webpack-config-dev-js"><a href="#4-1-webpack-config-dev-js" class="headerlink" title="4.1 webpack.config.dev.js"></a>4.1 webpack.config.dev.js</h4>  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry:  path.resolve(__dirname,<span class="string">'src/index.js'</span>),</span><br><span class="line">    output: &#123;</span><br><span class="line">        path: path.resolve(__dirname, <span class="string">'build/static/js'</span>),</span><br><span class="line">        filename: <span class="string">'bundle.js'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    plugins:[</span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">            inject: <span class="literal">true</span>, <span class="comment">//inject all js at the bottom of the body</span></span><br><span class="line">            template: path.resolve(__dirname, <span class="string">'public/index.html'</span>), <span class="comment">//source file</span></span><br><span class="line">        &#125;),</span><br><span class="line">    ],</span><br><span class="line">    devServer: &#123;</span><br><span class="line">        contentBase: path.resolve(__dirname, <span class="string">'public'</span>),</span><br><span class="line">        historyApiFallback: <span class="literal">false</span>,</span><br><span class="line">        inline:<span class="literal">true</span>,</span><br><span class="line">        port:<span class="number">3000</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="4-2-package-json"><a href="#4-2-package-json" class="headerlink" title="4.2 package.json"></a>4.2 package.json</h4>  <figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"lesson1"</span>,</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">    <span class="attr">"description"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"main"</span>: <span class="string">"index.js"</span>,</span><br><span class="line">    <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">        <span class="attr">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span>,</span><br><span class="line">        <span class="attr">"build"</span>: <span class="string">"webpack"</span>,</span><br><span class="line">        <span class="attr">"start"</span>: <span class="string">"webpack-dev-server --config webpack.config.dev.js"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"author"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"license"</span>: <span class="string">"ISC"</span>,</span><br><span class="line">    <span class="attr">"devDependencies"</span>: &#123;</span><br><span class="line">        <span class="attr">"html-webpack-plugin"</span>: <span class="string">"^3.2.0"</span>,</span><br><span class="line">        <span class="attr">"webpack"</span>: <span class="string">"^4.41.2"</span>,</span><br><span class="line">        <span class="attr">"webpack-cli"</span>: <span class="string">"^3.3.10"</span>,</span><br><span class="line">        <span class="attr">"webpack-dev-server"</span>: <span class="string">"^3.9.0"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  <code>~:npm start</code><br>  open <a href="http://localhost:3000" target="_blank" rel="noopener">http://localhost:3000</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>node</category>
        <category>react</category>
      </categories>
      <tags>
        <tag>react</tag>
        <tag>node</tag>
        <tag>webpack</tag>
      </tags>
  </entry>
  <entry>
    <title>(8) quick start (8) loaders and hash</title>
    <url>/2019/07/23/nodejs/(8)%20quick%20start%20(8)%20loaders%20and%20hash/</url>
    <content><![CDATA[<p>react 快速开始<br>webpack默认只能处理js文件，其他如css/图片/文件等资源文件，webpack需要引入相关插件才能处理。<br>由于浏览器缓存存在，所以为打包后的文件名加入hash，以确保浏览器加载最新的资源文件。</p>
<a id="more"></a>
<h3 id="1-loaders"><a href="#1-loaders" class="headerlink" title="1. loaders"></a><strong>1. loaders</strong></h3><p>previously on:<br>webpack can’t process file if it is not a javascript file. So we must install different loaders for different types.</p>
<h4 id="1-1-loaders-list"><a href="#1-1-loaders-list" class="headerlink" title="1.1 loaders list"></a><strong>1.1 loaders list</strong></h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">babel-loader <span class="comment">// for es6 and jsx language</span></span><br><span class="line">css-loader style-loder <span class="comment">// for css</span></span><br><span class="line">url-loader <span class="comment">// for images</span></span><br><span class="line">file-loader <span class="comment">// for other files, and url-loader depends on it.</span></span><br></pre></td></tr></table></figure>
<h4 id="1-2-webpack-config-js"><a href="#1-2-webpack-config-js" class="headerlink" title="1.2. webpack.config.js"></a><strong>1.2. webpack.config.js</strong></h4><ul>
<li><h5 id="1-2-1-original-loaders-in-webpack-config-js"><a href="#1-2-1-original-loaders-in-webpack-config-js" class="headerlink" title="1.2.1 original loaders in webpack.config.js"></a>1.2.1 original loaders in webpack.config.js</h5>  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry:  ...,</span><br><span class="line">    output: &#123;...&#125;,</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        loaders: [</span><br><span class="line">            &#123; <span class="attr">test</span>: <span class="regexp">/\.css$/</span>, <span class="attr">loader</span>: <span class="string">"style-loader!css-loader"</span> &#125;,</span><br><span class="line">            &#123; </span><br><span class="line">                test: <span class="regexp">/\.(js|jsx)$/</span>, </span><br><span class="line">                loader: <span class="string">"babel-loader"</span>,</span><br><span class="line">                query:</span><br><span class="line">                &#123;</span><br><span class="line">                    presets:[<span class="string">'react'</span>]</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                test: [<span class="regexp">/\.bmp$/</span>, /\.gif$/, /\.jpe?g$/, /\.png$/],</span><br><span class="line">                <span class="comment">//loader: require.resolve('url-loader'),</span></span><br><span class="line">                loader: <span class="string">'url-loader'</span>,</span><br><span class="line">                options: &#123;</span><br><span class="line">                limit: <span class="number">10000</span>,</span><br><span class="line">                name: <span class="string">'static/media/[name].[ext]'</span>,</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins:[...],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  we have to add a file-loader to process other files.</p>
  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123; </span><br><span class="line">    exclude: [<span class="regexp">/\.js$/</span>,/\.html$/,/\.json$/],</span><br><span class="line">    loader: <span class="string">'file-loader'</span>,</span><br><span class="line">    options: &#123;</span><br><span class="line">        name: <span class="string">'static/media/[name].[ext]'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
<p>  But this loader may process images which will cause a confict to url-loader.</p>
</li>
<li><h5 id="1-2-2-new-config"><a href="#1-2-2-new-config" class="headerlink" title="1.2.2 new config"></a>1.2.2 new config</h5>  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry:  ...,</span><br><span class="line">    output: &#123;...&#125;,</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules:[</span><br><span class="line">            &#123;</span><br><span class="line">                oneOf:[</span><br><span class="line">                    &#123; </span><br><span class="line">                        test: <span class="regexp">/\.(js|jsx)$/</span>, </span><br><span class="line">                        loader: <span class="string">'babel-loader'</span>,</span><br><span class="line">                        query:</span><br><span class="line">                        &#123;</span><br><span class="line">                            presets:[<span class="string">'react'</span>]</span><br><span class="line">                        &#125;,</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123; </span><br><span class="line">                        test: <span class="regexp">/\.css$/</span>, </span><br><span class="line">                        loader: <span class="string">"style-loader!css-loader"</span> &#125;,</span><br><span class="line">                    </span><br><span class="line">                    &#123;</span><br><span class="line">                        test: [<span class="regexp">/\.bmp$/</span>, /\.gif$/, /\.jpe?g$/, /\.png$/],</span><br><span class="line">                        <span class="comment">//loader: require.resolve('url-loader'),</span></span><br><span class="line">                        loader: <span class="string">'url-loader'</span>,</span><br><span class="line">                        options: &#123;</span><br><span class="line">                        limit: <span class="number">10000</span>,</span><br><span class="line">                        name: <span class="string">'static/media/[name].[ext]'</span>,</span><br><span class="line">                        &#125;,</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        exclude: [<span class="regexp">/\.js$/</span>,/\.html$/,/\.json$/],</span><br><span class="line">                        <span class="comment">//loader: require.resolve('url-loader'),</span></span><br><span class="line">                        loader: <span class="string">'file-loader'</span>,</span><br><span class="line">                        options: &#123;</span><br><span class="line">                        name: <span class="string">'static/media/[name].[ext]'</span>,</span><br><span class="line">                        &#125;,</span><br><span class="line">                    &#125;,</span><br><span class="line">                ],</span><br><span class="line">            &#125;,</span><br><span class="line">        ],</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins:[...],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  “oneOf” will traverse all following loaders until one will match the requirements. When no loader matches it will fall back to the “file” loader at the end of the loader list.</p>
</li>
</ul>
<h3 id="2-hash"><a href="#2-hash" class="headerlink" title="2. hash"></a><strong>2. hash</strong></h3><h4 id="2-1-why-use-hash"><a href="#2-1-why-use-hash" class="headerlink" title="2.1 why use hash"></a><strong>2.1 why use hash</strong></h4><p>Add hash code into file name.<br>If a file content is changed, the next time to build it will change hash code in its name.  Browser’s visit site will change which will cause a new request for this file. A long cache kept in browser if the hash code dosen’t change.</p>
<h4 id="2-2-how-to-use-hash"><a href="#2-2-how-to-use-hash" class="headerlink" title="2.2. how to use hash"></a><strong>2.2. how to use hash</strong></h4><ul>
<li><h5 id="2-2-1-production-config"><a href="#2-2-1-production-config" class="headerlink" title="2.2.1 production config"></a>2.2.1 production config</h5>  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry:  ...,</span><br><span class="line">    output: &#123;</span><br><span class="line">        path: path.resolve(__dirname, <span class="string">'build/'</span>),</span><br><span class="line">        filename: <span class="string">'static/js/[name].[chunkhash:8].js'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules:[</span><br><span class="line">            &#123;</span><br><span class="line">                oneOf:[</span><br><span class="line">                    &#123; </span><br><span class="line">                        test: <span class="regexp">/\.(js|jsx)$/</span>, </span><br><span class="line">                        ...</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123; </span><br><span class="line">                        test: <span class="regexp">/\.css$/</span>, </span><br><span class="line">                        ...</span><br><span class="line">                    &#125;,                    </span><br><span class="line">                    &#123;</span><br><span class="line">                        test: [<span class="regexp">/\.bmp$/</span>, /\.gif$/, /\.jpe?g$/, /\.png$/],</span><br><span class="line">                        <span class="comment">//loader: require.resolve('url-loader'),</span></span><br><span class="line">                        loader: <span class="string">'url-loader'</span>,</span><br><span class="line">                        options: &#123;</span><br><span class="line">                        limit: <span class="number">10000</span>,</span><br><span class="line">                        name: <span class="string">'static/media/[name].[hash:8].[ext]'</span>,</span><br><span class="line">                        &#125;,</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        exclude: [<span class="regexp">/\.js$/</span>,/\.html$/,/\.json$/],</span><br><span class="line">                        <span class="comment">//loader: require.resolve('url-loader'),</span></span><br><span class="line">                        loader: <span class="string">'file-loader'</span>,</span><br><span class="line">                        options: &#123;</span><br><span class="line">                        name: <span class="string">'static/media/[name].[hash:8].[ext]'</span>,</span><br><span class="line">                        &#125;,</span><br><span class="line">                    &#125;,</span><br><span class="line">                ],</span><br><span class="line">            &#125;,</span><br><span class="line">        ],</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins:[...],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><h5 id="2-2-2-development-config"><a href="#2-2-2-development-config" class="headerlink" title="2.2.2 development config"></a>2.2.2 development config</h5>  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry:  ...,</span><br><span class="line">    output: &#123;</span><br><span class="line">        path: path.resolve(__dirname, <span class="string">'build/'</span>),</span><br><span class="line">        filename: <span class="string">'static/js/bundle.js'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules:[</span><br><span class="line">            &#123;</span><br><span class="line">                oneOf:[</span><br><span class="line">                    &#123; </span><br><span class="line">                        test: <span class="regexp">/\.(js|jsx)$/</span>, </span><br><span class="line">                        ...</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123; </span><br><span class="line">                        test: <span class="regexp">/\.css$/</span>, </span><br><span class="line">                        ...</span><br><span class="line">                    &#125;,                    </span><br><span class="line">                    &#123;</span><br><span class="line">                        test: [<span class="regexp">/\.bmp$/</span>, /\.gif$/, /\.jpe?g$/, /\.png$/],</span><br><span class="line">                        <span class="comment">//loader: require.resolve('url-loader'),</span></span><br><span class="line">                        loader: <span class="string">'url-loader'</span>,</span><br><span class="line">                        options: &#123;</span><br><span class="line">                        limit: <span class="number">10000</span>,</span><br><span class="line">                        name: <span class="string">'static/media/[name].[hash:8].[ext]'</span>,</span><br><span class="line">                        &#125;,</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        exclude: [<span class="regexp">/\.js$/</span>,/\.html$/,/\.json$/],</span><br><span class="line">                        <span class="comment">//loader: require.resolve('url-loader'),</span></span><br><span class="line">                        loader: <span class="string">'file-loader'</span>,</span><br><span class="line">                        options: &#123;</span><br><span class="line">                        name: <span class="string">'static/media/[name].[hash:8].[ext]'</span>,</span><br><span class="line">                        &#125;,</span><br><span class="line">                    &#125;,</span><br><span class="line"></span><br><span class="line">                ],</span><br><span class="line">            &#125;,</span><br><span class="line">        ],</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins:[...],</span><br><span class="line">    devServer: &#123;...&#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  css file need a plugin to add hash.</p>
</li>
<li><h5 id="2-2-3-hash-for-css-file"><a href="#2-2-3-hash-for-css-file" class="headerlink" title="2.2.3 hash for css file"></a>2.2.3 hash for css file</h5><p>  install</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:npm install --save-dev extract-text-webpack-plugin</span><br></pre></td></tr></table></figure>
<p>  webpack.config.js</p>
  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">const</span> ExtractTextPlugin = <span class="built_in">require</span>(<span class="string">'extract-text-webpack-plugin'</span>);</span><br><span class="line">...</span><br><span class="line">plugins:[</span><br><span class="line">    ...</span><br><span class="line">        <span class="keyword">new</span> ExtractTextPlugin(&#123;</span><br><span class="line">            filename: <span class="string">'static/css/[name].[contenthash:8].css'</span>,</span><br><span class="line">        &#125;),</span><br><span class="line">    ],</span><br><span class="line">...</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>node</category>
        <category>react</category>
      </categories>
      <tags>
        <tag>react</tag>
        <tag>node</tag>
        <tag>webpack</tag>
      </tags>
  </entry>
  <entry>
    <title>export</title>
    <url>/2019/07/26/nodejs/export/</url>
    <content><![CDATA[<p>nodejs中 <code>export</code> 和 <code>module.exports</code> 的区别。<br>nodejs中 <code>import</code> 的方式。</p>
<a id="more"></a>
<h3 id="1-导出默认组件"><a href="#1-导出默认组件" class="headerlink" title="1. 导出默认组件"></a><strong>1. 导出默认组件</strong></h3><p>使用 <code>import 模块</code> 会直接导出该模块默认组件。<br><code>export</code> 是对 <code>module.exports</code> 的封装。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> ComponentName;</span><br></pre></td></tr></table></figure>
<h3 id="2-导出指定组件"><a href="#2-导出指定组件" class="headerlink" title="2. 导出指定组件"></a><strong>2. 导出指定组件</strong></h3><p>可以导出多个组件，<code>import {Component1, Component2...}</code> 可以导入这些组件</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports=&#123;&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>node</category>
      </categories>
      <tags>
        <tag>node</tag>
      </tags>
  </entry>
  <entry>
    <title>fetch send Array or list to SpringBoot</title>
    <url>/2019/07/26/nodejs/fetch-send-Array-or-list-to-SpringBoot/</url>
    <content><![CDATA[<p>fetch给spring boot controller发送 array 或 list 参数。</p>
<a id="more"></a>
<h3 id="1-js请求源码"><a href="#1-js请求源码" class="headerlink" title="1. js请求源码"></a><strong>1. js请求源码</strong></h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">fetch(url + <span class="string">"/testJob"</span>, &#123;</span><br><span class="line">    method: <span class="string">"post"</span>,</span><br><span class="line">    body: <span class="string">"ids="</span>+<span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">1</span>,<span class="number">2</span>),</span><br><span class="line">    <span class="comment">// or body: "ids="+[1,2],</span></span><br><span class="line">    headers: &#123;</span><br><span class="line">        <span class="string">'Accept'</span>: <span class="string">'application/json'</span>,</span><br><span class="line">      <span class="comment">// specify x-www-form-urlencoded</span></span><br><span class="line">        <span class="string">'Content-Type'</span>: <span class="string">'application/x-www-form-urlencoded'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> res.json();</span><br><span class="line">&#125;).then(<span class="function"><span class="params">body</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(body);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h3 id="2-java源码"><a href="#2-java源码" class="headerlink" title="2. java源码"></a><strong>2. java源码</strong></h3><p><strong>@RequestParam(“ids”)</strong><br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@PostMapping</span>(<span class="string">"/testJob"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testJob</span><span class="params">(@RequestParam(<span class="string">"ids"</span>)</span> List&lt;Integer&gt; ids)</span>&#123;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>node</category>
      </categories>
      <tags>
        <tag>spring</tag>
        <tag>node</tag>
        <tag>fetch</tag>
        <tag>post</tag>
      </tags>
  </entry>
  <entry>
    <title>(9) quick start (9) a project of react</title>
    <url>/2019/07/23/nodejs/(9)%20quick%20start%20(9)%20a%20project%20of%20react/</url>
    <content><![CDATA[<p>一个完整的 react demo</p>
<a id="more"></a>
<h3 id="1-directory-tree"><a href="#1-directory-tree" class="headerlink" title="1. directory tree"></a><strong>1. directory tree</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── package.json</span><br><span class="line">├── package-lock.json</span><br><span class="line">├── public</span><br><span class="line">│   └── index.html</span><br><span class="line">├── README.md</span><br><span class="line">├── src</span><br><span class="line">│   ├── App.css</span><br><span class="line">│   ├── App.js</span><br><span class="line">│   ├── img</span><br><span class="line">│   │   ├── logo.svg</span><br><span class="line">│   │   └── test.jpg</span><br><span class="line">│   └── index.js</span><br><span class="line">├── webpack.config.dev.js</span><br><span class="line">└── webpack.config.js</span><br></pre></td></tr></table></figure>
<h3 id="2-package-json"><a href="#2-package-json" class="headerlink" title="2. package.json"></a><strong>2. package.json</strong></h3><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"lesson1"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"main"</span>: <span class="string">"index.js"</span>,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span>,</span><br><span class="line">    <span class="attr">"build"</span>: <span class="string">"webpack"</span>,</span><br><span class="line">    <span class="attr">"start"</span>: <span class="string">"webpack-dev-server --config webpack.config.dev.js"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"author"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"license"</span>: <span class="string">"ISC"</span>,</span><br><span class="line">  <span class="attr">"devDependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"babel-core"</span>: <span class="string">"^6.26.0"</span>,</span><br><span class="line">    <span class="attr">"babel-loader"</span>: <span class="string">"^7.1.2"</span>,</span><br><span class="line">    <span class="attr">"babel-preset-react"</span>: <span class="string">"^6.24.1"</span>,</span><br><span class="line">    <span class="attr">"css-loader"</span>: <span class="string">"^0.28.7"</span>,</span><br><span class="line">    <span class="attr">"extract-text-webpack-plugin"</span>: <span class="string">"^3.0.2"</span>,</span><br><span class="line">    <span class="attr">"file-loader"</span>: <span class="string">"^1.1.6"</span>,</span><br><span class="line">    <span class="attr">"html-webpack-plugin"</span>: <span class="string">"^2.30.1"</span>,</span><br><span class="line">    <span class="attr">"react"</span>: <span class="string">"^16.2.0"</span>,</span><br><span class="line">    <span class="attr">"react-dom"</span>: <span class="string">"^16.2.0"</span>,</span><br><span class="line">    <span class="attr">"style-loader"</span>: <span class="string">"^0.19.1"</span>,</span><br><span class="line">    <span class="attr">"url-loader"</span>: <span class="string">"^0.6.2"</span>,</span><br><span class="line">    <span class="attr">"webpack"</span>: <span class="string">"^3.10.0"</span>,</span><br><span class="line">    <span class="attr">"webpack-dev-server"</span>: <span class="string">"^2.9.7"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3-webpack-config-js"><a href="#3-webpack-config-js" class="headerlink" title="3. webpack.config.js"></a><strong>3. webpack.config.js</strong></h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"><span class="keyword">const</span> ExtractTextPlugin = <span class="built_in">require</span>(<span class="string">'extract-text-webpack-plugin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry:  path.resolve(__dirname,<span class="string">'src/index.js'</span>),</span><br><span class="line">    output: &#123;</span><br><span class="line">        path: path.resolve(__dirname, <span class="string">'build/'</span>),</span><br><span class="line">        filename: <span class="string">'static/js/[name].[chunkhash:8].js'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules:[</span><br><span class="line">            &#123;</span><br><span class="line">                oneOf:[</span><br><span class="line">                    &#123; </span><br><span class="line">                        test: <span class="regexp">/\.(js|jsx)$/</span>, </span><br><span class="line">                        loader: <span class="string">'babel-loader'</span>,</span><br><span class="line">                        query:</span><br><span class="line">                        &#123;</span><br><span class="line">                            presets:[<span class="string">'react'</span>]</span><br><span class="line">                        &#125;,</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123; </span><br><span class="line">                        test: <span class="regexp">/\.css$/</span>, </span><br><span class="line">                        loader: <span class="string">"style-loader!css-loader"</span> &#125;,</span><br><span class="line">                    </span><br><span class="line">                    &#123;</span><br><span class="line">                        test: [<span class="regexp">/\.bmp$/</span>, /\.gif$/, /\.jpe?g$/, /\.png$/],</span><br><span class="line">                        <span class="comment">//loader: require.resolve('url-loader'),</span></span><br><span class="line">                        loader: <span class="string">'url-loader'</span>,</span><br><span class="line">                        options: &#123;</span><br><span class="line">                          limit: <span class="number">10000</span>,</span><br><span class="line">                          name: <span class="string">'static/media/[name].[hash:8].[ext]'</span>,</span><br><span class="line">                        &#125;,</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        exclude: [<span class="regexp">/\.js$/</span>,/\.html$/,/\.json$/],</span><br><span class="line">                        <span class="comment">//loader: require.resolve('url-loader'),</span></span><br><span class="line">                        loader: <span class="string">'file-loader'</span>,</span><br><span class="line">                        options: &#123;</span><br><span class="line">                          name: <span class="string">'static/media/[name].[hash:8].[ext]'</span>,</span><br><span class="line">                        &#125;,</span><br><span class="line">                    &#125;,</span><br><span class="line"></span><br><span class="line">                ],</span><br><span class="line">            &#125;,</span><br><span class="line">        ],</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins:[</span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">            inject: <span class="literal">true</span>, </span><br><span class="line">            template: path.resolve(__dirname, <span class="string">'public/index.html'</span>),</span><br><span class="line">            filename: path.resolve(__dirname,<span class="string">'build/index.html'</span>),</span><br><span class="line">            minify:&#123;</span><br><span class="line">                removeAttributeQuotes: <span class="literal">true</span>,</span><br><span class="line">                collapseWhitespace: <span class="literal">true</span>,</span><br><span class="line">                removeRedundantAttributes: <span class="literal">true</span>,</span><br><span class="line">                useShortDoctype: <span class="literal">true</span>,</span><br><span class="line">                removeEmptyAttributes: <span class="literal">true</span>,</span><br><span class="line">                removeStyleLinkTypeAttributes: <span class="literal">true</span>,</span><br><span class="line">                keepClosingSlash: <span class="literal">true</span>,</span><br><span class="line">                minifyJS: <span class="literal">true</span>,</span><br><span class="line">                minifyCSS: <span class="literal">true</span>,</span><br><span class="line">                minifyURLs: <span class="literal">true</span>,</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;),</span><br><span class="line">        <span class="keyword">new</span> ExtractTextPlugin(&#123;</span><br><span class="line">            filename: <span class="string">'static/css/[name].[contenthash:8].css'</span>,</span><br><span class="line">        &#125;),</span><br><span class="line">    ],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="4-webpack-config-dev-js"><a href="#4-webpack-config-dev-js" class="headerlink" title="4. webpack.config.dev.js"></a><strong>4. webpack.config.dev.js</strong></h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry:  path.resolve(__dirname,<span class="string">'src/index.js'</span>),</span><br><span class="line">    output: &#123;</span><br><span class="line">        path: path.resolve(__dirname, <span class="string">'build/'</span>),</span><br><span class="line">        filename: <span class="string">'static/js/bundle.js'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules:[</span><br><span class="line">            &#123;</span><br><span class="line">                oneOf:[</span><br><span class="line">                    &#123; </span><br><span class="line">                        test: <span class="regexp">/\.(js|jsx)$/</span>, </span><br><span class="line">                        loader: <span class="string">'babel-loader'</span>,</span><br><span class="line">                        query:</span><br><span class="line">                        &#123;</span><br><span class="line">                            presets:[<span class="string">'react'</span>]</span><br><span class="line">                        &#125;,</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123; </span><br><span class="line">                        test: <span class="regexp">/\.css$/</span>, </span><br><span class="line">                        loader: <span class="string">"style-loader!css-loader"</span></span><br><span class="line">                    &#125;,                    </span><br><span class="line">                    &#123;</span><br><span class="line">                        test: [<span class="regexp">/\.bmp$/</span>, /\.gif$/, /\.jpe?g$/, /\.png$/],</span><br><span class="line">                        <span class="comment">//loader: require.resolve('url-loader'),</span></span><br><span class="line">                        loader: <span class="string">'url-loader'</span>,</span><br><span class="line">                        options: &#123;</span><br><span class="line">                          limit: <span class="number">10000</span>,</span><br><span class="line">                          name: <span class="string">'static/media/[name].[hash:8].[ext]'</span>,</span><br><span class="line">                        &#125;,</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        exclude: [<span class="regexp">/\.js$/</span>,/\.html$/,/\.json$/],</span><br><span class="line">                        <span class="comment">//loader: require.resolve('url-loader'),</span></span><br><span class="line">                        loader: <span class="string">'file-loader'</span>,</span><br><span class="line">                        options: &#123;</span><br><span class="line">                          name: <span class="string">'static/media/[name].[hash:8].[ext]'</span>,</span><br><span class="line">                        &#125;,</span><br><span class="line">                    &#125;,</span><br><span class="line"></span><br><span class="line">                ],</span><br><span class="line">            &#125;,</span><br><span class="line">        ],</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins:[</span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">            inject: <span class="literal">true</span>, <span class="comment">//inject all js at the bottom of the body</span></span><br><span class="line">            template: path.resolve(__dirname, <span class="string">'public/index.html'</span>), <span class="comment">//source file</span></span><br><span class="line">        &#125;),</span><br><span class="line">    ],</span><br><span class="line">    devServer: &#123;</span><br><span class="line">        contentBase: path.resolve(__dirname, <span class="string">'public'</span>),</span><br><span class="line">        historyApiFallback: <span class="literal">false</span>,</span><br><span class="line">        inline:<span class="literal">true</span>,</span><br><span class="line">        port:<span class="number">3000</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="5-code"><a href="#5-code" class="headerlink" title="5. code"></a><strong>5. code</strong></h3><ul>
<li><h4 id="5-1-index-html"><a href="#5-1-index-html" class="headerlink" title="5.1 index.html"></a>5.1 index.html</h4>  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">'root'</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="5-2-index-js"><a href="#5-2-index-js" class="headerlink" title="5.2 index.js"></a>5.2 index.js</h4>  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> ReactDOM <span class="keyword">from</span> <span class="string">'react-dom'</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App'</span>;</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">    &lt;App /&gt;, <span class="built_in">document</span>.getElementById(<span class="string">'root'</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="5-3-App-js"><a href="#5-3-App-js" class="headerlink" title="5.3 App.js"></a>5.3 App.js</h4>  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; Component &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'./App.css'</span></span><br><span class="line"><span class="keyword">import</span> logo <span class="keyword">from</span> <span class="string">'./img/logo.svg'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">Component</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    render()&#123;</span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">            &lt;img src=&#123;logo&#125; alt=<span class="string">'logo'</span>/&gt;</span><br><span class="line">            &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        );</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">export default App;</span></span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="5-4-App-css"><a href="#5-4-App-css" class="headerlink" title="5.4 App.css"></a>5.4 App.css</h4>  <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(./img/test.jpg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>node</category>
        <category>react</category>
      </categories>
      <tags>
        <tag>react</tag>
        <tag>node</tag>
      </tags>
  </entry>
  <entry>
    <title>nvm</title>
    <url>/2019/07/26/nodejs/nvm/</url>
    <content><![CDATA[<p>使用nvm管理node环境</p>
<a id="more"></a>
<h3 id="1-install"><a href="#1-install" class="headerlink" title="1. install"></a><strong>1. install</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.0/install.sh | bash</span><br></pre></td></tr></table></figure>
<h3 id="2-install-node"><a href="#2-install-node" class="headerlink" title="2. install node"></a><strong>2. install node</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:nvm install 10</span><br></pre></td></tr></table></figure>
<h3 id="3-list"><a href="#3-list" class="headerlink" title="3. list"></a><strong>3. list</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:nvm list</span><br></pre></td></tr></table></figure>
<h3 id="4-change-version"><a href="#4-change-version" class="headerlink" title="4. change version"></a><strong>4. change version</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:nvm use 6</span><br></pre></td></tr></table></figure>
<h3 id="5-set-default-version"><a href="#5-set-default-version" class="headerlink" title="5. set default version"></a><strong>5. set default version</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:nvm alias default 10</span><br></pre></td></tr></table></figure>
<h3 id="6-change-mirror"><a href="#6-change-mirror" class="headerlink" title="6. change mirror"></a><strong>6. change mirror</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:npm config set registry http://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>
<h3 id="7-nvm-for-zsh"><a href="#7-nvm-for-zsh" class="headerlink" title="7. nvm for zsh"></a><strong>7. nvm for zsh</strong></h3><p><strong>.zshrc</strong><br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export NVM_DIR="/home/user/.nvm"</span><br><span class="line">[ -s "$NVM_DIR/nvm.sh" ] &amp;&amp; \. "$NVM_DIR/nvm.sh"  # This loads nvm</span><br><span class="line">[ -s "$NVM_DIR/bash_completion" ] &amp;&amp; \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>node</category>
      </categories>
      <tags>
        <tag>node</tag>
        <tag>nvm</tag>
      </tags>
  </entry>
  <entry>
    <title>taobao mirros</title>
    <url>/2019/07/26/nodejs/taobao-mirros/</url>
    <content><![CDATA[<p>npm换源</p>
<a id="more"></a>
<p>show current mirros<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm config get registry</span><br></pre></td></tr></table></figure></p>
<p>set registry<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm config set registry &quot;https://registry.npm.taobao.org&quot;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>node</category>
      </categories>
      <tags>
        <tag>node</tag>
      </tags>
  </entry>
  <entry>
    <title>插件--CommonsChunkPlugin提取公共模块</title>
    <url>/2019/07/31/nodejs/%E6%8F%92%E4%BB%B6-CommonsChunkPlugin%E6%8F%90%E5%8F%96%E5%85%AC%E5%85%B1%E6%A8%A1%E5%9D%97/</url>
    <content><![CDATA[<p>webpack插件。</p>
<a id="more"></a>
<p>webpack的一个插件，需要在配置文件的plugin节点配置<br>作用：<br>(1)提取各个js里共同的require对象，优化加载速度<br>(2)某个entry不生成js，但需要打包进最终的js</p>
]]></content>
      <categories>
        <category>node</category>
        <category>webpack</category>
      </categories>
      <tags>
        <tag>node</tag>
        <tag>webpack</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS install oracle11g</title>
    <url>/2019/07/29/oracle/CentOS-install-oracle11g/</url>
    <content><![CDATA[<p>oracle数据库在centos上的安装</p>
<a id="more"></a>
<h2 id="1-prepare-the-runtime-environment"><a href="#1-prepare-the-runtime-environment" class="headerlink" title="1. prepare the runtime environment"></a><strong>1. prepare the runtime environment</strong></h2><h3 id="1-1-swap-partition"><a href="#1-1-swap-partition" class="headerlink" title="1.1 swap partition"></a><strong>1.1 swap partition</strong></h3><pre><code>`~:free` to see swap size
It shouldn&#39;t be less than 2G.
Change it.
</code></pre><p><strong>Note: root user</strong></p>
<ul>
<li><h4 id="1-1-1-close-the-swap"><a href="#1-1-1-close-the-swap" class="headerlink" title="1.1.1 close the swap"></a>1.1.1 close the swap</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:swapoff -a</span><br></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><h4 id="1-1-2-create-swap-file"><a href="#1-1-2-create-swap-file" class="headerlink" title="1.1.2 create swap file"></a>1.1.2 create swap file</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dd if=/dev/zero of=/var/swapfile bs=1M count=4096</span><br></pre></td></tr></table></figure>
<p>create a swap file at /var/swapfile, capacity is 4G.</p>
</li>
<li><h4 id="1-1-3-make-the-swap-file-become-swap-partition"><a href="#1-1-3-make-the-swap-file-become-swap-partition" class="headerlink" title="1.1.3 make the swap file become swap partition"></a>1.1.3 make the swap file become swap partition</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:mkswap /var/swapfile</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="1-1-4-open-swap"><a href="#1-1-4-open-swap" class="headerlink" title="1.1.4 open swap"></a>1.1.4 open swap</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:swapon /var/swapfile</span><br><span class="line">~:free</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="1-1-5-mount-swap-partition-when-startup"><a href="#1-1-5-mount-swap-partition-when-startup" class="headerlink" title="1.1.5 mount swap partition when startup"></a>1.1.5 mount swap partition when startup</h4><p>==&gt; vim /etc/fstab</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/var/swapfile	swap	swap	defaults	0 0</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="1-2-install-dependencies"><a href="#1-2-install-dependencies" class="headerlink" title="1.2 install dependencies"></a><strong>1.2 install dependencies</strong></h3><p><strong>Note: root user</strong></p>
<p><strong>==&gt;</strong> to see if you’ve installed the package<br><code>rpm -q package_name</code><br><strong>==&gt;</strong> install a package<br><code>yum install package_name</code><br><strong>==&gt;</strong> for example here we install a package of x64 and x86.<br><code>~:yum install -y libaio</code><br><code>~:yum install -y libaio*.i686</code><br><strong>==&gt;</strong> dependencies list<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">binutils-2.17.50.0.6</span><br><span class="line"></span><br><span class="line">compat-libstdc++-33-3.2.3</span><br><span class="line"></span><br><span class="line">compat-libstdc++-33-3.2.3 (32 bit)</span><br><span class="line"></span><br><span class="line">elfutils-libelf-0.125</span><br><span class="line"></span><br><span class="line">elfutils-libelf-devel-0.125</span><br><span class="line"></span><br><span class="line">gcc-4.1.2</span><br><span class="line"></span><br><span class="line">gcc-c++-4.1.2</span><br><span class="line"></span><br><span class="line">glibc-2.5-24</span><br><span class="line"></span><br><span class="line">--&gt;glibc-2.5-24 (32 bit) </span><br><span class="line"></span><br><span class="line">glibc-common-2.5</span><br><span class="line"></span><br><span class="line">glibc-devel-2.5</span><br><span class="line"></span><br><span class="line">glibc-devel-2.5 (32 bit) </span><br><span class="line"></span><br><span class="line">glibc-headers-2.5</span><br><span class="line"></span><br><span class="line">ksh-20060214</span><br><span class="line"></span><br><span class="line">libaio-0.3.106</span><br><span class="line"></span><br><span class="line">libaio-0.3.106 (32 bit) </span><br><span class="line"></span><br><span class="line">libaio-devel-0.3.106</span><br><span class="line"></span><br><span class="line">libaio-devel-0.3.106 (32 bit)</span><br><span class="line"></span><br><span class="line">libgcc-4.1.2</span><br><span class="line"></span><br><span class="line">libgcc-4.1.2 (32 bit)</span><br><span class="line"></span><br><span class="line">libstdc++-4.1.2</span><br><span class="line"></span><br><span class="line">libstdc++-4.1.2 (32 bit)</span><br><span class="line"></span><br><span class="line">libstdc++-devel 4.1.2</span><br><span class="line"></span><br><span class="line">make-3.81</span><br><span class="line"></span><br><span class="line">sysstat-7.0.2</span><br><span class="line"></span><br><span class="line">unixODBC-2.2.11 (32-bit) or later</span><br><span class="line"></span><br><span class="line">unixODBC-devel-2.2.11 (32-bit) or later</span><br><span class="line"></span><br><span class="line">unixODBC-devel-2.2.11 (64-bit) or later</span><br><span class="line"></span><br><span class="line">unixODBC-2.2.11 (64-bit) or later</span><br></pre></td></tr></table></figure></p>
<h3 id="1-3-add-user-and-group-for-oracle"><a href="#1-3-add-user-and-group-for-oracle" class="headerlink" title="1.3 add user and group for oracle"></a><strong>1.3 add user and group for oracle</strong></h3><p><strong>Note: root user</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:groupadd oinstall</span><br><span class="line">~:groupadd dba</span><br><span class="line">~:useradd -g oinstall -G dba oracle</span><br><span class="line">~:passwd oracle</span><br></pre></td></tr></table></figure>
<h3 id="1-4-change-linux-kernal-config-to-adapt-oracle"><a href="#1-4-change-linux-kernal-config-to-adapt-oracle" class="headerlink" title="1.4 change linux kernal config to adapt oracle"></a><strong>1.4 change linux kernal config to adapt oracle</strong></h3><p><strong>Note: root user</strong></p>
<ul>
<li><h4 id="1-4-1-change-config"><a href="#1-4-1-change-config" class="headerlink" title="1.4.1 change config"></a>1.4.1 change config</h4><p>  vim /etc/sysctl.conf</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">fs.aio-max-nr = 1048576</span><br><span class="line">fs.file-max = 6815744</span><br><span class="line">kernel.shmall = 2097152		# [2048*1024 k] at least 1/4 of RAM</span><br><span class="line">kernel.shmmax = 536870912  # [4*1024*1024*1024 b] at least 1/2 of RAM, set kernel.shmmax 4G if RAM is small than 4G.</span><br><span class="line">kernel.shmmni = 4096</span><br><span class="line">kernel.sem = 250 32000 100 128</span><br><span class="line">net.ipv4.ip_local_port_range = 9000 65500</span><br><span class="line">net.core.rmem_default = 262144</span><br><span class="line">net.core.rmem_max = 4194304</span><br><span class="line">net.core.wmem_default = 262144</span><br><span class="line">net.core.wmem_max = 1048576</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="1-4-2-make-the-config-run"><a href="#1-4-2-make-the-config-run" class="headerlink" title="1.4.2 make the config run"></a>1.4.2 make the config run</h4><p>  <code>~:/sbin/sysctl -p</code></p>
</li>
</ul>
<h3 id="1-5-limits-hard-ware-usage-of-oracle"><a href="#1-5-limits-hard-ware-usage-of-oracle" class="headerlink" title="1.5 limits hard ware usage of oracle"></a><strong>1.5 limits hard ware usage of oracle</strong></h3><p><strong>Note: root user</strong></p>
<ul>
<li><h4 id="1-5-1-limits"><a href="#1-5-1-limits" class="headerlink" title="1.5.1 limits"></a>1.5.1 limits</h4><p>  <strong>==&gt;</strong> vim /etc/security/limits.conf </p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">oracle soft nproc 2047</span><br><span class="line"></span><br><span class="line">oracle hard nproc 16384</span><br><span class="line"></span><br><span class="line">oracle soft nofile 1024</span><br><span class="line"></span><br><span class="line">oracle hard nofile 65536</span><br><span class="line"></span><br><span class="line">oracle soft stack 10240</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="1-5-2-the-limits-depend-on-pam"><a href="#1-5-2-the-limits-depend-on-pam" class="headerlink" title="1.5.2 the limits depend on pam"></a>1.5.2 the limits depend on pam</h4><p>  <strong>==&gt;</strong> vim /etc/pam.d/login</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">session required /lib/security/pam_limits.so</span><br><span class="line"></span><br><span class="line">session required pam_limits.so</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="1-5-3-other-limits"><a href="#1-5-3-other-limits" class="headerlink" title="1.5.3 other limits"></a>1.5.3 other limits</h4><p>  <strong>==&gt;</strong> vim /etc/profile</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if [ $USER = &quot;oracle&quot; ]; then</span><br><span class="line"></span><br><span class="line">    if [ $SHELL = &quot;/bin/ksh&quot; ]; then</span><br><span class="line"></span><br><span class="line">        ulimit -p 16384</span><br><span class="line"></span><br><span class="line">        ulimit -n 65536</span><br><span class="line"></span><br><span class="line">    else</span><br><span class="line"></span><br><span class="line">        ulimit -u 16384 -n 65536</span><br><span class="line"></span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="1-6-create-install-direcotry"><a href="#1-6-create-install-direcotry" class="headerlink" title="1.6 create install direcotry"></a><strong>1.6 create install direcotry</strong></h3><p><strong>Note: root user</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:cd /usr/local</span><br><span class="line">~:mkdir -p oracle_about/app/</span><br><span class="line">~:chown -R oracle:oinstall oracle_about/app/</span><br><span class="line">~:chmod -R 775 oracle_about/app/</span><br></pre></td></tr></table></figure>
<h3 id="1-7-create-install-location-describe-file"><a href="#1-7-create-install-location-describe-file" class="headerlink" title="1.7 create install location describe file"></a><strong>1.7 create install location describe file</strong></h3><p><strong>Note: root user</strong></p>
<ul>
<li><h4 id="1-7-1-create-install-file"><a href="#1-7-1-create-install-file" class="headerlink" title="1.7.1 create install file"></a>1.7.1 create install file</h4><p>  <strong>==&gt;</strong> vim /etc/oraInst.loc</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">inventory_loc=/usr/local/oracle_about/app/oracle/oraInventory</span><br><span class="line">inst_group=oinstall</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="1-7-2-change-user-and-authority-of-the-install-location-describe-file"><a href="#1-7-2-change-user-and-authority-of-the-install-location-describe-file" class="headerlink" title="1.7.2 change user and authority of the install location describe file"></a>1.7.2 change user and authority of the install location describe file</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:chown oracle:oinstall /etc/oraInst.loc</span><br><span class="line">~:chmod 664 /etc/oraInst.loc</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="1-8-config-oracle-environment-variables"><a href="#1-8-config-oracle-environment-variables" class="headerlink" title="1.8 config oracle environment variables"></a><strong>1.8 config oracle environment variables</strong></h3><p><strong>Note: oracle user</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">su - oracle</span><br></pre></td></tr></table></figure>
<ul>
<li><h4 id="1-8-1-config-bash-profile"><a href="#1-8-1-config-bash-profile" class="headerlink" title="1.8.1 config ~/.bash_profile"></a>1.8.1 config ~/.bash_profile</h4><p>  <strong>==&gt;</strong> vim ~/.bash_profile</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">export ORACLE_BASE=/usr/local/oracle_about/app/oracle</span><br><span class="line">export ORACLE_SID=orcl</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="1-8-2-make-it-effective"><a href="#1-8-2-make-it-effective" class="headerlink" title="1.8.2 make it effective"></a>1.8.2 make it effective</h4><p>  <code>~:source .bash_profile</code></p>
</li>
<li><h4 id="1-8-3-check-the-environment-variables"><a href="#1-8-3-check-the-environment-variables" class="headerlink" title="1.8.3 check the environment variables"></a>1.8.3 check the environment variables</h4><p>  <code>~:env</code></p>
</li>
</ul>
<h3 id="1-9-unzip-install-binary-file"><a href="#1-9-unzip-install-binary-file" class="headerlink" title="1.9 unzip install binary file"></a><strong>1.9 unzip install binary file</strong></h3><p><strong>Note: root user</strong></p>
<p><strong>==&gt;</strong><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:chown oracle:oinstall 1of2.zip</span><br><span class="line">~:chown oracle:oinstall 2of2.zip</span><br></pre></td></tr></table></figure></p>
<p><strong>Note: oracle user</strong></p>
<p>unzip to /home/oracle<br>then you can see /home/oracle/database</p>
<h3 id="1-10-copy-reponse-template"><a href="#1-10-copy-reponse-template" class="headerlink" title="1.10 copy reponse template"></a><strong>1.10 copy reponse template</strong></h3><p><strong>Note: oracle user</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:mkdir etc</span><br><span class="line">~:cp ~/database/response/* ~/etc</span><br><span class="line"># change authority</span><br><span class="line">~:chmod 700 /home/oracle/etc/*.rsp</span><br></pre></td></tr></table></figure>
<h3 id="1-11-config-reponse-template"><a href="#1-11-config-reponse-template" class="headerlink" title="1.11 config reponse template"></a><strong>1.11 config reponse template</strong></h3><p><strong>Note: oracle user</strong></p>
<p><strong>==&gt;</strong> vim /home/oracle/etc/db_install.rsp<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">oracle.install.option=INSTALL_DB_SWONLY // line 29, install type</span><br><span class="line"></span><br><span class="line">ORACLE_HOSTNAME=xx12ab4OB21xN // line 37, your hostname, use command hostname to get</span><br><span class="line">UNIX_GROUP_NAME=oinstall // line 42, user&apos;s group</span><br><span class="line"></span><br><span class="line">INVENTORY_LOCATION=/u01/app/oracle/oraInventory // line 47, INVENTORY derectory</span><br><span class="line"></span><br><span class="line">SELECTED_LANGUAGES=en,zh_CN,zh_TW // line 78, language</span><br><span class="line"></span><br><span class="line">ORACLE_HOME=/u01/app/oracle/product/11.2.0/db_1 // line 83, oracle_home</span><br><span class="line"></span><br><span class="line">ORACLE_BASE=/u01/app/oracle // line 88, oracle_base</span><br><span class="line"></span><br><span class="line">oracle.install.db.InstallEdition=EE // line 99, oracle version</span><br><span class="line"></span><br><span class="line">oracle.install.db.isCustomInstall=true // line 108, true means you can custom some configrations</span><br><span class="line"></span><br><span class="line">oracle.install.db.DBA_GROUP=dba // line 142,  dba group</span><br><span class="line"></span><br><span class="line">oracle.install.db.OPER_GROUP=oinstall // line 147,  oper group</span><br><span class="line"></span><br><span class="line">oracle.install.db.config.starterdb.type=GENERAL_PURPOSE // line 160,  db type</span><br><span class="line"></span><br><span class="line">oracle.install.db.config.starterdb.globalDBName=orcl // line 165,  global DBName</span><br><span class="line"></span><br><span class="line">oracle.install.db.config.starterdb.SID=orcl // line 170, SID</span><br><span class="line"></span><br><span class="line">oracle.install.db.config.starterdb.memoryLimit=512 // line 192, min ram use</span><br><span class="line"></span><br><span class="line">oracle.install.db.config.starterdb.password.ALL=oracle // line 233, all dba user password</span><br><span class="line"></span><br><span class="line">DECLINE_SECURITY_UPDATES=true // line 385, security updates</span><br></pre></td></tr></table></figure></p>
<h2 id="2-install-oracle"><a href="#2-install-oracle" class="headerlink" title="2. install oracle"></a><strong>2. install oracle</strong></h2><h3 id="2-1-install-oracle"><a href="#2-1-install-oracle" class="headerlink" title="2.1 install oracle"></a><strong>2.1 install oracle</strong></h3><ul>
<li><h4 id="2-1-1-oracle-user"><a href="#2-1-1-oracle-user" class="headerlink" title="2.1.1 oracle user"></a>2.1.1 oracle user</h4><ol>
<li><p>install</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:cd database</span><br><span class="line">~:./runInstaller -silent -responseFile /home/oracle/etc/db_install.rsp</span><br><span class="line"># installer will install in background, you can see logs </span><br><span class="line">~:cd /usr/local/oracle_about/app/oracle/oraInventory</span><br><span class="line">~:tail -100f installActions*.log</span><br></pre></td></tr></table></figure>
</li>
<li><p>susccsful log</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"></span><br><span class="line">To execute the configuration scripts:</span><br><span class="line"></span><br><span class="line">1. Open a terminal window </span><br><span class="line"></span><br><span class="line">2. Log in as &quot;root&quot; </span><br><span class="line"></span><br><span class="line">3. Run the scripts </span><br><span class="line"></span><br><span class="line">4. Return to this window and hit &quot;Enter&quot; key to continue</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Successfully Setup Software.</span><br></pre></td></tr></table></figure>
</li>
<li><p>root.sh</p>
<p><strong>Note: root user</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:cd /usr/local/oracle_about/app/oracle/product/11.2.0/db_1</span><br><span class="line">~:./root.sh</span><br></pre></td></tr></table></figure>
</li>
</ol>
</li>
</ul>
<h3 id="2-2-config-oracle-environment-variables"><a href="#2-2-config-oracle-environment-variables" class="headerlink" title="2.2 config oracle environment variables"></a><strong>2.2 config oracle environment variables</strong></h3><p><strong>Note: oracle user</strong></p>
<p><strong>==&gt;</strong> vim ~/.bash_profile<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">export ORACLE_HOME=$ORACLE_BASE/product/11.2.0/db_1</span><br><span class="line"></span><br><span class="line">export TNS_ADMIN=$ORACLE_HOME/network/admin</span><br><span class="line"></span><br><span class="line">export PATH=.:$&#123;PATH&#125;:$HOME/bin:$ORACLE_HOME/bin</span><br><span class="line"></span><br><span class="line">export PATH=$&#123;PATH&#125;:/usr/bin:/bin:/usr/bin/X11:/usr/local/bin</span><br><span class="line"></span><br><span class="line">export LD_LIBRARY_PATH=$&#123;LD_LIBRARY_PATH&#125;:$ORACLE_HOME/lib</span><br><span class="line"></span><br><span class="line">export LD_LIBRARY_PATH=$&#123;LD_LIBRARY_PATH&#125;:$ORACLE_HOME/oracm/lib</span><br><span class="line"></span><br><span class="line">export LD_LIBRARY_PATH=$&#123;LD_LIBRARY_PATH&#125;:/lib:/usr/lib:/usr/local/lib</span><br><span class="line"></span><br><span class="line">export CLASSPATH=$&#123;CLASSPATH&#125;:$ORACLE_HOME/JRE</span><br><span class="line"></span><br><span class="line">export CLASSPATH=$&#123;CLASSPATH&#125;:$ORACLE_HOME/JRE/lib</span><br><span class="line"></span><br><span class="line">export CLASSPATH=$&#123;CLASSPATH&#125;:$ORACLE_HOME/jlib</span><br><span class="line"></span><br><span class="line">export CLASSPATH=$&#123;CLASSPATH&#125;:$ORACLE_HOME/rdbms/jlib</span><br><span class="line"></span><br><span class="line">export CLASSPATH=$&#123;CLASSPATH&#125;:$ORACLE_HOME/network/jlib</span><br><span class="line"></span><br><span class="line">export LIBPATH=$&#123;CLASSPATH&#125;:$ORACLE_HOME/lib:$ORACLE_HOME/ctx/lib</span><br><span class="line"></span><br><span class="line">export ORACLE_OWNER=oracle</span><br><span class="line"></span><br><span class="line">export SPFILE_PATH=$ORACLE_HOME/dbs</span><br><span class="line"></span><br><span class="line">export ORA_NLS10=$ORACLE_HOME/nls/data</span><br></pre></td></tr></table></figure></p>
<p><strong>==&gt;</strong> source ~/.bash_profile</p>
<h3 id="2-3-config-listening"><a href="#2-3-config-listening" class="headerlink" title="2.3 config listening"></a><strong>2.3 config listening</strong></h3><p><strong>Note: oracle user</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:$ORACLE_HOME/bin/netca /silent /responseFile /home/oracle/etc/netca.rsp</span><br></pre></td></tr></table></figure>
<h3 id="2-4-create-database"><a href="#2-4-create-database" class="headerlink" title="2.4 create database"></a><strong>2.4 create database</strong></h3><p><strong>Note: oracle user</strong></p>
<ul>
<li><h4 id="2-4-1-config-template"><a href="#2-4-1-config-template" class="headerlink" title="2.4.1 config template"></a>2.4.1 config template</h4><p>  <strong>==&gt;</strong> vim /home/oracle/etc/dbca.rsp</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GDBNAME=&quot;orcl.java-linux-test&quot; // line 78, service_name=SID+hostname</span><br><span class="line"></span><br><span class="line">SID=&quot;orcl&quot; // line 149, SID</span><br><span class="line"></span><br><span class="line">CHARACTERSET=&quot;AL32UTF8&quot; // line 415, charset</span><br><span class="line"></span><br><span class="line">NATIONALCHARACTERSET=&quot;UTF8&quot; // line 425, charset</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-4-2-create"><a href="#2-4-2-create" class="headerlink" title="2.4.2 create"></a>2.4.2 create</h4><p>  $ORACLE_HOME/bin/dbca -silent -responseFile /home/oracle/dbca.rsp</p>
</li>
<li><h4 id="2-4-3-get-result"><a href="#2-4-3-get-result" class="headerlink" title="2.4.3 get result"></a>2.4.3 get result</h4><p>  ps -ef | grep ora_ | grep -v grep | wc -l</p>
</li>
</ul>
<h3 id="2-5-start-listening"><a href="#2-5-start-listening" class="headerlink" title="2.5 start listening"></a><strong>2.5 start listening</strong></h3><p><strong>Note: oracle user</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:cd /usr/local/oracle_about/app/oracle/product/11.2.0/db_1/bin</span><br><span class="line">~:lsnrctl status</span><br><span class="line">~:lsnrctl start</span><br></pre></td></tr></table></figure>
<h3 id="2-6-using-dbstart-and-dbshut-to-contol-listening"><a href="#2-6-using-dbstart-and-dbshut-to-contol-listening" class="headerlink" title="2.6 using dbstart and dbshut to contol listening"></a><strong>2.6 using <code>dbstart</code> and <code>dbshut</code> to contol listening</strong></h3><p><strong>Note: oracle user</strong></p>
<p><strong>==&gt;</strong> vim /etc/oratab</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">racl:/u01/app/oracle/product/11.2.0/db_1:Y // N becomes Y</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:cd /usr/local/oracle_about/app/oracle/product/11.2.0/db_1/bin</span><br><span class="line">~:dbstart $ORACLE_HOME</span><br><span class="line">~:dbshut	$ORACLE_HOME</span><br><span class="line">~:lsnrctl status</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>oracle</category>
      </categories>
      <tags>
        <tag>centos</tag>
        <tag>oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>oracle operation</title>
    <url>/2019/07/31/oracle/oracle-operation/</url>
    <content><![CDATA[<p>oracle数据库常用操作。远程登录，授权和表空间。</p>
<a id="more"></a>
<h3 id="1-oracle-user"><a href="#1-oracle-user" class="headerlink" title="1. oracle user"></a><strong>1. oracle user</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">su - oracle</span><br></pre></td></tr></table></figure>
<h3 id="2-local-login-as-dba"><a href="#2-local-login-as-dba" class="headerlink" title="2. local login as dba"></a><strong>2. local login as dba</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sqlplus / as sysdba</span><br></pre></td></tr></table></figure>
<h3 id="3-common-login"><a href="#3-common-login" class="headerlink" title="3. common login"></a><strong>3. common login</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sqlplus user/password</span><br></pre></td></tr></table></figure>
<h3 id="4-remote-login"><a href="#4-remote-login" class="headerlink" title="4. remote login"></a><strong>4. remote login</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sqlplus user/password@ip:port/service_name</span><br></pre></td></tr></table></figure>
<h3 id="5-create-user-and-grant"><a href="#5-create-user-and-grant" class="headerlink" title="5. create user and grant"></a><strong>5. create user and grant</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create user user1 identified by 123456;</span><br><span class="line">alter user user1 default tablespace user1_ts;</span><br><span class="line">create user user1 identified by 123456 default tablespace user1_ts;</span><br><span class="line">grant connect,resource,dba to user1;</span><br><span class="line">drop user user1 cascade;</span><br></pre></td></tr></table></figure>
<h3 id="6-table-space"><a href="#6-table-space" class="headerlink" title="6. table space"></a><strong>6. table space</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create tablespace user1_ts datafile &apos;oracle_home/oradata/user1_ts.dbf&apos; size 300m autoextend on;</span><br><span class="line">select * from v$tablespace;</span><br><span class="line">select * from sys.dba_tablespaces;</span><br><span class="line">select count(*) from sys.v_$session；</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>oracle</category>
      </categories>
      <tags>
        <tag>oralce</tag>
      </tags>
  </entry>
  <entry>
    <title>oracle11g在windows上安装</title>
    <url>/2019/07/29/oracle/oracle11g%E5%9C%A8windows%E4%B8%8A%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<p>oracle11g 在 windows上的安装。<br>用户表空间，权限查看。<br>navicat oci(oracle client instant)配置。</p>
<a id="more"></a>
<h2 id="windows"><a href="#windows" class="headerlink" title="windows"></a><strong>windows</strong></h2><h4 id="1-服务器搭建"><a href="#1-服务器搭建" class="headerlink" title="1. 服务器搭建"></a><strong>1. 服务器搭建</strong></h4><p>安装相对简单<br>此处记录下安装之后的操作</p>
<ul>
<li><h5 id="1-1-使用net-configuration-assistant配置远程监听，这样远程客户端就能连接这台服务器，具体可以看其他教程"><a href="#1-1-使用net-configuration-assistant配置远程监听，这样远程客户端就能连接这台服务器，具体可以看其他教程" class="headerlink" title="1.1 使用net configuration assistant配置远程监听，这样远程客户端就能连接这台服务器，具体可以看其他教程"></a>1.1 使用net configuration assistant配置远程监听，这样远程客户端就能连接这台服务器，具体可以看其他教程</h5></li>
<li><h5 id="1-2-开启OMF功能，创建表空间时会自动指定文件位置和大小。如何开启可以参考create-tablespace的缺少子句的问题，因为不开omf直接创建表空间会不指定位置与大小会报错。"><a href="#1-2-开启OMF功能，创建表空间时会自动指定文件位置和大小。如何开启可以参考create-tablespace的缺少子句的问题，因为不开omf直接创建表空间会不指定位置与大小会报错。" class="headerlink" title="1.2 开启OMF功能，创建表空间时会自动指定文件位置和大小。如何开启可以参考create tablespace的缺少子句的问题，因为不开omf直接创建表空间会不指定位置与大小会报错。"></a>1.2 开启OMF功能，创建表空间时会自动指定文件位置和大小。如何开启可以参考create tablespace的缺少子句的问题，因为不开omf直接创建表空间会不指定位置与大小会报错。</h5>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看是否开启：show parameter db_create_file_dest;</span><br><span class="line">开启：alter system set db_create_file_dest=&apos;/oracle/oradata&apos;;</span><br><span class="line">注意指定的目录要存在，可以是基目录的oradata，或者数据库目录。</span><br><span class="line">创建表空间：create tablespace myts;</span><br><span class="line">查看表空间：select TABLESPACE_NAME from dba_tablespaces;</span><br></pre></td></tr></table></figure>
</li>
<li><h5 id="1-3-创建用户赋权限，并指定表空间"><a href="#1-3-创建用户赋权限，并指定表空间" class="headerlink" title="1.3 创建用户赋权限，并指定表空间"></a>1.3 创建用户赋权限，并指定表空间</h5><p>  CREATE USER NEWUSER IDENTIFIED BY BD123  DEFAULT TABLESPACE DB_DATA;<br>  修改用户默认表空间：alter user wy2014 default tablespace mytds01;<br>  grant connect, resource to user;<br>  grant dba to user;<br>  查看用户和默认表空间：select   username,default_tablespace   from   dba_users;<br>  查看当前用户的表：select table_name from user_tables;<br>  查看所有用户的表：select table_name  from all_tables;</p>
<ul>
<li><h6 id="1-3-1-查看所有用户："><a href="#1-3-1-查看所有用户：" class="headerlink" title="1.3.1 查看所有用户："></a>1.3.1 查看所有用户：</h6><pre><code>select * from dba_user;
select * from all_users;
select * from user_users;
</code></pre></li>
<li><h6 id="1-3-2-查看用户系统权限："><a href="#1-3-2-查看用户系统权限：" class="headerlink" title="1.3.2 查看用户系统权限："></a>1.3.2 查看用户系统权限：</h6><pre><code>select * from dba_sys_privs;
select * from all_sys_privs;
select * from user_sys_privs;
</code></pre></li>
<li><h6 id="1-3-3-查看用户对象权限："><a href="#1-3-3-查看用户对象权限：" class="headerlink" title="1.3.3 查看用户对象权限："></a>1.3.3 查看用户对象权限：</h6><pre><code>select * from dba_tab_privs;
select * from all_tab_privs;
select * from user_tab_privs;
</code></pre></li>
<li><h6 id="1-3-4-查看所有角色："><a href="#1-3-4-查看所有角色：" class="headerlink" title="1.3.4 查看所有角色："></a>1.3.4 查看所有角色：</h6><pre><code>select * from dba_roles;
</code></pre></li>
<li><h6 id="1-3-5-查看用户所拥有的角色："><a href="#1-3-5-查看用户所拥有的角色：" class="headerlink" title="1.3.5 查看用户所拥有的角色："></a>1.3.5 查看用户所拥有的角色：</h6><pre><code>select * from dba_role_privs;
select * from user_role_privs;
</code></pre></li>
<li><h6 id="1-3-6-查看角色所拥有的权限"><a href="#1-3-6-查看角色所拥有的权限" class="headerlink" title="1.3.6 查看角色所拥有的权限:"></a>1.3.6 查看角色所拥有的权限:</h6><pre><code>select * from role_sys_privs;

select * from role_tab_privs;
</code></pre></li>
<li><h6 id="1-3-7-查看所有系统权限"><a href="#1-3-7-查看所有系统权限" class="headerlink" title="1.3.7 查看所有系统权限"></a>1.3.7 查看所有系统权限</h6><pre><code>select * from system_privilege_map;
</code></pre></li>
<li><h6 id="1-3-8-查看所有对象权限"><a href="#1-3-8-查看所有对象权限" class="headerlink" title="1.3.8 查看所有对象权限"></a>1.3.8 查看所有对象权限</h6><pre><code>select * from table_privilege_map;
</code></pre></li>
</ul>
</li>
<li><h5 id="1-4-导入数据"><a href="#1-4-导入数据" class="headerlink" title="1.4 导入数据"></a><strong>1.4 导入数据</strong></h5><p>  建好所需的表空间和用户，因为脚本可能对表空间有要求。<br>  imp username/password@127.0.0.1:1521/orcl file=C:\xx\data.dmp full=y<br>  出现 IMP-00041: 警告: 创建的对象带有编译警告<br>  加上ignore=y<br>  imp username/password@127.0.0.1:1521/orcl file=C:\xx\data.dmp full=y ignore=y<br>  导入完成后，在pl/sql developer里右键出错的视图recompiled。<br>  如果是一个复杂视图或者触发器，问题就大了。如存在其他用户名下的相关调用，可以在导出时简化并重建视图或触发器，或者在新机器上新建相同的用户和表。</p>
</li>
</ul>
<h4 id="2-客户端navicat配置"><a href="#2-客户端navicat配置" class="headerlink" title="2. 客户端navicat配置"></a><strong>2. 客户端navicat配置</strong></h4><p>navicat需要借助instant client连接oracle数据库。navicat自带的有一个instant，但是可能不兼容服务器端的oracle版本。<br>所以首先要确定navicat的位数32还是64，然后要确定服务器上的oracle版本，然后选择合适的instant client下载，然后在navicat的preference里配置下oci就行了。</p>
]]></content>
      <categories>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
        <tag>oracle</tag>
        <tag>navicat</tag>
      </tags>
  </entry>
  <entry>
    <title>cost/loss function</title>
    <url>/2019/07/31/python-machine-learning/cost-loss-function/</url>
    <content><![CDATA[<p>损失函数的引入和证明。</p>
<a id="more"></a>
<h3 id="1-why-cost-function"><a href="#1-why-cost-function" class="headerlink" title="1. why cost function"></a><strong>1. why cost function</strong></h3><p>在 Rosenblatt Perceptron 的训练过程中，输入一次就更新一次模型 θ 。每个<br> iris 样本输入进去，就会得到输出，然后更新权重。<br>样本集共有n个样本，模型会更新n次，再加上外层设置的迭代次数m，模型一共被更新m*n次。然而，最后得到的模型并不一定是最优的结果。虽然可以根据每个模型出错的次数或者可视化的分类结果，人为记录并找到一个接近最优的结果，但是工作量巨大。<br>于是设想，构造一个关于模型 θ 的函数 f(θ) ，当 f(θ) 收敛时，分类结果是最优的，此时的 θ 就是最优的模型。只要这个函数存在，工作量也就转移到了求函数收敛的问题上。 f(θ) 也就是 cost/loss function 的由来。</p>
<h3 id="2-prove-existence"><a href="#2-prove-existence" class="headerlink" title="2. prove existence"></a><strong>2. prove existence</strong></h3><p>既然需要这样一个函数，那就要证明它的确存在。<br>Frank Rosenblatt从数学上证明了只要两个类别能够被一个线性超平面分开，则感知机算法一定能够收敛。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">线性超平面是一个几何体，可以用方程表示，</span><br><span class="line">超平面的自由度比所在n维空间低一个维度，即给定n-1个轴的坐标，可以确定剩下一个轴的坐标。</span><br><span class="line">方程是线性的: 是空间点的各分量的线性组合</span><br><span class="line">方程数量为1</span><br><span class="line">在三维坐标系中，三个轴坐标值的线性组合确定一个超平面即平面</span><br><span class="line">                Ax+By+Cz+D=0，A,B,C,D为常数</span><br><span class="line">在平面直角坐标系中，超平面变成了直线</span><br><span class="line">                Ax+By+C=0</span><br><span class="line">推广到n维空间，就统一叫做超平面。</span><br></pre></td></tr></table></figure></p>
<p>模型就是为了分类，所以从结果可知，如果算法能有效分类，算法自然就会收敛。</p>
<h3 id="3-cost-function定义"><a href="#3-cost-function定义" class="headerlink" title="3. cost function定义"></a><strong>3. cost function定义</strong></h3><p>接下来看损失函数的定义</p>
<p>如何量化一个模型的好坏，在单个样本上是结果与真实值越小越好，在整个样本集上也是这样（可以是对单个样本差值求和的结果）。</p>
<p>求样本集结果差值的函数就是损失函数。损失函数的选择很重要。</p>
<p>到目前为止，已经产生了 拟合函数 激活函数 损失函数。损失函数的定义可以看出它的确是一个关于模型(拟合函数)的函数。</p>
<p>综上，对损失函数的求收敛就对应最优化模型</p>
<h3 id="4-构造函数的出现对激活函数的影响"><a href="#4-构造函数的出现对激活函数的影响" class="headerlink" title="4. 构造函数的出现对激活函数的影响"></a><strong>4. 构造函数的出现对激活函数的影响</strong></h3><p>在感知机算法中，激活函数是阶跃函数，它的一个特点是结果单一（收敛），但是缺点是不够连续，很多概率类问题并不是非黑即白的结果。所以引入了具有连续性但又类似阶跃函数的收敛函数，比如logistic函数。​​</p>
]]></content>
      <categories>
        <category>python machine learning</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>machine learning</tag>
        <tag>cost function</tag>
        <tag>损失函数</tag>
      </tags>
  </entry>
  <entry>
    <title>从Perceptron到Logistic</title>
    <url>/2019/07/31/python-machine-learning/%E4%BB%8EPerceptron%E5%88%B0Logistic/</url>
    <content><![CDATA[<p>激活函数的变化，从阶跃函数到logistic。</p>
<a id="more"></a>
<h3 id="1-最开始学习的单细胞模型——感知机"><a href="#1-最开始学习的单细胞模型——感知机" class="headerlink" title="1. 最开始学习的单细胞模型——感知机"></a><strong>1. 最开始学习的单细胞模型——感知机</strong></h3><p>（1）构建的线性超平面直接作为激活值<br>（2）每次输入一个样本更新一次模型<br>（3）权重增量 (y<em>实 - y</em>预)</p>
<h3 id="2-然后是Adaline"><a href="#2-然后是Adaline" class="headerlink" title="2. 然后是Adaline"></a><strong>2. 然后是Adaline</strong></h3><p>（1）一个样本集更新一次模型，因此定义了一个训练集的损失函数<br>（2）使用差平方和作为构成损失函数<br>（3）权重增量使用（- 学习率 * 损失函数增量），所以要对损失函数求偏导来求权重增量；而随着权重的变化，损失函数收敛时，即得到最优模型。使用梯度下降寻找收敛，同时就能的得到最优模型<br>（4）使用梯度下降求收敛，而不使用驻点，因为导数的解析解不好求，并且导数求出的解不一定是方程的解。<br>（5）使用随机梯度下降，快速收敛。具体就是每输入一个样本（作者：可能是说整个训练样本集）就更新一次模型。也可以把训练集拆分成更小的子集，每个子集更新一次模型。</p>
<h3 id="3-现在是Logistic"><a href="#3-现在是Logistic" class="headerlink" title="3. 现在是Logistic"></a><strong>3. 现在是Logistic</strong></h3><p>（1）使用sigmoid这样的激活函数，函数图像是连续可导的。取代了之前的阶跃函数<br>（2）激活函数求出的是一个预测概率且是一个后验概率p，关于使用后验概率的事以后证明。此处定义了一个logit(p)=log(p/(1-p))=z, 与激活函数互为反函数。p=phi(z)<br>（3）在后验概率基础上构造出预测结果的表达式——可以看做是单个样本的似然函数，以此构造出整个训练集的似然函数——对预测结果求和，然后使用最大似然估计法求出似然函数最大值，它对应最大模型。怎么求最大似然，由于变量和它的对数函数单调性相同，那么似然函数的的最大值必然对应它的负对数的收敛。所以使用似然函数的负对数求收敛。而这个负对数就是损失函数——J(w)<br>（4）为什么使用最大似然。可以从单个样本来看，由于sigmoid函数值(0,1)。<br>根据单个似然函数的表达式定义可以有如下解释<br>如果label=1，J(w) = -log(phi)<br>预测正确时sigmoid趋近于1， -log(sigmoid)=-log(sigmoid=&gt;1)=&gt;0，收敛。<br>预测错误时sigmoid趋近0， -log(sigmoid)=-log(sigmoid=&gt;0)=&gt;正无穷。<br>如果label=0， J(w) = -log(1-phi)<br>预测正确时sigmoid趋近0， -log(1-(sigmoid=&gt;0))=&gt;-log(1)=&gt;0，收敛。<br>预测错误时sigmoid趋近1，-log(1-(sigmoid=&gt;1))=&gt;-log(0)=&gt;正无穷。<br>综上，如果预测都趋向于正确，则损失函数收敛，那么就能找到最优模型。</p>
]]></content>
      <categories>
        <category>python machine learning</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>machine learning</tag>
      </tags>
  </entry>
  <entry>
    <title>梯度下降</title>
    <url>/2019/08/01/python-machine-learning/%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D/</url>
    <content><![CDATA[<p>文章简介</p>
<a id="more"></a>
<h3 id="1-梯度"><a href="#1-梯度" class="headerlink" title="1. 梯度"></a><strong>1. 梯度</strong></h3><p>每个特征的偏微分构成的向量就是梯度。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">grad = &lt;f&apos;(x),f&apos;(y),f&apos;(z)...&gt;</span><br></pre></td></tr></table></figure></p>
<p>对于 一元函数 grad 就是导数，对于多元函数grad就是各个偏导组成的向量。</p>
<h3 id="2-梯度下降"><a href="#2-梯度下降" class="headerlink" title="2. 梯度下降"></a><strong>2. 梯度下降</strong></h3><p>梯度负方向函数下降最快。</p>
<p>证明需要微分和泰勒展开式。</p>
<p>假设二元函数 z = f(x,y) 或 z = f(M), M表示(x,y)</p>
<p>假设当前点是M， N点是M点附近很近的一点， l是M到N各个特征变化量的向量(dx,dy)。</p>
<p><code>f(N) = f(M+l)</code></p>
<p><code>f(N) - f(M) =  f&#39;(x)dx+f&#39;(y)dy+o(||l||^2)=grad * l + o(||l||^2)</code></p>
<p>推广到n维空间<br><code>f(N) - f(M) =  f&#39;(x1)dx1+f&#39;(x2)dx2+...+f&#39;(xn)dxn+o(||l||^n)=sum(f&#39;(x)dx)+o = grad * l + o(||l||^2)</code></p>
<p>而<code>o</code>，由于两点非常接近，距离可以忽略</p>
<p>则表达式可以简化成 <code>grad * l</code>，grad在某一点的值是确定的，向量的点积最大时就是 grad与l的夹角为0，那么此时函数变化最大，梯度负方向也就是下降最快。</p>
]]></content>
      <categories>
        <category>python machine learning</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
        <tag>梯度下降</tag>
      </tags>
  </entry>
  <entry>
    <title>ansible (2) simple usage</title>
    <url>/2019/07/31/python3/ansible-2-simple-usage/</url>
    <content><![CDATA[<p>ansible的简单示例</p>
<a id="more"></a>
<p>(1) hosts group</p>
<p>服务器配置</p>
<ul>
<li><p>/etc/ansible/hosts</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[group_name1]</span><br><span class="line">host_ip1 [ansible_ssh_user=] [ansible_ssh_pass=]</span><br><span class="line">host_ip2</span><br><span class="line"></span><br><span class="line">[group_name1]</span><br><span class="line">ansible_ssh_user=</span><br><span class="line">ansible_ssh_pass=</span><br></pre></td></tr></table></figure>
<p>  以上配置 指定了一组服务器, 默认ssh用户信息可在组名下另行配置,单独的host用户信息则在同行配置</p>
</li>
</ul>
<p>(2) command format</p>
<p>命令格式<br><code>ansible ip/group -m module_name -a arg</code><br>其中ip可以是某个具体的ip, group则是组名,使用group将会对组内所有服务器执行相同操作<br>-m 指定要运行的功能模块, module_name就是功能模块的名字<br>-a 为要运行的功能模块传入参数</p>
<p>(3) specify ip collection</p>
<p>以ping为例<br>-i 表示自行制定host文件,而不用默认的/etc/ansible/hosts<br><code>ansible all -i ./hosts -m ping</code></p>
]]></content>
      <categories>
        <category>python3</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>python3</tag>
        <tag>ansible</tag>
        <tag>ssh</tag>
      </tags>
  </entry>
  <entry>
    <title>ansible (1) install by pip</title>
    <url>/2019/07/31/python3/ansible-1-install-by-pip/</url>
    <content><![CDATA[<p>ansible也是一款高级ssh操作的包。<br>ansible的优点是，不需要写python脚本，友好的文本输出，可回滚。<br>使用yaml编写任务内容，这在ansible里称为剧本。</p>
<a id="more"></a>
<p>(1) install ansible</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo pip3 install ansible</span><br></pre></td></tr></table></figure>
<p>(2) use ssh pass</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo apt-get install sshpass</span><br></pre></td></tr></table></figure>
<p>(3) create /etc/ansible/hosts</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo mkdir -p /etc/ansible</span><br></pre></td></tr></table></figure>
<ul>
<li><p>/etc/ansible/hosts</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[test]</span><br><span class="line">192.168.0.100  ansible_ssh_user=root  ansible_ssh_pass=root123</span><br><span class="line"></span><br><span class="line">[server1]</span><br><span class="line">192.168.0.101 ansible_ssh_user=root  ansible_ssh_pass=root123</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>(4) usage ping</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:ansible test -m ping</span><br><span class="line">192.168.0.100 | SUCCESS =&gt; &#123;</span><br><span class="line">    &quot;changed&quot;: false,</span><br><span class="line">    &quot;ping&quot;: &quot;pong&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">~:ansible all -m ping</span><br><span class="line">192.168.0.100 | SUCCESS =&gt; &#123;</span><br><span class="line">    &quot;changed&quot;: false,</span><br><span class="line">    &quot;ping&quot;: &quot;pong&quot;</span><br><span class="line">&#125;</span><br><span class="line">192.168.0.101 | SUCCESS =&gt; &#123;</span><br><span class="line">    &quot;changed&quot;: false,</span><br><span class="line">    &quot;ping&quot;: &quot;pong&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>python3</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>python3</tag>
        <tag>ansible</tag>
        <tag>ssh</tag>
      </tags>
  </entry>
  <entry>
    <title>ansible (3) install by apt</title>
    <url>/2019/07/31/python3/ansible-3-install-by-apt/</url>
    <content><![CDATA[<p>使用apt安装ansible。</p>
<a id="more"></a>
<p>(1) install<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo apt-get install ansible</span><br></pre></td></tr></table></figure></p>
<p>(2) use ssh passwords<br>缺少模块导致不支持ssh登录需要安装sshpass模块<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo apt-get install sshpass</span><br></pre></td></tr></table></figure></p>
<p>(3) skip host checking 跳过首次连接检查</p>
<ul>
<li>/etc/ansible/ansible.cfg<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">host_key_checking = False</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>python3</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>python3</tag>
        <tag>ansible</tag>
        <tag>ssh</tag>
      </tags>
  </entry>
  <entry>
    <title>ansible (4) playbooks</title>
    <url>/2019/07/31/python3/ansible-4-playbooks/</url>
    <content><![CDATA[<p>剧本是ansible最重要的概念。<br>剧本定义了所有远端操作的内容。</p>
<a id="more"></a>
<p>(1) playbooks 剧本</p>
<p>所有要执行的操作流程写到playbooks<br>ansible会为指定的服务器执行playbooks里的所有操作</p>
<p>(2) playbooks 内容</p>
<ul>
<li><p>local.yml</p>
  <figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">- hosts:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"><span class="attr">connection:</span> <span class="string">local</span></span><br><span class="line"><span class="attr">vars:</span></span><br><span class="line"><span class="attr">    project_name:</span> <span class="string">xxx</span></span><br><span class="line"><span class="attr">    project_dir:</span> <span class="string">xxx</span></span><br><span class="line"><span class="attr">    mvn_settings_dir:</span> <span class="string">xxx</span></span><br><span class="line"><span class="attr">    module_dir_name:</span> <span class="string">xxx</span></span><br><span class="line"><span class="attr">tasks:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">build</span> <span class="string">file</span></span><br><span class="line"><span class="attr">    shell:</span> <span class="string">mvn</span> <span class="bullet">-s</span> <span class="string">&#123;&#123;mvn_settings_dir&#125;&#125;</span> <span class="bullet">-f</span> <span class="string">&#123;&#123;project_dir&#125;&#125;/&#123;&#123;module_dir_name&#125;&#125;/pom.xml</span> <span class="string">clean</span> <span class="string">compile</span> <span class="string">package</span> <span class="bullet">-DskipTests</span></span><br><span class="line"><span class="attr">    register:</span> <span class="string">mvnInfo</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">print</span> <span class="string">package</span></span><br><span class="line"><span class="attr">    debug:</span> <span class="string">var=mvnInfo.stdout_lines</span> <span class="string">verbosity=0</span></span><br></pre></td></tr></table></figure>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:ansible-playbook -i ../hosts local.yml</span><br></pre></td></tr></table></figure>
</li>
<li><p>remote.yml</p>
  <figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">- hosts:</span> <span class="string">'<span class="template-variable">&#123;&#123;profile&#125;&#125;</span>'</span></span><br><span class="line"><span class="attr">vars:</span></span><br><span class="line"><span class="attr">    project_name:</span> <span class="string">xxx</span></span><br><span class="line"><span class="attr">    project_dir:</span> <span class="string">xxx</span></span><br><span class="line"><span class="attr">    mvn_settings_dir:</span> <span class="string">xxx</span></span><br><span class="line"><span class="attr">    module_dir_name:</span> <span class="string">xxxx</span></span><br><span class="line"><span class="attr">    file_name:</span> <span class="string">xxx</span></span><br><span class="line"><span class="attr">tasks:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">file</span> <span class="string">exist</span> <span class="string">test</span></span><br><span class="line"><span class="attr">    shell:</span> <span class="string">test</span> <span class="bullet">-e</span> <span class="string">&#123;&#123;upload_dir&#125;&#125;/&#123;&#123;file_name&#125;&#125;;echo</span> <span class="string">$?</span></span><br><span class="line"><span class="attr">    register:</span> <span class="string">outputInfo</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">get</span> <span class="string">format</span> <span class="string">time</span></span><br><span class="line"><span class="attr">    shell:</span> <span class="string">date</span> <span class="string">+'%Y-%m-%d-%H-%M-%S'</span></span><br><span class="line"><span class="attr">    register:</span> <span class="string">timeInfo</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">backup</span> <span class="string">file</span> <span class="string">if</span> <span class="string">exist</span></span><br><span class="line"><span class="attr">    shell:</span> <span class="string">mv</span> <span class="string">'<span class="template-variable">&#123;&#123;upload_dir&#125;&#125;</span>/<span class="template-variable">&#123;&#123;file_name&#125;&#125;</span>'</span> <span class="string">'<span class="template-variable">&#123;&#123;upload_dir&#125;&#125;</span>/<span class="template-variable">&#123;&#123;file_name&#125;&#125;</span>.bak.<span class="template-variable">&#123;&#123;timeInfo.stdout&#125;&#125;</span>'</span></span><br><span class="line"><span class="attr">    when:</span> <span class="string">outputInfo.stdout.find("0")!=-1</span></span><br><span class="line"><span class="attr">    register:</span> <span class="string">backupInfo</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">print</span> <span class="string">backup</span> <span class="string">process</span> <span class="string">info</span></span><br><span class="line"><span class="attr">    debug:</span> <span class="string">var=backupInfo</span> <span class="string">verbosity=0</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">upload</span> <span class="string">file</span></span><br><span class="line"><span class="attr">    copy:</span> </span><br><span class="line"><span class="attr">        src:</span> <span class="string">'<span class="template-variable">&#123;&#123;project_dir&#125;&#125;</span>/<span class="template-variable">&#123;&#123;module_dir_name&#125;&#125;</span>/target/<span class="template-variable">&#123;&#123;file_name&#125;&#125;</span>'</span></span><br><span class="line"><span class="attr">        dest:</span> <span class="string">'<span class="template-variable">&#123;&#123;upload_dir&#125;&#125;</span>'</span></span><br></pre></td></tr></table></figure>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:ansible-playbook -i ../hosts local.yml -e &quot;profile=prod upload_dir=/home/user/upload&quot;</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <categories>
        <category>python3</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>python3</tag>
        <tag>ansible</tag>
        <tag>ssh</tag>
      </tags>
  </entry>
  <entry>
    <title>fabric (1) basic usage</title>
    <url>/2019/07/31/python3/fabric-1-basic-usage/</url>
    <content><![CDATA[<p>本文介绍了fabric基础用法。<br>fabric是一个python ssh操作的包。它比paramiko更方便和高级。</p>
<a id="more"></a>
<h3 id="1-install-python-module-and-shell"><a href="#1-install-python-module-and-shell" class="headerlink" title="(1) install python module and shell"></a>(1) install python module and shell</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">~:sudo pip3 install fabric</span><br><span class="line">~:sudo apt-get fabric</span><br></pre></td></tr></table></figure>
<h3 id="2-help-and-version"><a href="#2-help-and-version" class="headerlink" title="(2) help and version"></a>(2) help and version</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">~:fab -h</span><br><span class="line">~:fab -V</span><br></pre></td></tr></table></figure>
<h3 id="3-tasks"><a href="#3-tasks" class="headerlink" title="(3) tasks"></a>(3) tasks</h3><ul>
<li><p>fabfile.py</p>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> fabric <span class="keyword">import</span> task</span><br><span class="line"></span><br><span class="line"><span class="meta">@task</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">(c)</span>:</span></span><br><span class="line">print(<span class="string">'hello'</span>)</span><br></pre></td></tr></table></figure>
</li>
<li><p>intro</p>
<p>  <code>from fabric import task</code> is necessary for <code>@task</code>.<br>  <code>hello(c)</code> is a task, it must have a default initial argument here is <code>c</code>.</p>
</li>
<li><p>fab</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">~:fab -l</span><br><span class="line">hello</span><br><span class="line">~:fab hello</span><br><span class="line">hello</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <categories>
        <category>python3</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>python3</tag>
        <tag>ssh</tag>
        <tag>fabric</tag>
      </tags>
  </entry>
  <entry>
    <title>fabric (2) local connection</title>
    <url>/2019/07/31/python3/fabric-2-local-connection/</url>
    <content><![CDATA[<p>fabric connection。<br>connection是建立ssh的基础。<br>本文介绍如何使用connection操作本地（类似于本地的terminal）。</p>
<a id="more"></a>
<p>(1) connection</p>
<p><code>def hello(c):</code> is a task. <code>c</code> is the default argument. In fact, <code>c</code> means a connection. This connection locate at localhost if you don’t config with any host information.</p>
<p>(2) local connection</p>
<ul>
<li><p>fabfile.py</p>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> fabric <span class="keyword">import</span> task</span><br><span class="line"></span><br><span class="line"><span class="meta">@task</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">runLocal</span><span class="params">(c)</span>:</span></span><br><span class="line">c.run(<span class="string">'pwd'</span>)</span><br></pre></td></tr></table></figure>
</li>
<li><p>fab</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">~:fab runLocal</span><br><span class="line">/home/user01</span><br></pre></td></tr></table></figure>
</li>
<li><p>sudo pass from putty</p>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line">c.run(<span class="string">'sudo ls -a'</span>, pty=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>
</li>
<li><p>sudo pass from config</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from invoke import Responder</span><br><span class="line">...</span><br><span class="line">passconf = Responder(</span><br><span class="line">pattern=r&apos;\[sudo]\ password .*:&apos;,</span><br><span class="line">response=&apos;password\n&apos;,</span><br><span class="line">)</span><br><span class="line">c.run(&apos;sudo ls -a&apos;, pty=True, watchers=[passconf])</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <categories>
        <category>python3</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>python3</tag>
        <tag>ssh</tag>
        <tag>fabric</tag>
      </tags>
  </entry>
  <entry>
    <title>postman send list to SpringBoot</title>
    <url>/2019/07/25/postman/postman-send-list-to-SpringBoot/</url>
    <content><![CDATA[<p>使用postman向springboot的controller发送list参数</p>
<a id="more"></a>
<h3 id="1-postman"><a href="#1-postman" class="headerlink" title="1. postman"></a><strong>1. postman</strong></h3><ul>
<li><h4 id="1-1-Body-gt-form-data"><a href="#1-1-Body-gt-form-data" class="headerlink" title="1.1 Body-&gt;form-data"></a>1.1 Body-&gt;form-data</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">key    value</span><br><span class="line">ids    1</span><br><span class="line">ids    2</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="1-2-send"><a href="#1-2-send" class="headerlink" title="1.2 send"></a>1.2 send</h4></li>
</ul>
<h3 id="2-spring"><a href="#2-spring" class="headerlink" title="2. spring"></a><strong>2. spring</strong></h3><ul>
<li><h4 id="2-1-RequestParam-“ids”"><a href="#2-1-RequestParam-“ids”" class="headerlink" title="2.1 @RequestParam(“ids”)"></a>2.1 @RequestParam(“ids”)</h4>  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@PostMapping</span>(<span class="string">"/testJob"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testJob3</span><span class="params">(@RequestParam(<span class="string">"ids"</span>)</span> List&lt;Integer&gt; ids) </span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>postman</category>
      </categories>
      <tags>
        <tag>spring</tag>
        <tag>postman</tag>
        <tag>Spring Boot</tag>
      </tags>
  </entry>
  <entry>
    <title>fabric (3) remote connection</title>
    <url>/2019/07/31/python3/fabric-3-remote-connection/</url>
    <content><![CDATA[<p>介绍使用connection连接远程服务器并执行简单的命令。</p>
<a id="more"></a>
<p>(1) config connection</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> fabric <span class="keyword">import</span> Connection</span><br><span class="line">...</span><br><span class="line">c = Connection(host=<span class="string">'web1'</span>, user=<span class="string">'deploy'</span>, port=<span class="number">2202</span>)</span><br><span class="line"><span class="comment"># [user@]host[:port] </span></span><br><span class="line"><span class="comment"># c = Connection('deploy@web1:2202')</span></span><br></pre></td></tr></table></figure>
<p>(2) connection with password</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">c = Connection(host=<span class="string">'web1'</span>, user=<span class="string">'deploy'</span>, port=<span class="number">2202</span>, connect_kwargs=&#123;<span class="string">'password'</span>:<span class="string">'pass_word'</span>&#125;)</span><br><span class="line">c.run(<span class="string">'pwd'</span>)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>python3</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>python3</tag>
        <tag>ssh</tag>
        <tag>fabric</tag>
      </tags>
  </entry>
  <entry>
    <title>fabric (4) gateway-a local use a remote to control another remote</title>
    <url>/2019/07/31/python3/fabric-4-gateway-a-local-use-a-remote-to-control-another-remote/</url>
    <content><![CDATA[<p>fabric也支持跳板机。可以连接远程跳板机A并操作远程机器B，实际相当于连接上A，A ssh 连接B。</p>
<a id="more"></a>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> fabric <span class="keyword">import</span> Connection</span><br><span class="line">...</span><br><span class="line">gateway = Connection(host=<span class="string">'remote_pub_host'</span>,user=<span class="string">'root'</span>,port=<span class="string">"22"</span>,connect_kwargs=&#123;<span class="string">'password'</span>:<span class="string">'password'</span>&#125;)</span><br><span class="line">c = Connection(host=<span class="string">'remote_pub_or_private_host'</span>,user=<span class="string">'root'</span>,port=<span class="string">"22"</span>,connect_kwargs=&#123;<span class="string">'password'</span>:<span class="string">'password'</span>&#125;,gateway=gateway)</span><br><span class="line"><span class="keyword">with</span> c.cd(<span class="string">'/home/user'</span>):</span><br><span class="line">  c.run(<span class="string">'echo a&gt;&gt;a.txt'</span>)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>python3</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>python3</tag>
        <tag>ssh</tag>
        <tag>fabric</tag>
      </tags>
  </entry>
  <entry>
    <title>fabric (6) get return</title>
    <url>/2019/07/31/python3/fabric-6-get-return/</url>
    <content><![CDATA[<p>fabric可以获取远程命令执行结果作为返回值。<br>这些返回值可以用做成功判断和回滚操作。</p>
<a id="more"></a>
<p>c.run(‘ls’) will return a result</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Result(stdout=<span class="string">''</span>, stderr=<span class="string">''</span>, encoding=<span class="literal">None</span>, command=<span class="string">''</span>, shell=<span class="string">''</span>, env=<span class="literal">None</span>, exited=<span class="number">0</span>, pty=<span class="literal">False</span>, hide=())</span><br></pre></td></tr></table></figure>
<p>get return like this</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">result = c.run(<span class="string">'echo hello'</span>)</span><br><span class="line">print(<span class="string">'stdout is %s'</span>%result.stdout)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>python3</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>python3</tag>
        <tag>ssh</tag>
        <tag>fabric</tag>
      </tags>
  </entry>
  <entry>
    <title>fabric (5) change directory cd</title>
    <url>/2019/07/31/python3/fabric-5-change-directory-cd/</url>
    <content><![CDATA[<p>fabric提供一些api可以替代常用的命令。<br>本文介绍<code>cd()</code>接口替代<code>cd</code>命令。</p>
<a id="more"></a>
<p>(1) command</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">c.cd(dir)</span><br><span class="line">c.run(&apos;cd /home&apos;)</span><br></pre></td></tr></table></figure>
<p>(2) keep path context<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dir = &apos;/home&apos;</span><br><span class="line">c.run(&apos;pwd&apos;) # /home/user</span><br><span class="line">with c.cd(dir):</span><br><span class="line">  c.run(&apos;pwd&apos;) # /home</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>python3</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>python3</tag>
        <tag>ssh</tag>
        <tag>fabric</tag>
      </tags>
  </entry>
  <entry>
    <title>fabric (8) task collection</title>
    <url>/2019/07/31/python3/fabric-8-task-collection/</url>
    <content><![CDATA[<p>fabric可以通过指定脚本文件运行特定的任务，这样不同的环境就可以执行不同的脚本。</p>
<p>最新版本可能是通过指定文件夹的方式指定运行的脚本目录。<br>在之前的版本里可以直接指定脚本文件。</p>
<a id="more"></a>
<p>(1) collection</p>
<p>collection is a task list like fabfile</p>
<ul>
<li><p>myTasks.py</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@task</span><br><span class="line">def task1(c):</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">@task</span><br><span class="line">def task2(c):</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
</li>
<li><p>fabfile.py</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@task</span><br><span class="line">def task3(c):</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">@task</span><br><span class="line">def task4(c):</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>(2) specify collection</p>
<p>use <code>-c</code> to specify a task collection<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:fab -l</span><br><span class="line">task3</span><br><span class="line">task4</span><br><span class="line"></span><br><span class="line">~:fab -c myTasks -l</span><br><span class="line">task1</span><br><span class="line">task2</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>python3</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>python3</tag>
        <tag>ssh</tag>
        <tag>fabric</tag>
      </tags>
  </entry>
  <entry>
    <title>yield</title>
    <url>/2019/07/31/python3/yield/</url>
    <content><![CDATA[<p>python yield关键字用法</p>
<a id="more"></a>
<p>一个函数可以返回一个序列（字符串，列表，元组）。如果返回的序列很大，就会非常吃内存。<br>此时可以使用<code>yield</code>来节省内存。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fibonacci</span><span class="params">(n)</span>:</span> <span class="comment"># 生成器函数 - 斐波那契</span></span><br><span class="line">    a, b, counter = <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">if</span> (counter &gt; n): </span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">yield</span> a</span><br><span class="line">        a, b = b, a + b</span><br><span class="line">        counter += <span class="number">1</span></span><br><span class="line">f = fibonacci(<span class="number">10</span>) <span class="comment"># f 是一个迭代器，由生成器返回生成</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">print</span> (next(f), end=<span class="string">" "</span>)</span><br><span class="line">    <span class="keyword">except</span> StopIteration:</span><br><span class="line">        sys.exit()</span><br></pre></td></tr></table></figure>
<p>0自增100次，需要对每次自增的结果做处理。<br>写一个自增函数，在函数里把参数+1返回结果。调用这个函数，处理结果，重复100次。<br>写一个自增函数，在函数里循环100次，每次+1结果存进列表；最后返回列表。调用这个函数，遍历列表，处理结果。<br>第一种逻辑封装不够彻底但是省内存，第二种逻辑封装的好但是需要生成完整列表很占内存。<br>使用yield的函数会变成一个生成器，可以理解为该函数生成了迭代器，即接收该函数执行结果的变量变成了迭代器可以调用的<code>next()</code>方法。实际过程相当于函数变成了动态执行，函数执行时遇到<code>yield</code>会保存运行状态并暂停，等到生成的迭代器执行<code>next()</code>方法时函数恢复状态继续执行。实际上每次都只是返回一个数据，但是在调用者看来就像返回了一整个集合，逻辑上独立，也节省了内存。<br>并且使用yield，可以获取函数运行过程中的数据，不再只是冷冰冰的结果。</p>
]]></content>
      <categories>
        <category>python3</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>python3</tag>
        <tag>yield</tag>
      </tags>
  </entry>
  <entry>
    <title>quick start</title>
    <url>/2019/07/31/python3/quick-start/</url>
    <content><![CDATA[<p>paramiko的使用。python ssh操作的基础组件。</p>
<a id="more"></a>
<p>install pip3<br><figure class="highlight plain"><figcaption><span>apt-get install python3-pip```</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">install a module</span><br><span class="line">```~:pip3 install paramiko</span><br></pre></td></tr></table></figure></p>
<p>use a module<br>Test.py<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import paramiko</span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line">try:</span><br><span class="line">      ssh = paramiko.SSHClient()</span><br><span class="line">      ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())</span><br><span class="line">      ...</span><br><span class="line">except Exception as e:</span><br><span class="line">      ...</span><br><span class="line">      os._exit(0)</span><br></pre></td></tr></table></figure></p>
<p>run the code<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:python3 Test.py</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>python3</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>python3</tag>
        <tag>ssh</tag>
      </tags>
  </entry>
  <entry>
    <title>fabric (7) other</title>
    <url>/2019/07/31/python3/fabric-7-other/</url>
    <content><![CDATA[<p>一些常见的问题。<br>fabric连接可能不支持某些命令。<br>远端命令执行上下文问题。<br>远端的环境变量需要在脚本代码里配置等问题。</p>
<a id="more"></a>
<p>(1) </p>
<p><code>lsof</code> don’t use it if not necessary</p>
<p>(2) cotext manage</p>
<p>use  <code>with</code> for context</p>
<p>(3) environment var</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> c.prefix(<span class="string">"export TEST_ENV_VAR='this is test'"</span>):</span><br><span class="line">      c.run(<span class="string">"echo $&#123;TEST_ENV_VAR&#125;"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> c.prefix(<span class="string">"export PATH=$&#123;PATH&#125;:"</span>+server[<span class="string">"/home/user/bin/node/bin"</span>]):</span><br><span class="line">        cmd = <span class="string">"node -v"</span></span><br><span class="line">        print(cmd)</span><br><span class="line">        c.run(cmd)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>python3</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>python3</tag>
        <tag>ssh</tag>
        <tag>fabric</tag>
      </tags>
  </entry>
  <entry>
    <title>类变量 实例变量 self</title>
    <url>/2019/07/31/python3/%E7%B1%BB%E5%8F%98%E9%87%8F-%E5%AE%9E%E4%BE%8B%E5%8F%98%E9%87%8F-self/</url>
    <content><![CDATA[<p>python3 面向对象里的类变量和示例变量的区别</p>
<a id="more"></a>
<h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>尽管类里可以定义全局变量，但是在类的方法里调用这些全局变量时仍然要加上前缀类名或者实例（self）加以区分。加类名就是类变量（全局变量），加self就是实例变量，不加的话就是方法的局部变量。<br>对于同名的类变量和实例变量，实例变量初始值等于类变量，对实例变量做赋值操作不会影响类变量。如果实例变量没有做过赋值操作，它将始终等于类变量，而发生了赋值之后，实例变量和类变量分家，类变量不会再影响实例变量</p>
<h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">def func1(self):</span><br><span class="line">      ...</span><br><span class="line"></span><br><span class="line">def func2():</span><br><span class="line">      ...</span><br></pre></td></tr></table></figure>
<p>含有self参数的方法不能通过类名直接调用，只有实例才能调用。</p>
]]></content>
      <categories>
        <category>python3</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>python3</tag>
      </tags>
  </entry>
  <entry>
    <title>backface-visibility适配firefox的技巧</title>
    <url>/2019/07/31/reactjs/backface-visibility%E9%80%82%E9%85%8Dfirefox%E7%9A%84%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<p>css3 backface-visibility使用技巧</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">transform-style:preserve-3d;</span><br><span class="line">transfrom:rotateY(180deg);</span><br><span class="line">backface-visibility:hidden;</span><br></pre></td></tr></table></figure>
<p>以上三个样式可以对进行3d旋转，并且隐藏组件的背面，因此当组件的背面朝向屏幕时组件会被隐藏。<br>但是chrome、firefox、ie对三者的解析是不一样的。<br>(1) chrome<br>—&gt;继承transform<br>chrome默认所有后代组件都会继承父组件的transform特性，因此，后代组件在做旋转时，会在它外层组件旋转的基础上再做旋转。<br>(2) firefox<br>—&gt;继承transform<br>firefox默认transform不继承，父组件必须显式使用preserve-3d时，子组件才会继承父组件的transform特性，并且孙子及之后的不会继承，如果有需要就必须逐层添加preserve-3d。<br>(3) ie<br>—&gt;继承transform<br>ie全系列都不支持preserve-3d，因此它的组件不会继承父组件的transform。edge才开始支持preserve-3d。<br>(4) 使用preserve-3d带来的问题<br>该属性可能会使absolute position失效。在使用absolute时，组件默认会参照最靠近的一个absolute组件，这意味这如果组件的父组件是relative的，那么子组件就会越过父组件。但父组件使用了preserve-3d之后，子组件即使是absolute也会变成relative。<br>(5) 适配技巧<br>规划好组件的层级结构，避免在复杂的层级结构中出现联动的特效。像absolute和preserve-3d冲突的问题，可以把子组件提出变成兄弟，并在外层重新添加一层父组件。<br>(6) 关于ie的适配<br>不要适配它。</p>
]]></content>
      <categories>
        <category>reactjs</category>
      </categories>
      <tags>
        <tag>reactjs</tag>
        <tag>backface-visibility</tag>
        <tag>css3</tag>
      </tags>
  </entry>
  <entry>
    <title>create-react-app发布时文件路径错误的解决方法</title>
    <url>/2019/07/31/reactjs/create-react-app%E5%8F%91%E5%B8%83%E6%97%B6%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84%E9%94%99%E8%AF%AF%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<p>在工程的依赖文件package.json的根节点里添加一个元素如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&quot;homepage&quot;:&quot;./&quot;,</span><br></pre></td></tr></table></figure>
<p>在打包时自动为页面文件添加工程根目录。</p>
]]></content>
      <categories>
        <category>reactjs</category>
      </categories>
      <tags>
        <tag>reactjs</tag>
      </tags>
  </entry>
  <entry>
    <title>fetch的基础</title>
    <url>/2019/07/31/reactjs/fetch%E7%9A%84%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">fetch(url).then(<span class="function">(<span class="params">response</span>)=&gt;</span>&#123;<span class="keyword">return</span> response.json();&#125;).then(<span class="function"><span class="params">jsonData</span>=&gt;</span>&#123;<span class="built_in">console</span>.log(jsonData);&#125;).catch(<span class="function"><span class="params">()</span>=&gt;</span>&#123;<span class="built_in">console</span>.log(<span class="string">"出错"</span>);&#125;);</span><br></pre></td></tr></table></figure>
<p>上面这是一个最基本的请求，200~299的成功处理在jsonData所在的then函数中，而400或者其他错误则在catch里处理。<br>在ajax里，成功和失败在success和error节点里处理。</p>
]]></content>
      <categories>
        <category>reactjs</category>
      </categories>
      <tags>
        <tag>fetch</tag>
        <tag>reactjs</tag>
      </tags>
  </entry>
  <entry>
    <title>icon转font</title>
    <url>/2019/07/31/reactjs/icon%E8%BD%ACfont/</url>
    <content><![CDATA[<p>css中引用svg字体。</p>
<a id="more"></a>
<p>从阿里矢量图标库可以获取四种通用字体，这里以unicode引用为例。<br>在svg中可以看到font的unicode码，不过这是一个十进制码，像这样“&#xxx;”，xxx是十进制。<br>在css中使用font-family指定字体后，在content里需要用十六进制的unicode，像这样“\uyyy”。\u是unicode格式声明就像上文“&#xxx;”中的“&amp;#;”，yyy是上文“&#xxx;”中xxx的十六进制。</p>
]]></content>
      <categories>
        <category>reactjs</category>
      </categories>
      <tags>
        <tag>reactjs</tag>
        <tag>svg</tag>
      </tags>
  </entry>
  <entry>
    <title>jsx里组件style的写法</title>
    <url>/2019/07/31/reactjs/jsx%E9%87%8C%E7%BB%84%E4%BB%B6style%E7%9A%84%E5%86%99%E6%B3%95/</url>
    <content><![CDATA[<p>在jsx里属性都被变成了对象，所以style应该被赋予一个对象。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">style=&#123;&#123;<span class="attr">width</span>:<span class="string">"100px"</span>,<span class="attr">height</span>:<span class="string">"100px"</span>,&#125;&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>reactjs</category>
      </categories>
      <tags>
        <tag>reactjs</tag>
        <tag>css3</tag>
      </tags>
  </entry>
  <entry>
    <title>material-ui theme和3阶色</title>
    <url>/2019/07/31/reactjs/material-ui-theme%E5%92%8C3%E9%98%B6%E8%89%B2/</url>
    <content><![CDATA[<p>reactjs 组件库 material-ui theme设置。</p>
<a id="more"></a>
<p>自定义theme就能改变button的3阶渐变色。<br>以下是官方提供的lightBaseTheme.js<br>一个主题就那么几个颜色，自己改个颜色就能看出效果，很方便定制。<br>根据官方demo还能实现更复杂的定制。<br>MyThemeLight.js<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  cyan500, cyan700,</span><br><span class="line">  pinkA200,</span><br><span class="line">  grey100, grey300, grey400, grey500,</span><br><span class="line">  white, darkBlack, fullBlack,</span><br><span class="line">  &#125; <span class="keyword">from</span> <span class="string">'material-ui/styles/colors'</span>;</span><br><span class="line">  <span class="keyword">import</span> &#123;fade&#125; <span class="keyword">from</span> <span class="string">'material-ui/utils/colorManipulator'</span>;</span><br><span class="line">  <span class="keyword">import</span> spacing <span class="keyword">from</span> <span class="string">'material-ui/styles/spacing'</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    spacing: spacing,</span><br><span class="line">    fontFamily: <span class="string">'Roboto, sans-serif'</span>,</span><br><span class="line">    palette: &#123;</span><br><span class="line">      primary1Color: cyan500,</span><br><span class="line">      primary2Color: cyan700,</span><br><span class="line">      primary3Color: grey400,</span><br><span class="line">      accent1Color: pinkA200,</span><br><span class="line">      accent2Color: grey100,</span><br><span class="line">      accent3Color: grey500,</span><br><span class="line">      textColor: darkBlack,</span><br><span class="line">      alternateTextColor: white,</span><br><span class="line">      canvasColor: white,</span><br><span class="line">      borderColor: grey300,</span><br><span class="line">      disabledColor: fade(darkBlack, <span class="number">0.3</span>),</span><br><span class="line">      pickerHeaderColor: cyan500,</span><br><span class="line">      clockCircleColor: fade(darkBlack, <span class="number">0.07</span>),</span><br><span class="line">      shadowColor: fullBlack,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import React, &#123; Component &#125; from &apos;react&apos;;</span><br><span class="line">import MuiThemeProvider from &apos;material-ui/styles/MuiThemeProvider&apos;;</span><br><span class="line">import getMuiTheme from &apos;material-ui/styles/getMuiTheme&apos;;</span><br><span class="line">import RaisedButton from &apos;material-ui/RaisedButton&apos;;</span><br><span class="line">import myThemeLight from &apos;./MyThemeLight&apos;;</span><br><span class="line"></span><br><span class="line">class App extends Component &#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    return (</span><br><span class="line">      &lt;MuiThemeProvider muiTheme=&#123;getMuiTheme(myThemeLight)&#125;&gt;</span><br><span class="line">      &lt;RaisedButton label=&quot;Primary&quot; primary=&#123;true&#125;/&gt;</span><br><span class="line">      &lt;/MuiThemeProvider&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default App;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>reactjs</category>
      </categories>
      <tags>
        <tag>reactjs</tag>
        <tag>material-ui</tag>
      </tags>
  </entry>
  <entry>
    <title>tensorflow-1 衣物分类</title>
    <url>/2019/08/02/reactjs/react%20props%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E6%9C%BA%E5%88%B6/</url>
    <content><![CDATA[<p>用面向对象的思想来看 子组件 props 回调函数</p>
<a id="more"></a>
<p>react 也提供了像java那样的抽象编程能力。<br>但是由于react的特点是，数据流像自上而下，数据回传依赖于回调。子组件提供抽象方法，父组件实现并作为回调传给子组件。由于层级太多，就会产生回调链，会导致组件高度耦合，复用度降低。当然可以用redux来解决这个问题，把数据的修改放在一个统一的域里管理，会把组件的耦合度降低很多。</p>
<p>这里主要介绍下，子组件是如何传参给父组件的。</p>
<p>子组件提供一个抽象方法，子组件会在各处调用如何传参都由子组件控制，但此时子组件相当于一个抽象类。</p>
<p>父组件实现这个抽象方法，只可以在方法体里决定具体做什么。运行时，子组件调用该方法，传参，父组件实现。基本和java抽象类很像。</p>
<ul>
<li>父组件</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">constructor</span>(props)&#123;</span><br><span class="line">    <span class="keyword">super</span>(props);</span><br><span class="line">    <span class="keyword">this</span>.state = &#123;</span><br><span class="line">        idList: [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">changeId(id:number, <span class="attr">sub_element_data</span>:string)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"changeId, id=%s,data=%s"</span>, id, sub_element_data);</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">render()&#123;</span><br><span class="line">    <span class="keyword">const</span> subElementList = <span class="keyword">this</span>.state.idList.map(<span class="function">(<span class="params">ele:number,index:number,arr:number[]</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">            &lt;SubElement key=&#123;<span class="string">"sub-"</span>+index&#125; onChange=&#123;(sub_element_data:string)=&gt;<span class="keyword">this</span>.changeId(ele,sub_element_data)&#125;&gt;<span class="xml"><span class="tag">&lt;/<span class="name">SubElement</span>&gt;</span></span></span><br><span class="line">        )</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &#123;subElementList&#125;</span><br><span class="line">        &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    );</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>子组件</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">interface Props&#123;</span><br><span class="line">    onChange: (sub_element_data):<span class="function"><span class="params">string</span>=&gt;</span><span class="keyword">void</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">render()&#123;</span><br><span class="line">    <span class="keyword">return</span>(</span><br><span class="line">        &lt;Input onChange=&#123;(event)=&gt;thi传递给 子组件一个 函数定义</span><br><span class="line"><span class="string">``</span><span class="string">`js</span></span><br><span class="line"><span class="string">&#123;(sub_element_data:string)=&gt;this.changeId(ele,sub_element_data)&#125;</span></span><br></pre></td></tr></table></figure>
<p>入参和函数体，函数体里调用了父组件自己的一个函数。入参由调用方提供，子组件会通过props回调，所以调用方就是子组件。</p>
<p>子组件为 Input的onChange创建了一个函数定义<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;(event)=&gt;<span class="keyword">this</span>.props.onChange(event.target.value)&#125;</span><br></pre></td></tr></table></figure></p>
<p>入参和函数体，调用方是Input，input默认传参是一个event类型。函数体则是子组件的props回调。</p>
<p>因此 子组件的 Props 接口里限定的回调原型，父组件实现了这个函数，而子组件则是调用。</p>
]]></content>
      <categories>
        <category>reactjs</category>
      </categories>
      <tags>
        <tag>reactjs</tag>
        <tag>typescript</tag>
      </tags>
  </entry>
  <entry>
    <title>react-helmet customize html head</title>
    <url>/2019/07/31/reactjs/react-helmet-customize-html-head/</url>
    <content><![CDATA[<p>单页面应用，html的header是固定的，使用react-helmet可以在不同的页面渲染不同的header。</p>
<a id="more"></a>
<h3 id="1-react-helmet"><a href="#1-react-helmet" class="headerlink" title="(1) react-helmet"></a>(1) react-helmet</h3><ul>
<li><h4 id="why-use-it"><a href="#why-use-it" class="headerlink" title="why use it"></a>why use it</h4><p>  This module let you customize html page head title.</p>
</li>
<li><h4 id="install"><a href="#install" class="headerlink" title="install"></a>install</h4><p>  <code>~:npm install react-helmet --save-dev</code></p>
</li>
<li><h4 id="how-to-use"><a href="#how-to-use" class="headerlink" title="how to use"></a>how to use</h4>  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;Helmet&#125; <span class="keyword">from</span> <span class="string">'react-helmet'</span>;</span><br><span class="line">...</span><br><span class="line">render()&#123;</span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">            &lt;Helmet&gt;</span><br><span class="line">                &lt;title&gt;My title&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">            &lt;/</span>Helmet&gt;</span><br><span class="line">            &lt;RaisedButton label=<span class="string">"Primary"</span> backgroundColor=<span class="string">"#00BCD4"</span> primary=&#123;<span class="literal">false</span>&#125;/&gt;</span><br><span class="line">            &lt;RaisedButton label=<span class="string">"Primary"</span> primary=&#123;<span class="literal">true</span>&#125; onClick=&#123;()=&gt;<span class="keyword">this</span>.handleClick()&#125;/&gt;</span><br><span class="line">            &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        );</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure>
<p>  The code above will convert the <code>&lt;title&gt;</code> in html page. <code>&lt;Helmet&gt;</code> will be rendered from top to bottom. The last <code>&lt;Helmet&gt;</code> rendered will show on browser’s tab.</p>
</li>
</ul>
<h3 id="2-example"><a href="#2-example" class="headerlink" title="(2) example"></a>(2) example</h3><ul>
<li><h4 id="create-react-app"><a href="#create-react-app" class="headerlink" title="create-react-app"></a>create-react-app</h4><p>  create project</p>
</li>
<li><h4 id="insall-react-helmet"><a href="#insall-react-helmet" class="headerlink" title="insall react-helmet"></a>insall react-helmet</h4><p>  install module.</p>
</li>
<li><h4 id="common-head-title-component"><a href="#common-head-title-component" class="headerlink" title="common head title component"></a>common head title component</h4><p>  html-head.js</p>
  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123;Component&#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;Helmet&#125; <span class="keyword">from</span> <span class="string">'react-helmet'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_Header</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line">    render() &#123;</span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">                &lt;Helmet&gt;</span><br><span class="line">                    &lt;meta charSet=<span class="string">"utf-8"</span>/&gt;</span><br><span class="line">                    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1, shrink-to-fit=no"</span>/&gt;</span><br><span class="line">                    &lt;meta name=<span class="string">"theme-color"</span> content=<span class="string">"#000000"</span>/&gt;</span><br><span class="line">                &lt;<span class="regexp">/Helmet&gt;</span></span><br><span class="line"><span class="regexp">            &lt;/</span>div&gt;</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> _Header;</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="a-component-with-it’s-own-head-title"><a href="#a-component-with-it’s-own-head-title" class="headerlink" title="a component with it’s own head title"></a>a component with it’s own head title</h4><p>  App.js</p>
  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123;Component&#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;Helmet&#125; <span class="keyword">from</span> <span class="string">'react-helmet'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line">    render() &#123;</span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">                &lt;Helmet&gt;</span><br><span class="line">                    &lt;title&gt;stage title&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">                &lt;/</span>Helmet&gt;</span><br><span class="line">                &lt;p&gt;test stage&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">            &lt;/</span>div&gt;</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> App;</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="entry"><a href="#entry" class="headerlink" title="entry"></a>entry</h4>  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> ReactDOM <span class="keyword">from</span> <span class="string">'react-dom'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'./index.css'</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App'</span>;</span><br><span class="line"><span class="keyword">import</span> registerServiceWorker <span class="keyword">from</span> <span class="string">'./registerServiceWorker'</span>;</span><br><span class="line"><span class="keyword">import</span> _Header <span class="keyword">from</span> <span class="string">'./html-head'</span>;</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">    (</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;_Header/&gt;</span><br><span class="line">            &lt;App/&gt;</span><br><span class="line">        &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    ), </span></span><br><span class="line"><span class="regexp">    document.getElementById('root'));</span></span><br><span class="line"><span class="regexp">registerServiceWorker();</span></span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>reactjs</category>
      </categories>
      <tags>
        <tag>reactjs</tag>
      </tags>
  </entry>
  <entry>
    <title>react input组件渲染与数据提交</title>
    <url>/2019/12/06/reactjs/react-redux-store%E9%87%8C%E5%AD%98%E6%94%BE%E5%AF%B9%E8%B1%A1%E7%B1%BB%E5%9E%8B%E6%95%B0%E6%8D%AE/</url>
    <content><![CDATA[<p>当一个reducer模块的state里包含复杂的object类型数据时，直接修改该对象里的数据时不会触发组件渲染。<br>需要使用类似{…object}的拷贝方式生成新对象才会触发重渲染。<br>尤其是当使用了 es的map类型时。</p>
<a id="more"></a>
<p>复杂类型可能是由于json转换时的拷贝等原因，导致react无法检测到对象的变化，也就是state一直保持在初始状态，此时修改数据并不会发生重渲染。</p>
]]></content>
      <categories>
        <category>reactjs</category>
      </categories>
      <tags>
        <tag>redux</tag>
        <tag>reactjs</tag>
      </tags>
  </entry>
  <entry>
    <title>reactjs单组件示例</title>
    <url>/2019/07/31/reactjs/reactjs%E5%8D%95%E7%BB%84%E4%BB%B6%E7%A4%BA%E4%BE%8B/</url>
    <content><![CDATA[<p>reactjs 组件demo</p>
<a id="more"></a>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; Component &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyComponent</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>()&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        <span class="keyword">this</span>.state=&#123;</span><br><span class="line">            testValue:<span class="number">0</span>,</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    handleClick()&#123;</span><br><span class="line">        <span class="keyword">const</span> tempState=<span class="keyword">this</span>.state;</span><br><span class="line">        <span class="keyword">if</span> (tempState.testValue&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            tempState.testValue=<span class="number">0</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            tempState.testValue=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.setState(tempState);</span><br><span class="line">    &#125;</span><br><span class="line">    render()&#123;</span><br><span class="line">        <span class="keyword">return</span>(</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">            &lt;p&gt;&#123;<span class="keyword">this</span>.state.testValue&#125;&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">            &lt;button onClick=&#123;()=&gt;this.handleClick()&#125;&gt;</span></span><br><span class="line"><span class="regexp">                hello</span></span><br><span class="line"><span class="regexp">            &lt;/</span>button&gt;</span><br><span class="line">            &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        );</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">export default MyComponent;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>reactjs</category>
      </categories>
      <tags>
        <tag>reactjs</tag>
      </tags>
  </entry>
  <entry>
    <title>函数式组件无法使用this关键字</title>
    <url>/2019/07/31/reactjs/%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BB%84%E4%BB%B6%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8this%E5%85%B3%E9%94%AE%E5%AD%97/</url>
    <content><![CDATA[<p>函数式组件通过传参替代this</p>
<a id="more"></a>
<p>函数式组件是无状态组件，其渲染性能更好，但是无法在其中使用this。仍可以使用props，如果你想用props，比如以下<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">const myComponent = (props)=&gt;&#123;</span><br><span class="line">    return (&lt;&gt;&#123;props.name&#125;&lt;/&gt;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>reactjs</category>
      </categories>
      <tags>
        <tag>reactjs</tag>
        <tag>函数式组件</tag>
      </tags>
  </entry>
  <entry>
    <title>在props中传递函数对象的机制</title>
    <url>/2019/07/31/reactjs/%E5%9C%A8props%E4%B8%AD%E4%BC%A0%E9%80%92%E5%87%BD%E6%95%B0%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%9C%BA%E5%88%B6/</url>
    <content><![CDATA[<p>给子组件传递父组件的函数</p>
<a id="more"></a>
<p>父组件在调用子组件时，可以传递funciton对象到子组件的props中。<br>比如以下<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">onClick=&#123;()=&gt;this.onClick()&#125;</span><br></pre></td></tr></table></figure></p>
<p>还可以通过以下两种方式传递，这两种方式可能会遇到this为null的情况，因为逻辑中用到了代表父组件实例的this，但是因为某种机制（我没看源码），需要使用bind(this)传入父组件实例。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//这种方式如果需要父组件对象，则onClick=&#123;this.onClick.bind(this)&#125;</span><br><span class="line">onClick=&#123;this.onClick&#125;</span><br><span class="line">//这种方式可以在onClick里return 一个function，如果这个function需要父组件对象，需要bind(this)</span><br><span class="line">onClick=&#123;this.onClick()&#125;</span><br></pre></td></tr></table></figure></p>
<p>从bind(this)的使用可以看出这种机制，这里的函数调用不像java里实例加”.”函数名用法，更像是把父组件里的一段代码传到子组件里重新生成一个实现，而代表上下文的实例则由bind(this)注入。<br>以上三种方式，首推第一种，调用父组件的状态时过程最为透明。</p>
]]></content>
      <categories>
        <category>reactjs</category>
      </categories>
      <tags>
        <tag>reactjs</tag>
      </tags>
  </entry>
  <entry>
    <title>封装一个fetch工具类</title>
    <url>/2019/07/31/reactjs/%E5%B0%81%E8%A3%85%E4%B8%80%E4%B8%AAfetch%E5%B7%A5%E5%85%B7%E7%B1%BB/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FetchUtil</span></span>&#123;</span><br><span class="line">    <span class="keyword">get</span>(param)&#123;</span><br><span class="line">        alert(<span class="number">1</span>);</span><br><span class="line">        fetch(param.url).then(<span class="function">(<span class="params">response</span>)=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> response.json();</span><br><span class="line">        &#125;).then(<span class="function"><span class="params">jsonData</span>=&gt;</span>&#123;<span class="built_in">console</span>.log(jsonData);&#125;).catch(<span class="function"><span class="params">()</span>=&gt;</span>&#123;<span class="built_in">console</span>.log(<span class="string">'出错'</span>);&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> FetchUtil;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>reactjs</category>
      </categories>
      <tags>
        <tag>fetch</tag>
        <tag>reactjs</tag>
      </tags>
  </entry>
  <entry>
    <title>静态文件路径问题</title>
    <url>/2019/07/31/reactjs/%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>reactjs中应用静态文件的方式</p>
<a id="more"></a>
<p>在写react代码时会发现，头部经常会有import引用某个路径下的某个文件。<br>import是es2015的规范，require是社区规范。两者都可以用来引用文件。但是import只能在文件头部，而require可以在代码逻辑中用。用require在代码中动态的加载文件。</p>
<p>比如图片文件，src=”../imgs/img1.jpg”，这种方式无法引用。react中，所有的静态文件都应该被import或者require加载为对象，所以此处应该是 src={require(“../imgs/img1.jpg”)}</p>
]]></content>
      <categories>
        <category>reactjs</category>
      </categories>
      <tags>
        <tag>reactjs</tag>
      </tags>
  </entry>
  <entry>
    <title>nodejs-selenium catch alert exception</title>
    <url>/2019/07/31/selenium/nodejs-selenium-catch-alert-exception/</url>
    <content><![CDATA[<p>有些页面可能会有alert，但不一定会真的弹出。<br>直接使用前文介绍的api可能会产生没有alert的异常，导致脚本终止。<br>本文介绍使用promise和then捕获alert并catch异常，以防止异常终止。</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">const webdriver = require(&apos;selenium-webdriver&apos;);</span><br><span class="line">let By = webdriver.By;</span><br><span class="line"></span><br><span class="line">const driver = new webdriver.Builder()</span><br><span class="line">	.forBrowser(&apos;firefox&apos;)</span><br><span class="line">	.build();</span><br><span class="line"></span><br><span class="line">driver.get(&apos;https://www.xxx.com&apos;);</span><br><span class="line"></span><br><span class="line">driver.switchTo().alert().then(promise=&gt;promise.accept()).catch(e=&gt;console.log(&quot;no alert\n&quot;+e));</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>selenium</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
        <tag>selenium</tag>
      </tags>
  </entry>
  <entry>
    <title>nodejs-selenium example</title>
    <url>/2019/07/31/selenium/nodejs-selenium-example/</url>
    <content><![CDATA[<p>一个完整的使用firefox的selenium脚本。</p>
<a id="more"></a>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> webdriver = <span class="built_in">require</span>(<span class="string">'selenium-webdriver'</span>);</span><br><span class="line"><span class="keyword">let</span> By = webdriver.By;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> driver = <span class="keyword">new</span> webdriver.Builder()</span><br><span class="line">	.forBrowser(<span class="string">'firefox'</span>)</span><br></pre></td></tr></table></figure>
<p>const webdriver = require(‘selenium-webdriver’);<br>let By = webdriver.By;</p>
<p>const driver = new webdriver.Builder()<br>    .forBrowser(‘firefox’)<br>    .build();</p>
<p>driver.get(‘<a href="http://www.xxx.com" target="_blank" rel="noopener">http://www.xxx.com</a>‘);</p>
<p>// switch to frame<br>// driver.switchTo().frame(“frame name or index”| WebElement);<br>// WebElement may not effectively switch to target frame<br>// driver.switchTo().frame(driver.findElement(By.id(‘frame_id’)));<br>// frame name<br>driver.switchTo().frame(‘frame_name’);</p>
<p>// input user name<br>driver.findElement(By.id(‘username’)).click();<br>driver.findElement(By.id(‘username’)).sendKeys(‘abc’);</p>
<p>// input password<br>driver.findElement(By.id(‘password’)).sendKeys(‘abc123’);<br>driver.findElement(By.id(‘password’)).click();</p>
<p>let countryCode;<br>for(let i=0;i&lt;3;i++){<br>    driver.findElement(By.id(‘contrycode’)).click();<br>nodejs-selenium example    driver.sleep(500);<br>    driver.findElement(By.xpath(‘//option[@value=”86”]’)).click();<br>    countryCode = driver.findElement(By.id(“countryCode”)).getText();<br>    if (countryCode) break;<br>}<br>if (!stationCode){<br>    driver.quit();<br>}</p>
<p>// login<br>driver.findElement(By.id(‘login’)).then(element=&gt;element.click());</p>
<p>// maybe login failure, password error. deal with the possible alert.<br>driver.switchTo().alert().then(element=&gt;element.accept()).catch(e=&gt;console.log(“no alert\n”+e));</p>
<p>// login success<br>// wait for new page<br>driver.sleep(500);</p>
<p>//driver.quit();<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">```</span><br><span class="line">const webdriver = require(&apos;selenium-webdriver&apos;);</span><br><span class="line">let By = webdriver.By;</span><br><span class="line"></span><br><span class="line">const driver = new webdriver.Builder()</span><br><span class="line">	.forBrowser(&apos;firefox&apos;)</span><br><span class="line">	.build();</span><br><span class="line"></span><br><span class="line">driver.get(&apos;http://www.xxx.com&apos;);</span><br><span class="line"></span><br><span class="line">// switch to frame</span><br><span class="line">// driver.switchTo().frame(&quot;frame name or index&quot;| WebElement);</span><br><span class="line">// WebElement may not effectively switch to target frame</span><br><span class="line">// driver.switchTo().frame(driver.findElement(By.id(&apos;frame_id&apos;)));</span><br><span class="line">// frame name</span><br><span class="line">driver.switchTo().frame(&apos;frame_name&apos;);</span><br><span class="line"></span><br><span class="line">// input user name</span><br><span class="line">driver.findElement(By.id(&apos;username&apos;)).click();</span><br><span class="line">driver.findElement(By.id(&apos;username&apos;)).sendKeys(&apos;abc&apos;);</span><br><span class="line"></span><br><span class="line">// input password</span><br><span class="line">driver.findElement(By.id(&apos;password&apos;)).sendKeys(&apos;abc123&apos;);</span><br><span class="line">driver.findElement(By.id(&apos;password&apos;)).click();</span><br><span class="line"></span><br><span class="line">let countryCode;</span><br><span class="line">for(let i=0;i&lt;3;i++)&#123;</span><br><span class="line">	driver.findElement(By.id(&apos;contrycode&apos;)).click();</span><br><span class="line">nodejs-selenium example	driver.sleep(500);</span><br><span class="line">	driver.findElement(By.xpath(&apos;//option[@value=&quot;86&quot;]&apos;)).click();</span><br><span class="line">	countryCode = driver.findElement(By.id(&quot;countryCode&quot;)).getText();</span><br><span class="line">	if (countryCode) break;</span><br><span class="line">&#125;</span><br><span class="line">if (!stationCode)&#123;</span><br><span class="line">	driver.quit();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// login</span><br><span class="line">driver.findElement(By.id(&apos;login&apos;)).then(element=&gt;element.click());</span><br><span class="line"></span><br><span class="line">// maybe login failure, password error. deal with the possible alert.</span><br><span class="line">driver.switchTo().alert().then(element=&gt;element.accept()).catch(e=&gt;console.log(&quot;no alert\n&quot;+e));</span><br><span class="line"></span><br><span class="line">// login success</span><br><span class="line">// wait for new page</span><br><span class="line">driver.sleep(500);</span><br><span class="line"></span><br><span class="line">//driver.quit();</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">const webdriver = require(&apos;selenium-webdriver&apos;);</span><br><span class="line">let By = webdriver.By;</span><br><span class="line"></span><br><span class="line">const driver = new webdriver.Builder()</span><br><span class="line">	.forBrowser(&apos;firefox&apos;)</span><br><span class="line">	.build();</span><br><span class="line"></span><br><span class="line">driver.get(&apos;http://www.xxx.com&apos;);</span><br><span class="line"></span><br><span class="line">// switch to frame</span><br><span class="line">// driver.switchTo().frame(&quot;frame name or index&quot;| WebElement);</span><br><span class="line">// WebElement may not effectively switch to target frame</span><br><span class="line">// driver.switchTo().frame(driver.findElement(By.id(&apos;frame_id&apos;)));</span><br><span class="line">// frame name</span><br><span class="line">driver.switchTo().frame(&apos;frame_name&apos;);</span><br><span class="line"></span><br><span class="line">// input user name</span><br><span class="line">driver.findElement(By.id(&apos;username&apos;)).click();</span><br><span class="line">driver.findElement(By.id(&apos;username&apos;)).sendKeys(&apos;abc&apos;);</span><br><span class="line"></span><br><span class="line">// input password</span><br><span class="line">driver.findElement(By.id(&apos;password&apos;)).sendKeys(&apos;abc123&apos;);</span><br><span class="line">driver.findElement(By.id(&apos;password&apos;)).click();</span><br><span class="line"></span><br><span class="line">let countryCode;</span><br><span class="line">for(let i=0;i&lt;3;i++)&#123;</span><br><span class="line">	driver.findElement(By.id(&apos;contrycode&apos;)).click();</span><br><span class="line">nodejs-selenium example	driver.sleep(500);</span><br><span class="line">	driver.findElement(By.xpath(&apos;//option[@value=&quot;86&quot;]&apos;)).click();</span><br><span class="line">	countryCode = driver.findElement(By.id(&quot;countryCode&quot;)).getText();</span><br><span class="line">	if (countryCode) break;</span><br><span class="line">&#125;</span><br><span class="line">if (!stationCode)&#123;</span><br><span class="line">	driver.quit();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// login</span><br><span class="line">driver.findElement(By.id(&apos;login&apos;)).then(element=&gt;element.click());</span><br><span class="line"></span><br><span class="line">// maybe login failure, password error. deal with the possible alert.</span><br><span class="line">driver.switchTo().alert().then(element=&gt;element.accept()).catch(e=&gt;console.log(&quot;no alert\n&quot;+e));</span><br><span class="line"></span><br><span class="line">// login success</span><br><span class="line">// wait for new page</span><br><span class="line">driver.sleep(500);</span><br><span class="line"></span><br><span class="line">//driver.quit();</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">const webdriver = require(&apos;selenium-webdriver&apos;);</span><br><span class="line">let By = webdriver.By;</span><br><span class="line"></span><br><span class="line">const driver = new webdriver.Builder()</span><br><span class="line">	.forBrowser(&apos;firefox&apos;)</span><br><span class="line">	.build();</span><br><span class="line"></span><br><span class="line">driver.get(&apos;http://www.xxx.com&apos;);</span><br><span class="line"></span><br><span class="line">// switch to frame</span><br><span class="line">// driver.switchTo().frame(&quot;frame name or index&quot;| WebElement);</span><br><span class="line">// WebElement may not effectively switch to target frame</span><br><span class="line">// driver.switchTo().frame(driver.findElement(By.id(&apos;frame_id&apos;)));</span><br><span class="line">// frame name</span><br><span class="line">driver.switchTo().frame(&apos;frame_name&apos;);</span><br><span class="line"></span><br><span class="line">// input user name</span><br><span class="line">driver.findElement(By.id(&apos;username&apos;)).click();</span><br><span class="line">driver.findElement(By.id(&apos;username&apos;)).sendKeys(&apos;abc&apos;);</span><br><span class="line"></span><br><span class="line">// input password</span><br><span class="line">driver.findElement(By.id(&apos;password&apos;)).sendKeys(&apos;abc123&apos;);</span><br><span class="line">driver.findElement(By.id(&apos;password&apos;)).click();</span><br><span class="line"></span><br><span class="line">let countryCode;</span><br><span class="line">for(let i=0;i&lt;3;i++)&#123;</span><br><span class="line">	driver.findElement(By.id(&apos;contrycode&apos;)).click();</span><br><span class="line">nodejs-selenium example	driver.sleep(500);</span><br><span class="line">	driver.findElement(By.xpath(&apos;//option[@value=&quot;86&quot;]&apos;)).click();</span><br><span class="line">	countryCode = driver.findElement(By.id(&quot;countryCode&quot;)).getText();</span><br><span class="line">	if (countryCode) break;</span><br><span class="line">&#125;</span><br><span class="line">if (!stationCode)&#123;</span><br><span class="line">	driver.quit();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// login</span><br><span class="line">driver.findElement(By.id(&apos;login&apos;)).then(element=&gt;element.click());</span><br><span class="line"></span><br><span class="line">// maybe login failure, password error. deal with the possible alert.</span><br><span class="line">driver.switchTo().alert().then(element=&gt;element.accept()).catch(e=&gt;console.log(&quot;no alert\n&quot;+e));</span><br><span class="line"></span><br><span class="line">// login success</span><br><span class="line">// wait for new page</span><br><span class="line">driver.sleep(500);</span><br><span class="line"></span><br><span class="line">//driver.quit();</span><br></pre></td></tr></table></figure>
<p>// switch to frame<br>// driver.switchTo().frame(“frame name or index”| WebElement);<br>// WebElement may not effectively switch to target frame<br>// driver.switchTo().frame(driver.findElement(By.id(‘frame_id’)));<br>// frame name<br>driver.switchTo().frame(‘frame_name’);</p>
<p>// input user name<br>driver.findElement(By.id(‘username’)).click();<br>driver.findElement(By.id(‘username’)).sendKeys(‘abc’);</p>
<p>// input password<br>driver.findElement(By.id(‘password’)).sendKeys(‘abc123’);<br>driver.findElement(By.id(‘password’)).click();</p>
<p>let countryCode;<br>for(let i=0;i&lt;3;i++){<br>    driver.findElement(By.id(‘contrycode’)).click();<br>nodejs-selenium example    driver.sleep(500);<br>    driver.findElement(By.xpath(‘//option[@value=”86”]’)).click();<br>    countryCode = driver.findElement(By.id(“countryCode”)).getText();<br>    if (countryCode) break;<br>}<br>if (!stationCode){<br>    driver.quit();<br>}</p>
<p>// login<br>driver.findElement(By.id(‘login’)).then(element=&gt;element.click());</p>
<p>// maybe login failure, password error. deal with the possible alert.<br>driver.switchTo().alert().then(element=&gt;element.accept()).catch(e=&gt;console.log(“no alert\n”+e));</p>
<p>// login success<br>// wait for new page<br>driver.sleep(500);</p>
<p>//driver.quit();<br>```</p>
]]></content>
      <categories>
        <category>selenium</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
        <tag>selenium</tag>
      </tags>
  </entry>
  <entry>
    <title>nodejs selenium firefox</title>
    <url>/2019/07/31/selenium/nodejs-selenium-firefox/</url>
    <content><![CDATA[<p>selenium提供了一些ide插件用于录制selenium脚本。<br>本文介绍了firfox插件的使用，但注意版本。<br>在写文章时，该插件只支持 54.0.1版本。<br>通常不使用这类插件。而是页面右键直接获取xpath。</p>
<a id="more"></a>
<p>firefox 54.0.1 win64</p>
<p>(1) firefox 54.0.1</p>
<p>If you want to use Selenium IDE on firefox at the meantime.<br>Selenium IDE will NOT work on Firefox version 55 onwards.</p>
<p>(2) firefox driver</p>
<p><a href="https://github.com/mozilla/geckodriver/releases/" target="_blank" rel="noopener">firefox driver download</a><br>add it to system environmental variables<br>Path==&gt;;D:\drivers\;</p>
<p>(3) node</p>
<p>npm install selenium-webdriver</p>
<p>(4) example without frame</p>
<p>test.js<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">const webdriver = require(&apos;selenium-webdriver&apos;);</span><br><span class="line">let By = webdriver.By;</span><br><span class="line">let until = webdriver.until;</span><br><span class="line"></span><br><span class="line">const driver = new webdriver.Builder()</span><br><span class="line">	.forBrowser(&apos;firefox&apos;)</span><br><span class="line">	.build();</span><br><span class="line">/*</span><br><span class="line">// use standalone proxy</span><br><span class="line">// chrome</span><br><span class="line">const driver = new webdriver.Builder()</span><br><span class="line">	.usingServer(&apos;http://localhost:9515&apos;)</span><br><span class="line">	.withCapabilities(webdriver.Capabilities.chrome())</span><br><span class="line">	.build();</span><br><span class="line">//firefox</span><br><span class="line">const driver = new webdriver.Builder()</span><br><span class="line">	.usingServer(&apos;http://localhost:4444/wd/hub&apos;)</span><br><span class="line">	.forBrowser(&apos;firefox&apos;)</span><br><span class="line">	.build();</span><br><span class="line">const driver = new webdriver.Builder()</span><br><span class="line">	.usingServer(&apos;http://localhost:4444/wd/hub&apos;)</span><br><span class="line">	.withCapabilities(&#123;  </span><br><span class="line">    browserName: &apos;firefox&apos;   </span><br><span class="line">	&#125;)</span><br><span class="line">	.build();</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">driver.get(&apos;https://www.baidu.com&apos;);</span><br><span class="line">//driver.sleep(3*1000);</span><br><span class="line">driver.findElement(By.id(&apos;kw&apos;)).sendKeys(&apos;webdriver&apos;);</span><br><span class="line">driver.findElement(By.id(&apos;su&apos;)).click();</span><br><span class="line">//driver.wait(until.titleIs(&apos;webdriver_百度搜索&apos;),1000);</span><br><span class="line">//driver.quit();</span><br></pre></td></tr></table></figure></p>
<p>(5) run the driver to open the standalone server proxy</p>
<p>cd D:\drivers<br>geckodriver.exe</p>
<p>(6) run the js</p>
<p>node test.js</p>
<p>(7) example with frame =&gt; switch to a target frame</p>
<p>API: driver.switchTo().frame(WebElement)<br>test.jhexos<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">const webdriver = require(&apos;selenium-webdriver&apos;);</span><br><span class="line">let By = webdriver.By;</span><br><span class="line">let until = webdriver.until;</span><br><span class="line"></span><br><span class="line">const driver = new webdriver.Builder()</span><br><span class="line">	.forBrowser(&apos;firefox&apos;)</span><br><span class="line">	.build();</span><br><span class="line"></span><br><span class="line">driver.get(&apos;https://www.xxxx.com&apos;);</span><br><span class="line">//driver.sleep(3*1000);</span><br><span class="line"></span><br><span class="line">//switchto target frame</span><br><span class="line">driver.switchTo().frame(driver.findElement(By.id(&apos;frame_id&apos;)));</span><br><span class="line"></span><br><span class="line">driver.findElement(By.id(&apos;xx&apos;)).sendKeys(&apos;webdriver&apos;);</span><br><span class="line">driver.findElement(By.id(&apos;yy&apos;)).click();</span><br><span class="line">//driver.wait(until.titleIs(&apos;webdriver_百度搜索&apos;),1000);</span><br><span class="line">//driver.quit();</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>selenium</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
        <tag>selenium</tag>
      </tags>
  </entry>
  <entry>
    <title>nodejs-selenium switch to frame and alert</title>
    <url>/2019/07/31/selenium/nodejs-selenium-switch-to-frame-and-alert/</url>
    <content><![CDATA[<p>像一些复杂页面可能会有iframe，使窗口分成很多window，这回使直接组件定位失效。<br>需要切换window，然后才能定位到正确的组件。<br>本文介绍如何切换iframe。和如何自动关掉alert窗口。</p>
<a id="more"></a>
<p>You don’t need to care frameset.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">const webdriver = require(&apos;selenium-webdriver&apos;);</span><br><span class="line">let By = webdriver.By;</span><br><span class="line">...</span><br><span class="line">//switch to frame</span><br><span class="line">//driver.switchTo().frame(&quot;frame name or index&quot;| WebElement);</span><br><span class="line">driver.switchTo().frame(driver.findElement(By.id(&quot;frame_id&quot;));</span><br><span class="line">// then you can control the elements in this frame</span><br><span class="line"></span><br><span class="line">// switch to alert</span><br><span class="line">driver.swtichTo().alert().accept();</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>selenium</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
        <tag>selenium</tag>
      </tags>
  </entry>
  <entry>
    <title>nodejs-selenium window switch</title>
    <url>/2019/07/31/selenium/nodejs-selenium-window-switch/</url>
    <content><![CDATA[<p>selenium脚本打开页面需要时间。可能导致无法定位到正确的页面，脚本执行失败。<br>本文介绍了，如果获取页面句柄，从而使浏览器驱动获取到正确的页面。</p>
<a id="more"></a>
<p>use firefox!</p>
<p>The program has to wait for a few seconds during the loading time of a new page because elements haven’t been loading completely and <code>findElement()</code> can’t find them.<br>Using <code>driver.sleep(n*1000)</code>  to ensure that the browser has enough time to open a new tab or load an url successfully.</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> webdriver = <span class="built_in">require</span>(<span class="string">'selenium-webdriver'</span>);</span><br><span class="line"><span class="keyword">let</span> By = webdriver.By;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> driver = <span class="keyword">new</span> webdriver.Builder()</span><br><span class="line">	.forBrowser(<span class="string">'firefox'</span>)</span><br><span class="line">	.build();</span><br><span class="line"></span><br><span class="line">driver.get(<span class="string">'https://www.baidu.com'</span>);</span><br><span class="line"></span><br><span class="line">driver.findElement(By.xpath(<span class="string">"//input[@id='kw']"</span>)).sendKeys(<span class="string">'webdriver'</span>);</span><br><span class="line">driver.findElement(By.xpath(<span class="string">"//input[@id='su']"</span>)).click();</span><br><span class="line"></span><br><span class="line"><span class="comment">// here 2 seconds is enough</span></span><br><span class="line">driver.sleep(<span class="number">2</span>*<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> handle1 = driver.getWindowHandle();</span><br><span class="line">driver.findElement(By.xpath(<span class="string">"//div[@id='1']/*/a"</span>)).click();</span><br><span class="line"></span><br><span class="line"><span class="comment">// here 3s is enough</span></span><br><span class="line">driver.sleep(<span class="number">3</span>*<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">driver.getAllWindowHandles().then(<span class="function"><span class="params">handles</span>=&gt;</span>&#123;</span><br><span class="line">	<span class="built_in">console</span>.log(handles);</span><br><span class="line">&#125;)</span><br><span class="line">driver.switchTo().window(handle1);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>selenium</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
        <tag>selenium</tag>
      </tags>
  </entry>
  <entry>
    <title>quick start (1)</title>
    <url>/2019/07/31/selenium/quick-start-1/</url>
    <content><![CDATA[<p>selenium是一个网页自动测试工具。可以用nodejs,java和python编写测试脚本。<br>本系列使用nodejs编写脚本。<br>本文介绍安装过程，并附带一个简单的测试脚本。</p>
<a id="more"></a>
<p>(0) start an node project</p>
<p>(1) install selenium</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:npm install --save-dev selenium-webdriver</span><br></pre></td></tr></table></figure>
<p>(2) download drivers for current version of browser</p>
<p>chrome<br>firefox: <a href="https://github.com/mozilla/geckodriver/releases" target="_blank" rel="noopener">https://github.com/mozilla/geckodriver/releases</a></p>
<p>(3) config environment for browser drivers</p>
<p>sudo vim /etc/profile<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">drivers_home=/home/username/drivers</span><br><span class="line">PATH=$PATH:$drivers_home/</span><br><span class="line">export PATH</span><br></pre></td></tr></table></figure></p>
<p>source /etc/profile</p>
<p>(4) test.js</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">const webdriver = require(&apos;selenium-webdriver&apos;);</span><br><span class="line">let By = webdriver.By;</span><br><span class="line">let until = webdriver.until;</span><br><span class="line"></span><br><span class="line">const driver = new webdriver.Builder()</span><br><span class="line">    .withCapabilities(webdriver.Capabilities.chrome())</span><br><span class="line">    .build();</span><br><span class="line"></span><br><span class="line">//const driver = new webdriver.Builder()</span><br><span class="line">//    .forBrowser(&apos;firefox&apos;)</span><br><span class="line">//    .build();</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">// use standalone proxy</span><br><span class="line">// chrome</span><br><span class="line">const driver = new webdriver.Builder()</span><br><span class="line">    .usingServer(&apos;http://localhost:9515&apos;)</span><br><span class="line">    .withCapabilities(webdriver.Capabilities.chrome())</span><br><span class="line">    .build();</span><br><span class="line">//firefox</span><br><span class="line">const driver = new webdriver.Builder()</span><br><span class="line">    .usingServer(&apos;http://localhost:4444/wd/hub&apos;)</span><br><span class="line">    .forBrowser(&apos;firefox&apos;)</span><br><span class="line">    .build();</span><br><span class="line">const driver = new webdriver.Builder()</span><br><span class="line">    .usingServer(&apos;http://localhost:4444/wd/hub&apos;)</span><br><span class="line">    .withCapabilities(&#123;  </span><br><span class="line">    browserName: &apos;firefox&apos;   </span><br><span class="line">    &#125;)</span><br><span class="line">    .build();</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">driver.get(&apos;https://www.baidu.com&apos;);</span><br><span class="line">//driver.sleep(3*1000);</span><br><span class="line">driver.findElement(By.id(&apos;kw&apos;)).sendKeys(&apos;webdriver&apos;);</span><br><span class="line">driver.findElement(By.id(&apos;su&apos;)).click();</span><br><span class="line">//driver.wait(until.titleIs(&apos;webdriver_百度搜索&apos;),1000);</span><br><span class="line">//driver.quit();</span><br></pre></td></tr></table></figure>
<p>node test.js</p>
]]></content>
      <categories>
        <category>selenium</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
        <tag>selenium</tag>
      </tags>
  </entry>
  <entry>
    <title>(1) NAT - 代理和内网穿透</title>
    <url>/2019/07/25/shell/(1)%20NAT%20-%20%E4%BB%A3%E7%90%86%E5%92%8C%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</url>
    <content><![CDATA[<p>本文使用iptables和ssh隧道两种方式实现反向代理。<br>其中iptables最为强大，可以替换数据包的来源或目标地址及端口，可以实现代理。<br>而ssh隧道则可以实现反向代理的内网穿透即内网端口暴露到公网。</p>
<a id="more"></a>
<h2 id="代理-端口重定向-基于ssh的反向代理"><a href="#代理-端口重定向-基于ssh的反向代理" class="headerlink" title="代理 端口重定向 基于ssh的反向代理"></a><strong>代理 端口重定向 基于ssh的反向代理</strong></h2><h3 id="1-域名代理"><a href="#1-域名代理" class="headerlink" title="1. 域名代理"></a><strong>1. 域名代理</strong></h3><ul>
<li><h4 id="1-1-修改hosts"><a href="#1-1-修改hosts" class="headerlink" title="1.1 修改hosts"></a>1.1 修改hosts</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">修改 /etc/hosts 可以使用指定ip地址代替某个域名的真实地址</span><br><span class="line">那么访问该域名时就会访问该ip</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="2-ip和端口转发"><a href="#2-ip和端口转发" class="headerlink" title="2. ip和端口转发"></a><strong>2. ip和端口转发</strong></h3><ul>
<li><h4 id="2-1-使用iptables设置代理"><a href="#2-1-使用iptables设置代理" class="headerlink" title="2.1 使用iptables设置代理"></a>2.1 使用iptables设置代理</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">可以做ip转发，端口转发。可以操作符合要求的数据包。比如把数据包来源ip和端口替换。或者把数据包目标ip和端口替换。</span><br></pre></td></tr></table></figure>
</li>
<li><h5 id="2-1-1-开启转发功能"><a href="#2-1-1-开启转发功能" class="headerlink" title="2.1.1 开启转发功能"></a>2.1.1 开启转发功能</h5><p> echo 1 &gt; /proc/sys/net/ipv4/ip_forward</p>
</li>
<li><h5 id="2-1-2-定义转发规则"><a href="#2-1-2-定义转发规则" class="headerlink" title="2.1.2 定义转发规则"></a>2.1.2 定义转发规则</h5>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">iptables -t nat -A PREROUTING -p tcp -d 1.1.1.1 --dport 80 -j DNAT --to-destination 172.169.42.8:80</span><br></pre></td></tr></table></figure>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-t nat                          使用nat表(网络地址转换表)，该表是独立于filter表(过滤表)的另一个规则表，filter表是默认表</span><br><span class="line">-A                              在指定表的末尾增加一条规则。-D CHAIN_NAME [num] 删除CHAIN_NAME链里的第num条规则, 此外还有 -I插入, -R替换;</span><br><span class="line">PREROUTING                      CHAIN_NAME之一，该链包含对数据包目标地址转换的规则.此外还有 POSTROUTING 源地址的转换规则, OUTPUT等;</span><br><span class="line">-j DNAT：目的地址转换             动作之一。此外还有 SNAT：源地址转换; REDIRECT：端口重定向;</span><br><span class="line">-p tcp                          指定协议，规则将约束指定协议类型的数据包</span><br><span class="line">-i eth0                         省略，入站接口，指定数据来源的网卡设备名称。专用PREROUTING</span><br><span class="line">-o eth1                         省略，出站接口，指定数据出站的网卡设备名称。POSTROUTING和OUTPUT</span><br><span class="line">-d 1.1.1.1                      数据包的来源地址，规则将约束该地址发来的数据包,1.1.1.1通配所有ip</span><br><span class="line">--dport 80                      指定来源的端口</span><br><span class="line">--to-destination 172.169.42.8:80        可简写为--to,指定替换的结果</span><br></pre></td></tr></table></figure>
</li>
<li><h5 id="2-1-3-举例"><a href="#2-1-3-举例" class="headerlink" title="2.1.3 举例"></a>2.1.3 举例</h5><ol>
<li><p>更改所有来自192.168.1.0/24的数据包的源IP地址为123.4.5.100</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">iptables -t nat -A POSTROUTING -s 192.168.1.0/24 -o eth0 -j SNAT --to 123.4.5.100</span><br></pre></td></tr></table></figure>
</li>
<li><p>更改所有来自192.168.1.0/24的数据包的目的ip地址为123.4.5.100</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">iptables -t nat -A PREROUTING -s 192.168.1.0/24 -i eth1 -j DNAT --to 123.4.5.100</span><br></pre></td></tr></table></figure>
</li>
</ol>
</li>
<li><h4 id="2-2-使用-ssh-隧道代理和反向代理"><a href="#2-2-使用-ssh-隧道代理和反向代理" class="headerlink" title="2.2 使用 ssh 隧道代理和反向代理"></a>2.2 使用 ssh 隧道代理和反向代理</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh隧道必须要使用ssh</span><br></pre></td></tr></table></figure>
</li>
<li><h5 id="2-2-1-本地转发"><a href="#2-2-1-本地转发" class="headerlink" title="2.2.1 本地转发"></a>2.2.1 本地转发</h5><p>  把本地8080端口的请求转发到 host1:host1_port 上<br>  不限定host1是本地还是远程</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh -gNf -L 8080:host1:host1_port host1User@host1</span><br></pre></td></tr></table></figure>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-g 启用网关</span><br><span class="line">-N 不使用shell</span><br><span class="line">-f 后台</span><br></pre></td></tr></table></figure>
</li>
<li><h5 id="2-2-2-远程转发"><a href="#2-2-2-远程转发" class="headerlink" title="2.2.2 远程转发"></a>2.2.2 远程转发</h5><p>  把远程host1上的8080端口转发到 本地某个端口上 上</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh -gNf -R 8080:localhost:localhost_port host1User@host1</span><br></pre></td></tr></table></figure>
</li>
<li><h5 id="2-2-3-内网穿透功能"><a href="#2-2-3-内网穿透功能" class="headerlink" title="2.2.3 内网穿透功能"></a>2.2.3 内网穿透功能</h5><p>  实现花生壳类似的内网穿透</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">局域网内的服务器A，没有单独的公网IP，公网无法直接访问 http://hostA:8080</span><br><span class="line">公网服务器B，具有独立的IP hostB， ssh用户名 userB，端口无限制</span><br></pre></td></tr></table></figure>
<ol>
<li><p>在A上远程转发B的一个端口 28080 到A本地的8080</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh -gNf -R 28080:localhost:8080 userB@hostB</span><br></pre></td></tr></table></figure>
<p> 此时，可以在B服务器上通过 <a href="http://localhost:28080访问" target="_blank" rel="noopener">http://localhost:28080访问</a> 到A的服务，但是公网无法访问 hostB:28080</p>
</li>
<li><p>在B服务器上本地转发一个端口 28081 到B服务器本地的28080</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh -gNf -L 28081:localhost:28080 userB@hostB</span><br></pre></td></tr></table></figure>
</li>
<li><p>在任意公网上的浏览器里访问 B服务器daili的 28081端口</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl http://hostB:28081</span><br></pre></td></tr></table></figure>
<p> 此时，A的服务就被B代理到了公网上。</p>
</li>
</ol>
</li>
</ul>
]]></content>
      <categories>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>NAT</tag>
        <tag>SSH隧道</tag>
        <tag>内网穿透</tag>
      </tags>
  </entry>
  <entry>
    <title>expect</title>
    <url>/2019/07/31/shell/expect/</url>
    <content><![CDATA[<p>expect关键字可以用于shell脚本交互并自动填充内容，比如脚本执行调用了mysql登录，需要输入密码，可以用expect。</p>
<a id="more"></a>
<h2 id="1-set-timeout-n"><a href="#1-set-timeout-n" class="headerlink" title="1. set timeout n"></a>1. set timeout n</h2><p>一般都要设置超时时间，比如命令可能是git或ssh这种带有网络请求的，返回交互命令的时间比较长，如果超时时间太短，提前超时就会结束掉epxect。</p>
<h2 id="2-expect-eof-and-interact"><a href="#2-expect-eof-and-interact" class="headerlink" title="2. expect eof and interact"></a>2. expect eof and interact</h2><p>这两个一般用在expect脚本末尾，只选一个即可。</p>
<p>如果是expect执行完后，不需要交互，用expect eof。</p>
<p>如果expect执行完，用户需要接管操作权，需要用interact，比如自动连接ssh。</p>
<h2 id="3-ssh自动连接"><a href="#3-ssh自动连接" class="headerlink" title="3. ssh自动连接"></a>3. ssh自动连接</h2><p>自动连接之后，把控制权交给用户</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>!/usr/bin/expect</span><br><span class="line"></span><br><span class="line">set password "password"</span><br><span class="line">set timeout 5</span><br><span class="line">spawn ssh -l admin 192.168.0.1</span><br><span class="line">expect &#123;</span><br><span class="line">    "yes/no" &#123;</span><br><span class="line">        send "yes\n";</span><br><span class="line">        exp_continue</span><br><span class="line">    &#125;</span><br><span class="line">    "password:" &#123;</span><br><span class="line">        send "$&#123;password&#125;\n";</span><br><span class="line">        exp_continue</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">interact</span><br></pre></td></tr></table></figure>
<h2 id="4-自动执行命令"><a href="#4-自动执行命令" class="headerlink" title="4. 自动执行命令"></a>4. 自动执行命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span>!/usr/bin/expect</span><br><span class="line"></span><br><span class="line">set password "password"</span><br><span class="line">set timeout 5</span><br><span class="line">spawn </span><br><span class="line">expect eof</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>expect</tag>
      </tags>
  </entry>
  <entry>
    <title>iw 设置wifi连接</title>
    <url>/2019/07/31/shell/iw-%E8%AE%BE%E7%BD%AEwifi%E8%BF%9E%E6%8E%A5/</url>
    <content><![CDATA[<p>使用ip命令提供的iw命令管理wifi。<br>这是推荐的方式设置无线连接，但是首先要借助rfkill相关命令查看无线设备是否开启。</p>
<a id="more"></a>
<p>(1) 查看无线网卡名称</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:ip a</span><br></pre></td></tr></table></figure>
<p>(2) 扫描无线网络</p>
<p>使用(1)中的无线网卡名称<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:iwlist card_name scanning</span><br></pre></td></tr></table></figure></p>
<p>(3) 根据ESSID连接</p>
<ul>
<li><p>设置网络连接类型</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:iwpriv card_name set NetworkType=Infra</span><br></pre></td></tr></table></figure>
</li>
<li><p>设置无线网安全模式</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:iwpriv card_name set AuthMode=WPA2PSK</span><br></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>设置加密方式</p>
<p>  TKIP<br>  CCMP =&gt; AES</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:iwpriv card_name set EncrypType=TKIP</span><br></pre></td></tr></table></figure>
</li>
<li><p>设置连接密码</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:iwpriv card_name set WPAPSK=*******</span><br></pre></td></tr></table></figure>
</li>
<li><p>连接到网络 ESSID</p>
<p>  方式1</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:iwpriv card_name set SSID=&lt;ESSID&gt;</span><br></pre></td></tr></table></figure>
<p>  方式2</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:iwconfig card_name essid &lt;ESSID&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>(3) 查看连接状态</p>
<pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:iwpriv card_name connStatus</span><br></pre></td></tr></table></figure>
</code></pre>]]></content>
      <categories>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>wifi</tag>
        <tag>ip iw</tag>
      </tags>
  </entry>
  <entry>
    <title>iwconfig connect to wep wifi</title>
    <url>/2019/07/31/shell/iwconfig-connect-to-wep-wifi/</url>
    <content><![CDATA[<p>iwconfig命令连接wep加密的wifi</p>
<a id="more"></a>
<p>(1) scan</p>
<p><code>~:sudo iwlist wlan0 scan</code></p>
<p>(2) connect</p>
<p><code>~:sudo iwconfig wlan0 essid 1234-1234-abcd</code></p>
]]></content>
      <categories>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>wifi</tag>
        <tag>iwconfig</tag>
      </tags>
  </entry>
  <entry>
    <title>linux service</title>
    <url>/2019/07/31/shell/linux-service/</url>
    <content><![CDATA[<p>linux service管理。</p>
<a id="more"></a>
<p>(1) create a 644 service </p>
<p>/usr/lib/systemd/system/test.service<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=this is test service</span><br><span class="line"># after some service, such like network.target or sshd.service</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/home/user/test.sh</span><br></pre></td></tr></table></figure></p>
<p>(2) create a 744 shell</p>
<p>/home/user/test.sh<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">echo "hello" &gt;&gt; /home/user/test.log</span><br></pre></td></tr></table></figure></p>
<p>(3) start/stop/restart/status</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl command test.service</span><br></pre></td></tr></table></figure>
<p>(3) enable or disable</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl enable test.service</span><br></pre></td></tr></table></figure>
<p>It will make test.service start at system boot. That means test.sh will run when system boot.</p>
]]></content>
      <categories>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>linux service</tag>
      </tags>
  </entry>
  <entry>
    <title>nmcli connect wifi</title>
    <url>/2019/07/31/shell/nmcli-connect-wifi/</url>
    <content><![CDATA[<p>nmcli是ubuntu系统提供的网络管理模块的命令行工具。<br>实际上，一般可能使用iw居多。</p>
<a id="more"></a>
<p>(0) install network-manager<br>(1) scan the latest wifi spot<br>get essid<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># use root permission to scan the latest</span><br><span class="line">~:sudo iwlist wlan0 scanning</span><br></pre></td></tr></table></figure></p>
<p>or<br><code>~:nmcli dev wifi</code></p>
<p>(2) nmcli connect</p>
<ol>
<li>connection</li>
</ol>
<ul>
<li><p>use an existed connection</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># activate an connection</span><br><span class="line">~:nmcli connection up &quot;connection_name&quot;</span><br><span class="line"># add a wifi connection</span><br><span class="line">~:nmcli connection add con-name &quot;connection_name&quot; connection.autoconnect yes type wifi ssid &quot;wifi_ssid&quot; ifname &quot;device_interface_name&quot;</span><br><span class="line"># modify wifi password</span><br><span class="line">~:nmcli connection modify &quot;connection_name&quot; wifi-sec.key-mgmt wpa-psk</span><br><span class="line">~:nmcli connection modify &quot;connection_name&quot; wifi-sec.psk &quot;password&quot;</span><br></pre></td></tr></table></figure>
</li>
<li><p>this will create a new connection for network-manager</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo nmcli device wifi connect &quot;ssid&quot; [password &quot;123456&quot;]</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>(3) iwconfig interface</p>
]]></content>
      <categories>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>wifi</tag>
        <tag>nmcli</tag>
      </tags>
  </entry>
  <entry>
    <title>logrotate to cut logs</title>
    <url>/2019/07/31/shell/logrotate-to-cut-logs/</url>
    <content><![CDATA[<p>使用logrotate切割大日志。<br>通常tomcat可以关掉catalina输出，通过log4j的组件，直接分割日志。<br>但是我们可以用logrotate工具的提取某些时间段的日志。</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># -v display operation</span><br><span class="line">~:logrotate /home/admin/rule_tomcat -v</span><br></pre></td></tr></table></figure>
<p>rule_tomcat<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">/home/admin/admin_fc/testlog/catalina.out&#123;</span><br><span class="line">daily</span><br><span class="line">dateext</span><br><span class="line">rotate 30</span><br><span class="line">missingok</span><br><span class="line">size 15M</span><br><span class="line">copytruncate</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><code>daily</code> cut logs once a day, if date doesn’t change, don’t need cut.<br><code>dateext</code> append date “YYmmdd” to file name<br><code>rotate 30</code> keep the last 30 files , delete the earlier.<br><code>missingok</code> ignore the warning of log doesn’t exist.<br><code>size 15M</code> if the log file is bigger than the size, cut it.<br><code>copytruncate</code> create new file after cut.</p>
]]></content>
      <categories>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>logrotate</tag>
      </tags>
  </entry>
  <entry>
    <title>rfkill-stop or start wlan/bluetooth</title>
    <url>/2019/07/31/shell/rfkill-stop-or-start-wlan-bluetooth/</url>
    <content><![CDATA[<p>rfkill命令可以管理wlan和bluetooth等射频设备的启动和关闭。</p>
<a id="more"></a>
<p>(1) list rf devices</p>
<p><code>~:rfkill list</code><br>1: wlan0 xxx<br>2: bluetooth xx</p>
<p>(2) block or unblock<br><code>:rfkill block 1</code><br><code>:rfkill unblock 1</code></p>
]]></content>
      <categories>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>wifi</tag>
        <tag>rfkill</tag>
      </tags>
  </entry>
  <entry>
    <title>sed locate some lines</title>
    <url>/2019/07/31/shell/sed-locate-some-lines/</url>
    <content><![CDATA[<p>sed命令定位匹配的行。</p>
<a id="more"></a>
<p>a.txt<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">this is abc</span><br><span class="line">this is test</span><br><span class="line">this is abc</span><br><span class="line">this is test</span><br></pre></td></tr></table></figure></p>
<p>(1) print by sed</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sed -n &apos;p&apos; a.txt</span><br></pre></td></tr></table></figure>
<p><code>-n</code> just use the line which has been operated<br><code>p</code> print operation</p>
<p>(2) print one line</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sed -n &apos;2p&apos; a.txt</span><br></pre></td></tr></table></figure>
<p>print the 2th line</p>
<p>(3) print 1~3 line</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sed -n &apos;1,3p&apos; a.txt</span><br></pre></td></tr></table></figure>
<p>(4) locate by regex</p>
<p>1) print all “this is abc”</p>
<pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sed -n &apos;/this is abc/ p&apos; a.txt</span><br></pre></td></tr></table></figure>
</code></pre><p>2) replace all “this is abc” to “that is abc”</p>
<pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sed -i &apos;s/this is abc/that is abc/&apos; a.txt</span><br></pre></td></tr></table></figure>
</code></pre>]]></content>
      <categories>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>sed</tag>
      </tags>
  </entry>
  <entry>
    <title>sed的复杂用法</title>
    <url>/2019/07/31/shell/sed%E7%9A%84%E5%A4%8D%E6%9D%82%E7%94%A8%E6%B3%95/</url>
    <content><![CDATA[<p>sed 的脚本部分支持嵌套，本文会补充一些基本用法，和嵌套写法。</p>
<a id="more"></a>
<h3 id="1-sed-的命令格式"><a href="#1-sed-的命令格式" class="headerlink" title="1. sed 的命令格式"></a><strong>1. sed 的命令格式</strong></h3><p><code>sed [options] &lt;script&gt; filepath</code></p>
<p>以上就是最基础的格式，比如常用的打印第三行的文本内容 <code>sed -n &quot;3p&quot; test.txt</code></p>
<p>options 常用</p>
<p>n: quiet模式，只保留匹配的行，否则也会保留原始内容。    </p>
<p>-i: 脚本的输出结果替换到文本中。            </p>
<p>-e: 支持多脚本 也就是命令里会有多个 <code>&lt;script&gt;</code>， 这样会降低嵌套脚本复杂度</p>
<h3 id="2-script-组成"><a href="#2-script-组成" class="headerlink" title="2. script 组成"></a><strong>2. script 组成</strong></h3><p>script 由 {} 大括号包围，<br>非嵌套写法: <code>{[start_line, limit,end_line] option}</code></p>
<p>嵌套写法: <code>{[start_line, limit,end_line] [&lt;script&gt;]}</code></p>
<p>参数部分:</p>
<pre><code>start_line: 开始行，可以是数字，也可以是正则（未验证多行匹配将使用第一行）
end_line: 结束行，可以是数字，也可以是正则（未验证多行匹配取第一行）
limit: 必须是数字，如果不存在 end_line，就表示 start_line，以及它之后的行数。如果存在 end_line就表示跳跃行数。
option: 操作，多个操作需要使用 分号;分隔。
&lt;script&gt; 嵌套脚本
</code></pre><p>option除了一般的命令操作，也包含一个类似于vim替换的 正则替换操作</p>
<pre><code>一般操作包括 = 打印行号, p 打印文本
正则替换操作 [line_number]s/pattern/conten/[g] 支持正则的分组捕获。
</code></pre><h3 id="3-一些例子"><a href="#3-一些例子" class="headerlink" title="3. 一些例子"></a><strong>3. 一些例子</strong></h3><ul>
<li><h4 id="注释某个匹配的行"><a href="#注释某个匹配的行" class="headerlink" title="注释某个匹配的行"></a>注释某个匹配的行</h4><p>  <code>sed &quot;{s/^(Server)(.*)/# \1\2}/ p&quot;</code></p>
</li>
</ul>
]]></content>
      <categories>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>sed</tag>
      </tags>
  </entry>
  <entry>
    <title>shell expect git</title>
    <url>/2019/07/31/shell/shell-expect-git/</url>
    <content><![CDATA[<p>使用ecpect为git填充密码</p>
<a id="more"></a>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">USERNAME="username"</span><br><span class="line">PASSWORD="password"</span><br><span class="line">cd /home/username/work</span><br><span class="line">echo "hello"&gt;&gt;test.txt</span><br><span class="line">git add -A</span><br><span class="line">git commit -m "update"</span><br><span class="line">/usr/bin/expect &lt;&lt;-EOF</span><br><span class="line">set timeout 30</span><br><span class="line">spawn git push origin master</span><br><span class="line">expect "Username *:"</span><br><span class="line">send "$&#123;USERNAME&#125;\r"</span><br><span class="line">expect "Password *:"</span><br><span class="line">send "$&#123;PASSWORD&#125;\r"</span><br><span class="line">expect eof</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>shell</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>shell</tag>
        <tag>expect</tag>
      </tags>
  </entry>
  <entry>
    <title>shell expect scp file</title>
    <url>/2019/07/31/shell/shell-expect-scp-file/</url>
    <content><![CDATA[<p>scp下载远端指定文件</p>
<a id="more"></a>
<p>use shell and expect to scp a file to a remote server</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">upload file or folder to server</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="built_in">source</span> scp_profile.sh</span></span><br><span class="line"></span><br><span class="line">FILE_NAME=""</span><br><span class="line">SERVER_HOST="123.123.123.123"</span><br><span class="line">SERVER_PORT=123</span><br><span class="line">LOGIN_USER="username"</span><br><span class="line">PASSWORD="password"</span><br><span class="line">UPLOAD_ROOT_FOLDER="/upload_path"</span><br><span class="line"></span><br><span class="line">while getopts "f:" OPTS; do</span><br><span class="line">        case $OPTS in</span><br><span class="line">                f)</span><br><span class="line">                        FILE_NAME=$OPTARG</span><br><span class="line">                        ;;</span><br><span class="line">                ?)</span><br><span class="line">                        echo "Error"</span><br><span class="line">                        exit 1</span><br><span class="line">                        ;;</span><br><span class="line">        esac</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">if [ ! -n "$FILE_NAME" ]; then</span><br><span class="line">        echo "Error!"</span><br><span class="line">        echo "File name must be figured out!"   </span><br><span class="line">        exit 1</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">if [ ! -f "$&#123;FILE_NAME&#125;" ]; then</span><br><span class="line">        echo "Error!"</span><br><span class="line">        echo "$&#123;FILE_NAME&#125; doesn't exist in current folder!"</span><br><span class="line">        echo 1</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">/usr/bin/expect &lt;&lt;-EOF</span><br><span class="line">set timeout 30</span><br><span class="line">spawn scp -P$&#123;SERVER_PORT&#125; -r $&#123;FILE_NAME&#125; $&#123;LOGIN_USER&#125;@$&#123;SERVER_HOST&#125;:$&#123;UPLOAD_ROOT_FOLDER&#125;/</span><br><span class="line">expect "password:"</span><br><span class="line">send "$&#123;PASSWORD&#125;\r"</span><br><span class="line">expect eof</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>shell</category>
      </categories>
      <tags>
        <tag>ssh</tag>
        <tag>shell</tag>
        <tag>scp</tag>
      </tags>
  </entry>
  <entry>
    <title>shell of mysql</title>
    <url>/2019/07/31/shell/shell-of-mysql/</url>
    <content><![CDATA[<p>mysql常用shell脚本。<br>登录，导入导出等。</p>
<a id="more"></a>
<p>(1)login mysql</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">mysql -uxxx -pxxxx -A</span><br></pre></td></tr></table></figure>
<p>(2)mysqldump [tables, data, functions and procedures]</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">echo "export tables and data"</span><br><span class="line">mysqldump -hxxx -Pxxx -uxxx -pxxx --default-character-set=utf8 db_name | gzip &gt; /home/username/db_name_utf8.sql.gz</span><br><span class="line"></span><br><span class="line">echo "export functions and procedures"</span><br><span class="line">mysqldump -hxxx -Pxxx -uxxx -pxxx --default-character-set=utf8 -ndt -R db_name | gzip &gt; /home/username/db_name_func_utf8.sql.gz</span><br></pre></td></tr></table></figure>
<p>(3)mysqldump [tables, data, functions and procedures] with drop db and create db</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">echo "export tables and data"</span><br><span class="line"><span class="meta">#</span><span class="bash">--add-drop-database means <span class="string">"drop database if exists xx"</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">-B means <span class="string">"create database xx"</span></span></span><br><span class="line">mysqldump -hxxx -Pxxx -uxxx -pxxx --default-character-set=utf8 --add-drop-database -B db_name | gzip &gt; /home/username/db_name_utf8.sql.gz</span><br><span class="line"></span><br><span class="line">echo "export functions and procedures"</span><br><span class="line">mysqldump -hxxx -Pxxx -uxxx -pxxx --default-character-set=utf8 -ndt -R db_name | gzip &gt; /home/username/db_name_func_utf8.sql.gz</span><br></pre></td></tr></table></figure>
<p>(4)-1 mysqldump [create table only]</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">~:mysqldump -u xxx -p"xxx" -default-character-set=utf8 -d db_name | gzip &gt; /home/username/db_name_tables_utf8.sql.gz</span><br></pre></td></tr></table></figure>
<p>(4)-2 mysqldump [data insert only]</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">~:mysqldump -u xxx -p"xxx" -default-character-set=utf8 -t db_name | gzip &gt; /home/username/db_name_data_utf8.sql.gz</span><br></pre></td></tr></table></figure>
<p>(5)import</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">make sure the target databse exists</span></span><br><span class="line">mysql -hxxx -Pxxx -uxxx -pxxx -A -e "</span><br><span class="line">drop database if exists db_name;</span><br><span class="line">create database db_name default character set utf8 collate utf8_bin;</span><br><span class="line">"</span><br><span class="line"><span class="meta">#</span><span class="bash">import tables and data</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="keyword">if</span> there already exists create db <span class="keyword">in</span> sql.gz, you don<span class="string">'t have to figure out the db_name of this step</span></span></span><br><span class="line">gunzip &lt; /home/username/db_name_utf8.sql.gz | mysql -hxxx -Pxxx -uxxx -pxxx db_name</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">import <span class="built_in">functions</span> and procedures</span></span><br><span class="line">gunzip &lt; /home/username/db_name_func_utf8.sql.gz | mysql -hxxx -Pxxx -uxxx -pxxx db_name</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">select capacity of the db</span></span><br><span class="line">mysql -hxxx -Pxxx -uxxx -pxxx -A -e "</span><br><span class="line">select (sum(data_length)+sum(index_length))/1024/1024 from information_schema.tables where table_schema='lis';</span><br><span class="line">"</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>shell</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>shell of orations on zip like war</title>
    <url>/2019/07/31/shell/shell-of-orations-on-zip-like-war/</url>
    <content><![CDATA[<p>操作压缩包里的文件。提取和增加文件。修改压缩包里件的内容。</p>
<a id="more"></a>
<p>(1) zip 命令参数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">以下参数只根据时间戳来更新文件，所以可以删除压缩包内的旧文件，然后把新文件添加进去做到更新的目的。</span><br><span class="line">-f :更新压缩包内的指定文件</span><br><span class="line">-m :更新指定文件到压缩包内，然后删除外边的这个文件</span><br><span class="line">-u :更新已有文件或者添加新文件</span><br><span class="line">-d :删除压缩包内的指定文件</span><br></pre></td></tr></table></figure>
<p>(2) 更新旧文件—替换</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">zip -d test.war abc.txt</span><br><span class="line">zip -u test.war abc.txt</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 删除旧文件</span><br><span class="line">zip -d test.war WEB-INF/classes/dbconfig.properties</span><br><span class="line"># 添加新文件</span><br><span class="line">zip -u test.war WEB-INF/classes/dbconfig.properties</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>archives</tag>
      </tags>
  </entry>
  <entry>
    <title>shell of recursion function</title>
    <url>/2019/07/31/shell/shell-of-recursion-function/</url>
    <content><![CDATA[<p>shell支持函数和递归</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">testFunc()&#123;</span><br><span class="line">        if ((&quot;$1&quot;&lt;3));then</span><br><span class="line">              local testa=$(($1+1))</span><br><span class="line">              testFunc $testa</span><br><span class="line">              return $?</span><br><span class="line">        fi</span><br><span class="line">        return $1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">testFunc 1</span><br><span class="line">echo &quot;$?&quot;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">testFunc 1    ==&gt;  1&lt;3 true</span><br><span class="line">                   testa=1+1=2</span><br><span class="line">                   testFunc  2   ==&gt;  2&lt;3 true</span><br><span class="line">                                      testa=2+1=3</span><br><span class="line">                                      testFunc 3     ==&gt; 3&lt;3 false</span><br><span class="line">echo &quot;$?(=3)&quot; &lt;==  return $?(=3) &lt;==  return $?(=3)  &lt;== return $1(=3)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>function</tag>
      </tags>
  </entry>
  <entry>
    <title>shell of sed to get log</title>
    <url>/2019/07/31/shell/shell-of-sed-to-get-log/</url>
    <content><![CDATA[<p>使用sed截取指定时间段内的日志。</p>
<a id="more"></a>
<p>tomcat log like<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2017-10-17 12:00:00 ...</span><br><span class="line">2017-10-17 12:00:01 ...</span><br><span class="line">2017-10-17 12:00:02 ...</span><br><span class="line">2017-10-17 12:00:03 ...</span><br></pre></td></tr></table></figure></p>
<ul>
<li>command</li>
<li><p><code>sed -n &#39;[start_line_number[,end_line_number]] operation_command&#39; file_name [&gt;&gt;stdout]</code></p>
</li>
<li><p>line_number</p>
</li>
<li><p><code>regex</code> like /^abc/<br><code>number</code> 1~n<br><code>$</code> ths last line</p>
</li>
<li><p>operation_command</p>
</li>
<li><code>p</code> print out the content of the lines<br><code>=</code> print the line number of the lines</li>
</ul>
<h4 id="1-print-content"><a href="#1-print-content" class="headerlink" title="(1) print  content"></a>(1) print  content</h4><p>sed -n ‘/^12:00:00/ p’ log.out<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2017-10-17 12:00:00 ...</span><br></pre></td></tr></table></figure></p>
<h3 id="2-print-line-numbers"><a href="#2-print-line-numbers" class="headerlink" title="(2) print line numbers"></a>(2) print line numbers</h3><ul>
<li><p>all numbers</p>
<p>  sed -n ‘/^12:00:00/, /^12:00:02/ =’ log.out</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td></tr></table></figure>
</li>
<li><p>first line</p>
<p>  sed -n ‘/^12:00:00/, /^12:00:02/ =’ log.out | sed -n ‘1p’</p>
</li>
<li><p>last line</p>
<p>  sed -n ‘/^12:00:00/, /^12:00:02/ =’ log.out | sed -n ‘$p’</p>
</li>
</ul>
<h3 id="3-example"><a href="#3-example" class="headerlink" title="(3) example"></a>(3) example</h3><ul>
<li><p>get 12:00:00 to 12:00:02</p>
<p>  sed -n ‘/^12:00:00/, /^12:00:02/ p’ log.out &gt;&gt; test.txt</p>
</li>
</ul>
<p>(4) may be no line matched. use a shell</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">LOG_FILE_PATH="/home/admin/app/apache-tomcat-8.0.36/logs/catalina.out"</span><br><span class="line"><span class="meta">#</span><span class="bash">LOG_FILE_PATH=<span class="string">"a"</span></span></span><br><span class="line">HOST_IP=102</span><br><span class="line">ORIGIN_START_LINE_TIME=""</span><br><span class="line">ORIGIN_END_LINE_TIME=""</span><br><span class="line">START_LINE=""</span><br><span class="line">END_LINE=""</span><br><span class="line"><span class="meta">#</span><span class="bash"> get line time regex</span></span><br><span class="line">while getopts "s:e" OPTS; do</span><br><span class="line">	case $OPTS in</span><br><span class="line">        	s)</span><br><span class="line">			ORIGIN_START_LINE_TIME=$OPTARG</span><br><span class="line">			;;</span><br><span class="line">               	e)</span><br><span class="line">			ORIGIN_END_LINE_TIME=$OPTARG</span><br><span class="line">			;;</span><br><span class="line">		?)</span><br><span class="line">			echo "Error!"</span><br><span class="line">			exit 1</span><br><span class="line">			;;</span><br><span class="line">	esac</span><br><span class="line">done</span><br><span class="line">START_LINE_TIME=$ORIGIN_START_LINE_TIME</span><br><span class="line">END_LINE_TIME=$ORIGIN_END_LINE_TIME</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">###### test 1 begin #########</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="built_in">echo</span> <span class="string">"s is <span class="variable">$&#123;START_LINE_TIME&#125;</span>, e is <span class="variable">$&#123;END_LINE_TIME&#125;</span>"</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="built_in">exit</span> 1</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">###### test 1 end  #########</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> start line must be figured out</span></span><br><span class="line">if [ ! -n "$START_LINE_TIME" ]; then</span><br><span class="line">	echo "Error!"</span><br><span class="line">	echo "START_LINE_TIME must be figured out!"</span><br><span class="line">	exit 1</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> use sed to find line number</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> try to find start time. note double quotation <span class="keyword">in</span> sed</span></span><br><span class="line">START_LINE=`sed -n "/^.*$&#123;START_LINE_TIME&#125;/ =" $&#123;LOG_FILE_PATH&#125; | sed -n '$p'`</span><br><span class="line"><span class="meta">#</span><span class="bash"> findStartLine start_line start_line_time</span></span><br><span class="line">TIME_COUNTER=0</span><br><span class="line">function findStartLine()&#123;</span><br><span class="line">	if (($START_LINE==-1)) &amp;&amp; (($TIME_COUNTER &lt; 3));then</span><br><span class="line">		local LINE_TIME=$START_LINE_TIME</span><br><span class="line"><span class="meta">		#</span><span class="bash"> 12:30:00--&gt;12:3</span></span><br><span class="line">		LINE_TIME=$&#123;LINE_TIME:0:15&#125;</span><br><span class="line"><span class="meta">		#</span><span class="bash"> find the last line number</span></span><br><span class="line">		START_LINE=`sed -n "/^.*$&#123;LINE_TIME&#125;/ =" $&#123;LOG_FILE_PATH&#125; | sed -n '$p'`</span><br><span class="line">		if [ ! -n "$START_LINE" ];then</span><br><span class="line">			START_LINE=-1</span><br><span class="line">		fi</span><br><span class="line"><span class="meta">		#</span><span class="bash"> -10 minutes</span></span><br><span class="line">		START_LINE_TIME=`date -d "$START_LINE_TIME 10 minute ago" +"%Y-%m-%d %H:%M:%S"`</span><br><span class="line">		((TIME_COUNTER=$TIME_COUNTER+1))</span><br><span class="line"><span class="meta">		#</span><span class="bash"> check result</span></span><br><span class="line">		findStartLine</span><br><span class="line">	fi</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> note that double quotation, because theres a space <span class="keyword">in</span> <span class="string">"2017-10-17 12:00:00"</span></span></span><br><span class="line">if [ ! -n "$START_LINE" ];then</span><br><span class="line">	START_LINE=-1</span><br><span class="line">fi</span><br><span class="line">findStartLine</span><br><span class="line">if (($START_LINE==-1));then</span><br><span class="line">	START_TIME=`date -d "$ORIGIN_START_LINE_TIME 20 minute ago" +"%Y-%m-%d %H:%M"`</span><br><span class="line">	echo "Error! No lines matched the START time at $&#123;ORIGIN_START_LINE_TIME&#125; (from $&#123;START_TIME:0:15&#125;0:00:000)."</span><br><span class="line">	exit 1</span><br><span class="line">fi</span><br><span class="line">echo "start line is $START_LINE"</span><br><span class="line"></span><br><span class="line">TIME_COUNTER=0</span><br><span class="line">function findEndLine()&#123;</span><br><span class="line">	if (($END_LINE==-1)) &amp;&amp; (($TIME_COUNTER &lt; 3));then</span><br><span class="line">		local LINE_TIME=$END_LINE_TIME</span><br><span class="line"><span class="meta">		#</span><span class="bash"> 12:30:00--&gt;12:3</span></span><br><span class="line">		LINE_TIME=$&#123;LINE_TIME:0:15&#125;</span><br><span class="line">                # find the last line number</span><br><span class="line">		END_LINE=`sed -n "/^.*$&#123;LINE_TIME&#125;/ =" $&#123;LOG_FILE_PATH&#125; | sed -n '$p'`</span><br><span class="line">		if [ ! -n "$END_LINE" ];then</span><br><span class="line">			END_LINE=-1</span><br><span class="line">		fi</span><br><span class="line"><span class="meta">		#</span><span class="bash"> +10 minutes</span></span><br><span class="line">		END_LINE_TIME=`date -d "$END_LINE_TIME 10 minute" +"%Y-%m-%d %H:%M:%S"`</span><br><span class="line">		((TIME_COUNTER=$TIME_COUNTER+1))</span><br><span class="line"><span class="meta">		#</span><span class="bash"> check result</span></span><br><span class="line">		findEndLine</span><br><span class="line">	fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if [ -n "$END_LINE_TIME" ]; then</span><br><span class="line">	END_LINE=`sed -n "/^.*$&#123;END_LINE_TIME&#125;/ =" $&#123;LOG_FILE_PATH&#125; | sed -n '$p'`</span><br><span class="line">	if [ ! -n "$END_LINE" ];then</span><br><span class="line">		END_LINE=-1</span><br><span class="line">	fi</span><br><span class="line">	findEndLine</span><br><span class="line">else</span><br><span class="line">	END_LINE=`wc -l $&#123;LOG_FILE_PATH&#125;`</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">if (($END_LINE==-1)); then</span><br><span class="line">	END_TIME=`date -d "$ORIGIN_END_LINE_TIME 20 minute" +"%Y-%m-%d %H:%M"`</span><br><span class="line">	echo "Error! No lines matched with the END time at $ORIGIN_END_LINE_TIME (to $&#123;END_TIME:0:15&#125;9:59:999)."</span><br><span class="line">	exit 1</span><br><span class="line">fi</span><br><span class="line">echo "end line is $END_LINE"</span><br><span class="line"></span><br><span class="line">if (("$START_LINE"&gt;="$END_LINE"));then</span><br><span class="line">	echo "no line matched"</span><br><span class="line">	exit 1</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> generate file name</span></span><br><span class="line">FILE_NAME_NUMBER=01</span><br><span class="line">FILE_NAME="log_"`date +"%m%d"`"_$&#123;HOST_IP&#125;"</span><br><span class="line">function generateFileName()&#123;</span><br><span class="line">	if [ -f "$&#123;FILE_NAME&#125;_$&#123;FILE_NAME_NUMBER&#125;" ];then</span><br><span class="line">		((FILE_NAME_NUMBER=$&#123;FILE_NAME_NUMBER&#125;+1))</span><br><span class="line">		FILE_NAME_NUMBER=`printf "%02d" $&#123;FILE_NAME_NUMBER&#125;`</span><br><span class="line">		generateFileName</span><br><span class="line">	fi</span><br><span class="line">&#125;</span><br><span class="line">generateFileName</span><br><span class="line">sed -n "$&#123;START_LINE&#125;,$&#123;END_LINE&#125; p" $&#123;LOG_FILE_PATH&#125; &gt;&gt; $&#123;FILE_NAME&#125;_$&#123;FILE_NAME_NUMBER&#125;</span><br><span class="line">echo "All in $&#123;FILE_NAME&#125;_$&#123;FILE_NAME_NUMBER&#125;"</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>sed</tag>
      </tags>
  </entry>
  <entry>
    <title>shell of ssh</title>
    <url>/2019/07/31/shell/shell-of-ssh/</url>
    <content><![CDATA[<p>ssh脚本，使用expect填充密码</p>
<a id="more"></a>
<p>(1) login ssh</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/usr/bin/expect</span></span><br><span class="line"></span><br><span class="line">set timeout 30</span><br><span class="line">spawn ssh -l username -pxxx 123.123.123.123</span><br><span class="line">expect "password:"</span><br><span class="line"><span class="meta">#</span><span class="bash"> xxx is your password</span></span><br><span class="line">send "xxx\r"</span><br><span class="line">interact</span><br></pre></td></tr></table></figure>
<p>(2) scp files to server</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/usr/bin/expect</span></span><br><span class="line"></span><br><span class="line">set timeout 30</span><br><span class="line">spawn scp -Pxxx -r $&#123;LOCAL_FILE_PATH&#125; $&#123;LOGIN_USER&#125;@$&#123;SERVER_HOST&#125;:$&#123;REMOTE_FILE_PATH&#125;/</span><br><span class="line">expect "password:"</span><br><span class="line">send "xxx\r"</span><br><span class="line">interact</span><br></pre></td></tr></table></figure>
<p>(3) scp files from server</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/usr/bin/expect</span></span><br><span class="line"></span><br><span class="line">set timeout 30</span><br><span class="line">spawn scp -Pxxx -r $&#123;LOGIN_USER&#125;@$&#123;SERVER_HOST&#125;:$&#123;REMOTE_FILE_PATH&#125;/ $&#123;LOCAL_FILE_PATH&#125;</span><br><span class="line">expect "password:"</span><br><span class="line">send "xxx\r"</span><br><span class="line">interact</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>shell</category>
      </categories>
      <tags>
        <tag>ssh</tag>
        <tag>shell</tag>
        <tag>expect</tag>
      </tags>
  </entry>
  <entry>
    <title>wpa_supplicant connect to wpa wifi</title>
    <url>/2019/07/31/shell/wpa-supplicant-connect-to-wpa-wifi/</url>
    <content><![CDATA[<p>wpa_sypplicant连接wap加密的wifi</p>
<a id="more"></a>
<h3 id="interface-wlan0"><a href="#interface-wlan0" class="headerlink" title="interface wlan0"></a>interface wlan0</h3><p>(1) install wpa_supplicant</p>
<p><code>~:sudo apt-get install wapsupplicant</code><br>you will get <code>wpa_supplicant</code> and   <code>wpa_passphrase</code>;</p>
<p>(2) config your connection info of (ssid, password)</p>
<p>1) generate info config by wpa_passphrase<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:wpa_passphrase wifi_essid wifi_password &gt; test.cnf</span><br><span class="line">~:cat test.cnf</span><br><span class="line">network=&#123;</span><br><span class="line">	ssid=&quot;wifi_essid&quot;</span><br><span class="line">	#psk=&quot;wifi_password&quot;</span><br><span class="line">        # wpa_passphrase will encrypt your password</span><br><span class="line">	psk=a5af8bb4558f42f5cd5a238da77bbac7b89e624449cc4a94b6b056ac6c15c3d1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>2) config by edit config file</p>
<p>test.cnf<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">network=&#123;</span><br><span class="line">	ssid=&quot;wifi_essid&quot;</span><br><span class="line">	psk=&quot;wifi_password&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>(3) connect to wireless</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:wpa_supplicant -B -c ./test.cnf -i wlan0</span><br></pre></td></tr></table></figure>
<p>-B -&gt; keep connection in background<br>-c -&gt; specify config file<br>-i -&gt; specify interface</p>
<p>(4) obtain an IP from the wireless</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:dbclient wlan0</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>wifi</tag>
      </tags>
  </entry>
  <entry>
    <title>(1) overview usage of spark</title>
    <url>/2019/07/25/spark/1-overview-usage-of-spark/</url>
    <content><![CDATA[<p>spark在ubuntu上的安装运行。<br>java数据结构简介，提交java任务。</p>
<a id="more"></a>
<h2 id="overview-usage-of-spark"><a href="#overview-usage-of-spark" class="headerlink" title="overview usage of spark"></a><strong>overview usage of spark</strong></h2><h3 id="1-download-tgz"><a href="#1-download-tgz" class="headerlink" title="1. download tgz"></a><strong>1. download tgz</strong></h3><h3 id="2-unzip"><a href="#2-unzip" class="headerlink" title="2. unzip"></a><strong>2. unzip</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:tar xzvf spark-xxx.tgz -C /home/user/bin</span><br></pre></td></tr></table></figure>
<h3 id="3-start-spart"><a href="#3-start-spart" class="headerlink" title="3. start spart"></a><strong>3. start spart</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:cd /home/user/bin/spark/bin</span><br><span class="line">~:./spark-shell</span><br></pre></td></tr></table></figure>
<h3 id="4-java-maven-统计词频"><a href="#4-java-maven-统计词频" class="headerlink" title="4. java maven 统计词频"></a><strong>4. java maven 统计词频</strong></h3><ul>
<li><h4 id="4-1-pom"><a href="#4-1-pom" class="headerlink" title="4.1 pom"></a>4.1 pom</h4>  <figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.spark<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spark-core_2.12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="4-2-com-user-test-TestMain"><a href="#4-2-com-user-test-TestMain" class="headerlink" title="4.2 com.user.test.TestMain"></a>4.2 com.user.test.TestMain</h4>  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.user.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.spark.SparkConf;</span><br><span class="line"><span class="keyword">import</span> org.apache.spark.api.java.JavaPairRDD;</span><br><span class="line"><span class="keyword">import</span> org.apache.spark.api.java.JavaRDD;</span><br><span class="line"><span class="keyword">import</span> org.apache.spark.api.java.JavaSparkContext;</span><br><span class="line"><span class="keyword">import</span> org.apache.spark.api.java.function.FlatMapFunction;</span><br><span class="line"><span class="keyword">import</span> org.apache.spark.api.java.function.Function2;</span><br><span class="line"><span class="keyword">import</span> org.apache.spark.api.java.function.PairFunction;</span><br><span class="line"><span class="keyword">import</span> scala.Tuple2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestMain</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SparkConf sparkConf = <span class="keyword">new</span> SparkConf().setAppName(<span class="string">"wordCount"</span>);</span><br><span class="line">        JavaSparkContext jsc = <span class="keyword">new</span> JavaSparkContext(sparkConf);</span><br><span class="line"></span><br><span class="line">        List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">        list.add(<span class="string">"a b c d e"</span>);</span><br><span class="line">        list.add(<span class="string">"a b c d e"</span>);</span><br><span class="line">        JavaRDD&lt;String&gt; rddList = jsc.parallelize(list);</span><br><span class="line">        JavaRDD&lt;String&gt; stringJavaRDD = rddList.flatMap(<span class="keyword">new</span> FlatMapFunction&lt;String, String&gt;() &#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> Iterator&lt;String&gt; <span class="title">call</span><span class="params">(String s)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> Arrays.asList(s.split(<span class="string">" "</span>)).iterator();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        JavaPairRDD&lt;String, Integer&gt; stringIntegerJavaPairRDD = stringJavaRDD.mapToPair(<span class="keyword">new</span> PairFunction&lt;String, String, Integer&gt;() &#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> Tuple2&lt;String, Integer&gt; <span class="title">call</span><span class="params">(String s)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> Tuple2&lt;String, Integer&gt;(s, <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).reduceByKey(<span class="keyword">new</span> Function2&lt;Integer, Integer, Integer&gt;() &#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> Integer <span class="title">call</span><span class="params">(Integer x, Integer y)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> x + y;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        stringIntegerJavaPairRDD.saveAsTextFile(<span class="string">"/home/user/work/spark_data"</span>);</span><br><span class="line">        jsc.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="4-3-package-test-jar-home-user-bin-test-jar"><a href="#4-3-package-test-jar-home-user-bin-test-jar" class="headerlink" title="4.3 package test.jar (/home/user/bin/test.jar)"></a>4.3 package test.jar (/home/user/bin/test.jar)</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:mvn clean compile package</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="5-submit-task"><a href="#5-submit-task" class="headerlink" title="5. submit task"></a><strong>5. submit task</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:cd /home/user/bin/spark/bin</span><br><span class="line">~:./spark-submit --class com.user.test.TestMain /home/user/bin/test.jar local</span><br></pre></td></tr></table></figure>
<h3 id="6-查看结果"><a href="#6-查看结果" class="headerlink" title="6. 查看结果 "></a><strong>6. 查看结果 </strong></h3><p>/home/user/work/spark-data/</p>
]]></content>
      <categories>
        <category>spark</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>spark</tag>
        <tag>大数据</tag>
      </tags>
  </entry>
  <entry>
    <title>@Responsebody utf8 Chinese gibberish</title>
    <url>/2019/07/31/spring/Responsebody-utf8-Chinese-gibberish/</url>
    <content><![CDATA[<p>controller返回中文乱码的处理。</p>
<a id="more"></a>
<p>Chinese gibberish—&gt;controller return a String “中文” to html, but html shows “??”.</p>
<p>create a class like</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package com.fc.test.utils;</span><br><span class="line"></span><br><span class="line">import org.springframework.beans.BeansException;</span><br><span class="line">import org.springframework.beans.factory.config.BeanPostProcessor;</span><br><span class="line">import org.springframework.http.MediaType;</span><br><span class="line">import org.springframework.http.converter.StringHttpMessageConverter;</span><br><span class="line"></span><br><span class="line">import java.nio.charset.Charset;</span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created by </span><br><span class="line"> */</span><br><span class="line">public class UTF8StringBeanPostProcessor implements BeanPostProcessor &#123;</span><br><span class="line">    @Override</span><br><span class="line">    public Object postProcessBeforeInitialization(Object o, String s) throws BeansException &#123;</span><br><span class="line">        if (o instanceof StringHttpMessageConverter)&#123;</span><br><span class="line">            MediaType mediaType = new MediaType(&quot;text&quot;, &quot;plain&quot;, Charset.forName(&quot;UTF-8&quot;));</span><br><span class="line">            List&lt;MediaType&gt; types = new ArrayList&lt;MediaType&gt;();</span><br><span class="line">            types.add(mediaType);</span><br><span class="line">            ((StringHttpMessageConverter) o).setSupportedMediaTypes(types);</span><br><span class="line">        &#125;</span><br><span class="line">        return o;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public Object postProcessAfterInitialization(Object o, String s) throws BeansException &#123;</span><br><span class="line">        return o;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>and add it a bean in spring-mvc.xml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;bean class=&quot;com.fc.test.utils.UTF8StringBeanPostProcessor&quot;/&gt;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>spring</category>
      </categories>
      <tags>
        <tag>spring</tag>
        <tag>中文乱码</tag>
      </tags>
  </entry>
  <entry>
    <title>logback流程解析</title>
    <url>/2019/07/31/spring/logback%E6%B5%81%E7%A8%8B%E8%A7%A3%E6%9E%90/</url>
    <content><![CDATA[<p>logback打印日志的流程。</p>
<a id="more"></a>
<h4 id="1-概述"><a href="#1-概述" class="headerlink" title="(1) 概述"></a>(1) 概述</h4><p>本篇并不是做源码解析，阅读本文需要熟悉logback调用链。<br>logback会把所有传入的参数转换为String，所以像异常栈这样的信息，直接以文本输出只会输出第一句。<br>以log.error(“{}”,exception.getMessage(),exception)为例</p>
<h4 id="2-参数解析"><a href="#2-参数解析" class="headerlink" title="(2) 参数解析"></a>(2) 参数解析</h4><ul>
<li><p><code>log.error(&quot;{}&quot;,exception.getMessage(),exception)</code></p>
<p>  包含三个参数，在logback中类似的多参数调用其第一个string参数是固定的，表示format即格式，通常是一些提示信息和占位符。其他参数一般就是填充占位符，但是logback还有一个固定参数——Exception，这个参数可有可无，放在参数列表最后一个位置。</p>
<p>  所以方法的参数可以按照占位符分为四种<br>  第一种: 第一个format参数 可能包含占位符。除占位符之外，其他信息会被打印。<br>  第二种：按顺序填充占位符的参数，属于 message 类型参数。作为文本打印。<br>  第三种: 无用参数，即那些没有占位符的参数，并且不是最后一个参数。这类参数最终不会被打印。<br>  第四种: 最后一个参数且是Exception类型的，它不需要占位符。异常栈会被全部打印。</p>
</li>
</ul>
<h4 id="3-流程"><a href="#3-流程" class="headerlink" title="(3) 流程"></a>(3) 流程</h4><p>logback的调用链大致的流程是，使用参数生成Event，格式化要输出的数据为String， 打印String。</p>
<p>此处只解析 message类型和最后一个Exception的解析流程。</p>
<p>logback在spring初始化时会解析配置文件，对配置文件的encoder或者layout做解析，初始化一个<code>Converter</code>链，<code>Converter</code>链可以理解为格式转换器，对特殊符号做解析，比如 <code>%highlight %msg%n</code>这类格式字符串，这三个分别对应了三种<code>Converter</code> 即高亮，消息，换行。而<code>%msg</code>就是负责解析 message类型参数的转换器，而message类型就是我们需要的最重要的信息。在解析完配置文件的<code>Converter</code>链之后，logback会在Converter链条末尾再追加一个异常转换器。这就是为什么error()方法最后会固定一个Exception参数，而我们能够用<code>og.error(&quot;{}&quot;,exception.getMessage(),exception)</code>这种方式，不加占位符就可以直接打印异常栈。</p>
<ul>
<li><p>message类型</p>
<p>  调用链最重要的格式化为String的过程在<code>PatternLayoutBase.writLoopOnConverters(E event)</code>，这个方法使用各种<code>Converter</code>对原始信息做格式化，最终整合为一个String返回给<code>Appender</code>输出。<br>  该方法根据<code>Converter</code>链依次处理对应的数据，当到达<code>%msg</code>时就会对message参数做处理，这个Converter会调用Event.getFormattedMessage()获取message的格式化结果字符串(因为Event包含所有第一到第四种参数)。</p>
</li>
<li><p>Exception类型</p>
<p>  在生成Event实例时，logback提取参数列表最后一个参数，如果是Exception的实例，则生成一个Throwable对象作为Event的成员。<br>  <code>Converter</code>链最后一个转换器是异常转换器，它会获取这个Throwable对象，如果不为空就会把异常栈里的信息转换成String。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>spring</category>
      </categories>
      <tags>
        <tag>spring</tag>
        <tag>logback</tag>
      </tags>
  </entry>
  <entry>
    <title>springboot(2)-junit-test</title>
    <url>/2019/07/31/spring/springboot-2-junit-test/</url>
    <content><![CDATA[<p>spring集成junit测试的配置。</p>
<a id="more"></a>
<p>通过以下步骤实现junit测试, 为测试环境注入applicationContext</p>
<p>(1) pom<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>(2) Test.class</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.provider;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.test.provider.web.user.TestService;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootTest</span>(classes =MyApplication.class)</span><br><span class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestMain</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TestService testService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        testService.testPrint();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><p>@RunWith(SpringRunner.class)     可以通过以下两种方式注入ApplicationContext</p>
<p>1.</p>
  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> ApplicationContext context;</span><br></pre></td></tr></table></figure>
<p>2.</p>
  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Lazy</span>(<span class="keyword">false</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ContextUtils</span> <span class="keyword">implements</span> <span class="title">ApplicationContextAware</span>, <span class="title">DisposableBean</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ApplicationContext applicationContext = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setApplicationContext</span><span class="params">(ApplicationContext applicationContext)</span> </span>&#123;</span><br><span class="line">        ContextUtils.applicationContext = applicationContext;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>spring</category>
      </categories>
      <tags>
        <tag>spring</tag>
        <tag>junit</tag>
      </tags>
  </entry>
  <entry>
    <title>springboot(1)-basic usage</title>
    <url>/2019/07/31/spring/springboot-1-basic-usage/</url>
    <content><![CDATA[<p>springboot应用，框架搭建。</p>
<a id="more"></a>
<h3 id="1-tree"><a href="#1-tree" class="headerlink" title="(1) tree"></a>(1) tree</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── pom.xml</span><br><span class="line">├── src</span><br><span class="line">│   ├── main</span><br><span class="line">│   │   ├── java</span><br><span class="line">│   │   │   └── com.example.demo</span><br><span class="line">│   │   │       ├── DemoApplication.java</span><br><span class="line">│   │   │       └── ServletInitializer.java</span><br><span class="line">│   │   └── resources</span><br><span class="line">              ├── application.yml</span><br><span class="line">              ├── static</span><br><span class="line">              └── templates</span><br></pre></td></tr></table></figure>
<h3 id="2-pom-xml"><a href="#2-pom-xml" class="headerlink" title="(2) pom.xml"></a>(2) pom.xml</h3><ul>
<li><p>parent -&gt; spring-boot-starter-parent</p>
</li>
<li><p>starter -&gt; spring-boot-starter-web</p>
</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>demo<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="2-run-demo"><a href="#2-run-demo" class="headerlink" title="(2) run demo"></a>(2) run demo</h3><p>run DemoApplication.java<br>Spring Boot will start from a Main Application.<br>Main Application will load project configurations. You don’t have to configure them. (In springmvc, These configurations are  in xml(s).)</p>
<h3 id="3-controller"><a href="#3-controller" class="headerlink" title="(3) controller"></a>(3) controller</h3><p>Here we create controller at Main Application for test. You can code controller as usual.</p>
<ul>
<li><p>DemoApplication.java</p>
  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        SpringApplication.run(DemoApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/test"</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test1</span><span class="params">(String userName)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hello "</span>+userName;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  <code>@SpringBootApplication</code> -&gt; @Configuration + @EnableAutoConfiguration + @ComponentScan<br>  <code>@Configuration</code> -&gt; @Configuration is a class-level annotation indicating that an object is a source of bean definitions. @Configuration classes declare beans via public @Bean annotated methods.<br>  <code>@EnableAutoConfiguration</code>-&gt; Enable auto-configuration of the spring Application Context, attempting to guess and configure beans that you are likely to need. Auto-configuration classes are usually applied based on your classpath and what beans you have defined. It will use config files(xml or yml or properties) and beans in current directory.<br>  <code>@ComponentScan</code> -&gt; Configures component scanning directives for use with @Configuration classes. Provides support parallel with Spring XML’s element. It will scan all @Component (@Service, @Controller) and register these component as beans.<br>  <code>@RestController</code> -&gt; class-level, @Controller + @Responsebody, just return string.<br>  <code>@Controller</code> -&gt; class-level<br>  <code>@Responsebody</code> -&gt; method-level, return string instead of model.<br>  <code>GetMapping(xx)</code> -&gt; @RequestMapping(xx, method=get).</p>
</li>
</ul>
]]></content>
      <categories>
        <category>spring</category>
      </categories>
      <tags>
        <tag>spring</tag>
        <tag>spring boot</tag>
      </tags>
  </entry>
  <entry>
    <title>springcloud(1)-multiple modules</title>
    <url>/2019/07/31/spring/springcloud-1-multiple-modules/</url>
    <content><![CDATA[<p>spring cloud多模块工程框架的搭建</p>
<a id="more"></a>
<h3 id="1-tree"><a href="#1-tree" class="headerlink" title="(1) tree"></a>(1) tree</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── consumer</span><br><span class="line">│   ├── pom.xml</span><br><span class="line">│   ├── src</span><br><span class="line">├── pom.xml</span><br><span class="line">├── server</span><br><span class="line">│   ├── pom.xml</span><br><span class="line">│   ├── src</span><br><span class="line">│   └── target</span><br><span class="line">└── user</span><br><span class="line">    ├── pom.xml</span><br><span class="line">    ├── src</span><br></pre></td></tr></table></figure>
<h3 id="2-parent-pom-xml"><a href="#2-parent-pom-xml" class="headerlink" title="(2) parent pom.xml"></a>(2) parent pom.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>multimodule<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.11.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>user<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>server<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>consumer<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>Dalston.SR5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="2-server-pom-xml"><a href="#2-server-pom-xml" class="headerlink" title="(2) server pom.xml"></a>(2) server pom.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>multimodule<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>&gt;</span>../pom.xml<span class="tag">&lt;/<span class="name">relativePath</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="3-user-pom-xml"><a href="#3-user-pom-xml" class="headerlink" title="(3) user pom.xml"></a>(3) user pom.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>multimodule<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>user<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="4-consumer-pom-xml"><a href="#4-consumer-pom-xml" class="headerlink" title="(4) consumer pom.xml"></a>(4) consumer pom.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>multimodule<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>consumer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;artifactId&gt;spring-cloud-starter-feign&lt;/artifactId&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;artifactId&gt;spring-cloud-starter-eureka&lt;/artifactId&gt;--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-feign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>spring</category>
      </categories>
      <tags>
        <tag>spring</tag>
        <tag>sprng cloud</tag>
      </tags>
  </entry>
  <entry>
    <title>springcloud(3)-eureka provider</title>
    <url>/2019/07/31/spring/springcloud-3-eureka-provider/</url>
    <content><![CDATA[<p>微服务提供者的demo</p>
<a id="more"></a>
<h3 id="1-pom-xml-starter"><a href="#1-pom-xml-starter" class="headerlink" title="(1) pom.xml starter"></a>(1) pom.xml starter</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="2-application-yml"><a href="#2-application-yml" class="headerlink" title="(2) application.yml"></a>(2) application.yml</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8082</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    service-url:</span></span><br><span class="line"><span class="attr">      default-zone:</span> <span class="attr">http://admin:admin@localhost:8761/eureka/</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">user</span></span><br></pre></td></tr></table></figure>
<h3 id="3-Main-Application"><a href="#3-Main-Application" class="headerlink" title="(3) Main Application"></a>(3) Main Application</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.user;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.EnableEurekaClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyClient</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(MyClient.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/client/user"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">revertName</span><span class="params">(String targetName)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hello 11 "</span>+targetName;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>@EnableEurekaClient</code> -&gt; enable eureka server to find this provider.<br><code>@EnableDiscoveryClient</code> -&gt; enable server to find this provider. (eureka, zookeeper)</p>
]]></content>
      <categories>
        <category>spring</category>
      </categories>
      <tags>
        <tag>spring</tag>
        <tag>spring cloud</tag>
      </tags>
  </entry>
  <entry>
    <title>springcloud(2)-eureka server</title>
    <url>/2019/07/31/spring/springcloud-2-eureka-server/</url>
    <content><![CDATA[<p>spring cloud 项目 eureka server。<br>eureka是netflix子项目的服务治理框架，是spring cloud微服务治理框架的一种实现。<br>eureka提供了服务发现，断路器，智能路由，客户端负载均衡等功能。</p>
<a id="more"></a>
<p>微服务的高可用需要微服务治理框架（服务发现，断路器【服务降级，线程隔离，熔断】，只能路由，客户端负载均衡），配置中心，服务跟踪，消息中间件等<br>熔断依赖服务降级的配置，目前使用的feign已经集成了客户端负载均衡和断路器功能，当然一般可能没有服务降级的处理。<br>智能路由，提供服务网管的功能，可以同意管理微服务网络里的所有请求，执行同意的鉴权，校验等操作，免去了各个微服务校验的拦截器过滤器逻辑，免掉了重复的校验逻辑。</p>
<h3 id="1-pom-xml-starter"><a href="#1-pom-xml-starter" class="headerlink" title="(1) pom.xml starter"></a>(1) pom.xml starter</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="2-application-yml"><a href="#2-application-yml" class="headerlink" title="(2) application.yml"></a>(2) application.yml</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8761</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  instance:</span></span><br><span class="line"><span class="attr">    hostname:</span> <span class="string">localhost</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    register-with-eureka:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    fetchRegistry:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    service-url:</span></span><br><span class="line"><span class="attr">      default-zone:</span> <span class="attr">http://admin:admin@localhost:8761/eureka/</span></span><br><span class="line"><span class="attr">  server:</span></span><br><span class="line"><span class="attr">    enable-self-preservation:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    registry-sync-retry-wait-ms:</span> <span class="number">10000</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">server</span></span><br><span class="line"><span class="attr">security:</span></span><br><span class="line"><span class="attr">  basic:</span></span><br><span class="line"><span class="attr">    enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  user:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">admin</span></span><br><span class="line"><span class="attr">    password:</span> <span class="string">admin</span></span><br></pre></td></tr></table></figure>
<p>register-with-eureka: false  —&gt;  don’t register server itself as a service provider<br>fetchRegistry: false —&gt; don’t get server info as a service consumer<br>enable-self-preservation: false —&gt; close self preservation, Just for test.</p>
<h3 id="3-Main-Application"><a href="#3-Main-Application" class="headerlink" title="(3) Main Application"></a>(3) Main Application</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.server;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;</span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableEurekaServer</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyServer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(MyServer.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>@EnableEurekaServer</code> -&gt; start as an eureka server</p>
]]></content>
      <categories>
        <category>spring</category>
      </categories>
      <tags>
        <tag>spring</tag>
        <tag>spring cloud</tag>
        <tag>eureka</tag>
      </tags>
  </entry>
  <entry>
    <title>springmvc4 url pattern for 404</title>
    <url>/2019/07/31/spring/springmvc4-url-pattern-for-404/</url>
    <content><![CDATA[<p>配置springmvc拦截所有请求，不会放行静态资源的url请求。</p>
<a id="more"></a>
<p>springmvc 4.3.8 + html</p>
<p>We configure dispatcherservlet url-pattern in web.xml.<br>We hope to intercept all requests by this config. </p>
<p>(1) put all static resources into WEB-INF –&gt; reject all request for static resource by url. </p>
<p>(2) web.xml<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:spring-*.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- "/" or "/*" intercept all requests--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>(3) config spring-mvc.xml<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- scan all controllers in base-package --&gt;</span><br><span class="line">&lt;context:component-scan base-package=&quot;com.fc.test.controller&quot;/&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tell spring to deal annotations in controllers --&gt;</span><br><span class="line">&lt;mvc:annotation-driven/&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- allow controllers visit static resources in WEB-INF --&gt;</span><br><span class="line">&lt;mvc:default-servlet-handler/&gt;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>spring</category>
      </categories>
      <tags>
        <tag>spring</tag>
      </tags>
  </entry>
  <entry>
    <title>springcloud(4)-eureka consumer</title>
    <url>/2019/07/31/spring/springcloud-4-eureka-consumer/</url>
    <content><![CDATA[<p>服务消费者demo。<br>feign集成了hystrix，可以在feign接口上写falllback逻辑，fallback指向的实现类就是降级的逻辑。</p>
<a id="more"></a>
<h3 id="1-pom-xml-starter"><a href="#1-pom-xml-starter" class="headerlink" title="(1) pom.xml starter"></a>(1) pom.xml starter</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;artifactId&gt;spring-cloud-starter-feign&lt;/artifactId&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;artifactId&gt;spring-cloud-starter-eureka&lt;/artifactId&gt;--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-feign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="2-application-yml"><a href="#2-application-yml" class="headerlink" title="(2) application.yml"></a>(2) application.yml</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8083</span></span><br><span class="line"></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    service-url:</span></span><br><span class="line"><span class="attr">      default-zone:</span> <span class="attr">http://localhost:8761/eureka/</span></span><br></pre></td></tr></table></figure>
<h3 id="3-Main-Application"><a href="#3-Main-Application" class="headerlink" title="(3) Main Application"></a>(3) Main Application</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.consumer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.EnableEurekaClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.feign.EnableFeignClients;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="comment">//@EnableDiscoveryClient</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="meta">@EnableFeignClients</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyConsumer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(MyConsumer.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><figcaption><span>-> enable to find service</span></figcaption><table><tr><td class="code"><pre><span class="line">```@EnableFeignClients``` -&gt; enable to use service by feign</span><br><span class="line"></span><br><span class="line">### (4) controller</span><br><span class="line">```java</span><br><span class="line">package com.example.consumer.controller;</span><br><span class="line"></span><br><span class="line">import com.example.consumer.service.IEurekaService;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line">@RestController</span><br><span class="line">@RequestMapping(&quot;/consumer&quot;)</span><br><span class="line">public class CosumerController &#123;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    private IEurekaService iEurekaService;</span><br><span class="line"></span><br><span class="line">    @GetMapping(&quot;/test&quot;)</span><br><span class="line">    public String testConsumer5(String targetName) &#123;</span><br><span class="line">        return iEurekaService.getUser(targetName);</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<h3 id="5-service"><a href="#5-service" class="headerlink" title="(5) service"></a>(5) service</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.consumer.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.feign.FeignClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="meta">@FeignClient</span>(<span class="string">"user"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IEurekaService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/client/user"</span>, method = RequestMethod.GET)</span><br><span class="line">    <span class="function">String <span class="title">getUser</span><span class="params">(@RequestParam(<span class="string">"targetName"</span>)</span> String targetName)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Notice: </span><br><span class="line">Must use @RequestMapping.</span><br><span class="line">@GetMapping and other @&#123;Method&#125;Mapping are not supported in Feign service.</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>spring</category>
      </categories>
      <tags>
        <tag>spring</tag>
        <tag>spring cloud</tag>
        <tag>feign</tag>
      </tags>
  </entry>
  <entry>
    <title>结果集返回类型和注解说明</title>
    <url>/2019/07/31/spring/%E7%BB%93%E6%9E%9C%E9%9B%86%E8%BF%94%E5%9B%9E%E7%B1%BB%E5%9E%8B%E5%92%8C%E6%B3%A8%E8%A7%A3%E8%AF%B4%E6%98%8E/</url>
    <content><![CDATA[<p>controller不同注解对结果的影响。</p>
<a id="more"></a>
<p>(1) spring的返回类型和注解</p>
<ul>
<li><p>controller</p>
<p>  <code>@Controller</code> 和 <code>@RestController</code></p>
</li>
<li><p>结果注解</p>
<p>  <code>@ResponseBody</code></p>
</li>
<li><p>结果返回类型 </p>
<p>  <code>String</code>和<code>ModelAndView</code></p>
</li>
</ul>
<p>(2) 组合</p>
<ul>
<li><p><code>@Controller</code> </p>
<p>  返回的string结果会被视图解析器解析为视图，使用<code>@ResponseBody</code>注解才返回string.</p>
</li>
<li><p><code>@RestController</code></p>
<p>  相当于<code>@Controller</code>和<code>@ResponseBody</code>组合的结果</p>
</li>
<li><p><code>ModelAndView</code></p>
<p>  该类型返回结果使用视图解析器解析为view</p>
</li>
</ul>
]]></content>
      <categories>
        <category>spring</category>
      </categories>
      <tags>
        <tag>spring</tag>
      </tags>
  </entry>
  <entry>
    <title>(1)-numpy api</title>
    <url>/2019/07/25/tensorflow/1-numpy-api/</url>
    <content><![CDATA[<p>numpy 常用的一些接口</p>
<a id="more"></a>
<h3 id="1-random"><a href="#1-random" class="headerlink" title="1. random"></a><strong>1. random</strong></h3><ul>
<li><h4 id="1-1-np-random-rand-d0-d1-d2…"><a href="#1-1-np-random-rand-d0-d1-d2…" class="headerlink" title="1.1 np.random.rand(d0,d1,d2…)"></a>1.1 np.random.rand(d0,d1,d2…)</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dx is the length of each dimension, and count(dx) is the shape of the array;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="2-float32"><a href="#2-float32" class="headerlink" title="2. float32()"></a><strong>2. float32()</strong></h3><ul>
<li><h4 id="2-1-np-float32-narray"><a href="#2-1-np-float32-narray" class="headerlink" title="2.1 np.float32(narray)"></a>2.1 np.float32(narray)</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">change all element type to float32 and return a new narray;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="3-dot-narray-x-y-narray-y-z"><a href="#3-dot-narray-x-y-narray-y-z" class="headerlink" title="3. dot(narray(x  y),narray(y  z))"></a><strong>3. dot(narray(x <em> y),narray(y </em> z))</strong></h3><p>return x * z matrix</p>
]]></content>
      <categories>
        <category>tensorflow</category>
      </categories>
      <tags>
        <tag>tensorflow</tag>
        <tag>python</tag>
        <tag>numpy</tag>
      </tags>
  </entry>
  <entry>
    <title>(2)-tensorflow api</title>
    <url>/2019/07/25/tensorflow/2-tensorflow-api/</url>
    <content><![CDATA[<p>tensorflow 常用的api</p>
<a id="more"></a>
<h3 id="1-data-object"><a href="#1-data-object" class="headerlink" title="1. data object"></a><strong>1. data object</strong></h3><p>tensor里使用的数据类型有３种</p>
<ul>
<li><h4 id="1-1-constant"><a href="#1-1-constant" class="headerlink" title="1.1 constant"></a>1.1 constant</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tf.constant(initalValue,dtype)</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="1-2-variable"><a href="#1-2-variable" class="headerlink" title="1.2 variable"></a>1.2 variable</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">    tf.Variable(initialValue,dtype)</span><br><span class="line">    # 需要session执行initializer初始化变量，然后变量才能被session使用</span><br><span class="line">    ```        </span><br><span class="line"></span><br><span class="line">+ #### 1.3 placeholder</span><br></pre></td></tr></table></figure>
<p>  tf.placeholder(dtype)</p>
<h1 id="可以在session执行时指定placeholder的值"><a href="#可以在session执行时指定placeholder的值" class="headerlink" title="可以在session执行时指定placeholder的值"></a>可以在session执行时指定placeholder的值</h1>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">```python</span><br><span class="line">a = tf.placeholder(tf.float32)</span><br><span class="line">b = tf.placeholder(tf.float32)</span><br><span class="line">res = a+b</span><br><span class="line">print(session.run(res,&#123;a:1,b:2.5&#125;)</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="2-tensor-object-gt-operation"><a href="#2-tensor-object-gt-operation" class="headerlink" title="2. tensor object -&gt; operation"></a><strong>2. tensor object -&gt; operation</strong></h3><p>tensor就是数据间的关系组合（可以理解为由数据和运算符构成的多项式集合）<br>比如上边的res=a+b，res就是一个多项式，它就是一个tensor，或者说是一个tensor-node, tensor-node和数据可以组成更复杂的tensor(node), session可以执行这个tensor得到结果。<br>通过组合tensor可以构建出训练流程。<br>输入数据-&gt;构建激活值公式-&gt;构建输出公式-&gt;构建损失函数-&gt;构建损失函数收敛规则，既最终的train tensor -&gt; session执行train tensor，底层会根据tensor规则训练模型。</p>
<h3 id="3-optimizer-object"><a href="#3-optimizer-object" class="headerlink" title="3. optimizer object"></a><strong>3. optimizer object</strong></h3><p>optimize loss function<br>tf提供多种optimizer来最小化loss function，而不用我们自己实现。</p>
<h3 id="4-session-run"><a href="#4-session-run" class="headerlink" title="4. session.run()"></a><strong>4. session.run()</strong></h3><ul>
<li><h4 id="4-1-session-run-tensor"><a href="#4-1-session-run-tensor" class="headerlink" title="4.1 session.run(tensor)"></a>4.1 session.run(tensor)</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">execute operation</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="4-2-session-run-data"><a href="#4-2-session-run-data" class="headerlink" title="4.2 session.run(data)"></a>4.2 session.run(data)</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">convert tensorflow data to python data</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="4-3-session-run-otherTFObject"><a href="#4-3-session-run-otherTFObject" class="headerlink" title="4.3 session.run(otherTFObject)"></a>4.3 session.run(otherTFObject)</h4><p>1) init variables<br>  session.run(init)</p>
</li>
</ul>
<h3 id="5-other-api"><a href="#5-other-api" class="headerlink" title="5. other api"></a><strong>5. other api</strong></h3><h3 id="6-demo"><a href="#6-demo" class="headerlink" title="6. demo"></a><strong>6. demo</strong></h3>]]></content>
      <categories>
        <category>tensorflow</category>
      </categories>
      <tags>
        <tag>tensorflow</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Tomcat9 users and roles, Remote deploy</title>
    <url>/2019/07/31/tomcat/Tomcat9-users-and-roles-Remote-deploy/</url>
    <content><![CDATA[<p>tomcat9的管理账户和角色相比tomcat7有变化。角色权限区分更细。</p>
<a id="more"></a>
<p>Since tomcat7, roles come with different permission.<br>admin-gui, admin-script, manager-gui, manager-script, manager-jmx and manager-status are in place of admin and manager.<br>Manager is for deploy.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">**Host Manager**</span><br><span class="line">    admin-gui - allows access to the HTML GUI</span><br><span class="line">    admin-script - allows access to the text interface</span><br><span class="line"></span><br><span class="line">**html manager gui for project**</span><br><span class="line">    manager-gui - allows access to the HTML GUI and the status pages</span><br><span class="line">****</span><br><span class="line">**manager for remote deploy**</span><br><span class="line">    manager-script - allows access to the text interface and the status pages</span><br><span class="line">    (manager-script will be used in Jenkins and tomcat-maven plugin. </span><br><span class="line">    For security, script shouldn&apos;t be used with gui together.)</span><br><span class="line">****</span><br><span class="line">    manager-jmx - allows access to the JMX proxy and the status pages</span><br><span class="line">    manager-status - allows access to the status pages only</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>tomcat</category>
      </categories>
      <tags>
        <tag>tomcat</tag>
        <tag>tomcat9</tag>
      </tags>
  </entry>
  <entry>
    <title>(3) matplotlib api</title>
    <url>/2019/07/25/tensorflow/3-matplotlib-api/</url>
    <content><![CDATA[<p>matplotlib 常用api</p>
<a id="more"></a>
<h3 id="1-点图-plot"><a href="#1-点图-plot" class="headerlink" title="1. 点图 plot()"></a><strong>1. 点图 plot()</strong></h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">y = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">plt.plot(x,y)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<h3 id="2-柱形图-bar"><a href="#2-柱形图-bar" class="headerlink" title="2. 柱形图 bar()"></a><strong>2. 柱形图 bar()</strong></h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">y = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">plt.bar(x,y)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<h3 id="3-分区"><a href="#3-分区" class="headerlink" title="3. 分区"></a><strong>3. 分区</strong></h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">y = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">plt.subplot(<span class="number">4</span>,<span class="number">4</span>,<span class="number">1</span>) </span><br><span class="line">plt.plot(x,y)</span><br><span class="line"></span><br><span class="line">x2 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">y2 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">plt.subplot(<span class="number">4</span>,<span class="number">4</span>,<span class="number">2</span>)</span><br><span class="line">plt.bar(x2,y2)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<h3 id="4-刻度"><a href="#4-刻度" class="headerlink" title="4. 刻度"></a><strong>4. 刻度</strong></h3><ul>
<li><h4 id="4-1-刻度"><a href="#4-1-刻度" class="headerlink" title="4.1 刻度"></a>4.1 刻度</h4>  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = np.linspace(-np.pi, np.pi, <span class="number">256</span>,endpoint=<span class="literal">True</span>)</span><br><span class="line">y = np.sin(x)</span><br><span class="line"></span><br><span class="line">plt.plot(x, y)</span><br><span class="line">plt.xticks([-np.pi, -np.pi/<span class="number">2</span>, <span class="number">0</span>, np.pi/<span class="number">2</span>, np.pi])</span><br><span class="line">plt.yticks([<span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="4-2-刻度替换"><a href="#4-2-刻度替换" class="headerlink" title="4.2 刻度替换"></a>4.2 刻度替换</h4><p>  像np.pi这样的数值可以替换为圆周率符号更为直观<br>  此处替换为 LaTex</p>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x = np.linspace(-np.pi, np.pi, <span class="number">256</span>,endpoint=<span class="literal">True</span>)</span><br><span class="line">y = np.sin(x)</span><br><span class="line"></span><br><span class="line">plt.plot(x, y)</span><br><span class="line">plt.xticks([-np.pi, -np.pi/<span class="number">2</span>, <span class="number">0</span>, np.pi/<span class="number">2</span>, np.pi],</span><br><span class="line">        [<span class="string">r'$-\pi$'</span>, <span class="string">r'$-\pi/2$'</span>, <span class="string">r'$0$'</span>, <span class="string">r'$+\pi/2$'</span>, <span class="string">r'$+\pi$'</span>])</span><br><span class="line">plt.yticks([<span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">        [<span class="string">r'$-1$'</span>, <span class="string">r'$0$'</span>, <span class="string">r'$+1$'</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="5-坐标轴上下限"><a href="#5-坐标轴上下限" class="headerlink" title="5. 坐标轴上下限"></a><strong>5. 坐标轴上下限</strong></h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">plt.ylim(<span class="number">-1.0</span>, <span class="number">1.0</span>)</span><br></pre></td></tr></table></figure>
<h3 id="6-线条颜色-粗细-样式"><a href="#6-线条颜色-粗细-样式" class="headerlink" title="6. 线条颜色, 粗细, 样式"></a><strong>6. 线条颜色, 粗细, 样式</strong></h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 可以简写颜色和样式, 比如bo 表示蓝色blue和实心圆样式, 样式还有很多可以查表</span></span><br><span class="line">plot(x, y, color=<span class="string">"blue"</span>, linewidth=<span class="number">2.5</span>, linestyle=<span class="string">"-"</span>)</span><br></pre></td></tr></table></figure>
<h3 id="7-坐标轴-脊柱-spines"><a href="#7-坐标轴-脊柱-spines" class="headerlink" title="7. 坐标轴 脊柱 spines"></a><strong>7. 坐标轴 脊柱 spines</strong></h3><p>通过隐藏矩形边框的top和right,把left和bottom位移就可以构造出象限坐标轴, 脊柱<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">ax = plt.gca()</span><br><span class="line">ax.spines[<span class="string">'right'</span>].set_color(<span class="string">'none'</span>)</span><br><span class="line">ax.spines[<span class="string">'top'</span>].set_color(<span class="string">'none'</span>)</span><br><span class="line">ax.xaxis.set_ticks_position(<span class="string">'bottom'</span>)</span><br><span class="line">ax.spines[<span class="string">'bottom'</span>].set_position((<span class="string">'data'</span>,<span class="number">0</span>))</span><br><span class="line">ax.yaxis.set_ticks_position(<span class="string">'left'</span>)</span><br><span class="line">ax.spines[<span class="string">'left'</span>].set_position((<span class="string">'data'</span>,<span class="number">0</span>))</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<h3 id="8-坐标轴-名称-和-图例"><a href="#8-坐标轴-名称-和-图例" class="headerlink" title="8. 坐标轴 名称 和 图例"></a><strong>8. 坐标轴 名称 和 图例</strong></h3><ul>
<li><h4 id="8-1-坐标轴名称"><a href="#8-1-坐标轴名称" class="headerlink" title="8.1 坐标轴名称"></a>8.1 坐标轴名称</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">plt.xlabel(&quot;xaxis&quot;)</span><br><span class="line">plt.ylabel(&quot;yaxis&quot;)</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="8-2-图例"><a href="#8-2-图例" class="headerlink" title="8.2 图例"></a>8.2 图例</h4><ul>
<li><h5 id="8-2-1-为所有plot-bar-scatter绘制到图例"><a href="#8-2-1-为所有plot-bar-scatter绘制到图例" class="headerlink" title="8.2.1 为所有plot/bar/scatter绘制到图例"></a>8.2.1 为所有plot/bar/scatter绘制到图例</h5>  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 把已有的作为对象</span></span><br><span class="line">plt.plot(x, y, label=<span class="string">'sin'</span>)</span><br><span class="line">plt.plot(x, y2, label=<span class="string">'cos'</span>)</span><br><span class="line">plt.legend(loc=<span class="string">'upper left'</span>)</span><br></pre></td></tr></table></figure>
</li>
<li><h5 id="8-2-2-为指定的对象绘制图例"><a href="#8-2-2-为指定的对象绘制图例" class="headerlink" title="8.2.2 为指定的对象绘制图例"></a>8.2.2 为指定的对象绘制图例</h5><p>  注意 对象命名后加上”<code>,</code>“</p>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line">mysin, = plt.plot(x, y, label=<span class="string">'sin'</span>)</span><br><span class="line">mycos, = plt.plot(x, y2, label=<span class="string">'cos'</span>)</span><br><span class="line">plt.legend([mysin], [<span class="string">'mysin'</span>], loc=<span class="string">'upper left'</span>)</span><br></pre></td></tr></table></figure>
</li>
<li><h5 id="8-2-3-为特殊点加注释"><a href="#8-2-3-为特殊点加注释" class="headerlink" title="8.2.3 为特殊点加注释"></a>8.2.3 为特殊点加注释</h5>  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 选取x轴一点 </span></span><br><span class="line">t = <span class="number">2</span>*np.pi/<span class="number">3</span></span><br><span class="line"><span class="comment"># 画出该点垂直直线与sin曲线的交点</span></span><br><span class="line">plt.plot([t,t],[<span class="number">0</span>,np.sin(t)],color=<span class="string">'red'</span>,linewidth=<span class="number">2.5</span>,linestyle=<span class="string">'--'</span>)</span><br><span class="line"><span class="comment"># 使用离散点api画出该点的sin函数坐标</span></span><br><span class="line">plt.scatter([t,],[np.sin(t),],<span class="number">50</span>, color=<span class="string">'red'</span>)</span><br><span class="line"><span class="comment"># 注释, 第一个参数是注释内容, 第二个参数是坐标, arrowprops指定了箭头和弧度</span></span><br><span class="line">plt.annotate(<span class="string">r'$\sin(\frac&#123;2\pi&#125;&#123;3&#125;)=\frac&#123;\sqrt&#123;3&#125;&#125;&#123;2&#125;$'</span>,</span><br><span class="line">            xy=(t, np.sin(t)), xycoords=<span class="string">'data'</span>,</span><br><span class="line">            xytext=(+<span class="number">10</span>, +<span class="number">30</span>), textcoords=<span class="string">'offset points'</span>, fontsize=<span class="number">16</span>,</span><br><span class="line">            arrowprops=dict(arrowstyle=<span class="string">"-&gt;"</span>, connectionstyle=<span class="string">"arc3, rad=.2"</span>))</span><br></pre></td></tr></table></figure>
</li>
<li><h5 id="8-2-4-其他图像类型"><a href="#8-2-4-其他图像类型" class="headerlink" title="8.2.4 其他图像类型"></a>8.2.4 其他图像类型</h5>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 横向柱形图</span><br><span class="line">plt.barh()</span><br><span class="line"># 饼图</span><br><span class="line">plt.pie()</span><br><span class="line"># 等高图</span><br><span class="line">plt.contour()</span><br><span class="line"># 图片</span><br><span class="line">plt.imshow()</span><br><span class="line"># 颜色条</span><br><span class="line">plt.colorbar()</span><br><span class="line"># 3D等</span><br></pre></td></tr></table></figure>
</li>
<li><h5 id="8-2-5-重要的api"><a href="#8-2-5-重要的api" class="headerlink" title="8.2.5 重要的api"></a>8.2.5 重要的api</h5></li>
<li><h5 id="8-2-6-figure"><a href="#8-2-6-figure" class="headerlink" title="8.2.6 figure()"></a>8.2.6 figure()</h5><p>  可以用于窗口属性设置</p>
  <figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment"># num 图像数量</span></span><br><span class="line"><span class="comment"># figsize 图片长宽</span></span><br><span class="line"><span class="comment"># dpi 图片分辨率</span></span><br><span class="line"><span class="comment"># 其他参数可以用到再查</span></span><br><span class="line">figure(num=None, figsize=None, dpi=None, facecolor=None, edgecolor=None, frameon=True, FigureClass=&lt;class 'matplotlib.figure.Figure'&gt;, clear=False, **kwargs)</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>tensorflow</category>
      </categories>
      <tags>
        <tag>tensorflow</tag>
        <tag>python</tag>
        <tag>matplotlib</tag>
      </tags>
  </entry>
  <entry>
    <title>tomcat Chinese characters gibberish in logs</title>
    <url>/2019/07/31/tomcat/tomcat-Chinese-characters-gibberish-in-logs/</url>
    <content><![CDATA[<p>tomcat设置utf8编码解决日志乱码。</p>
<a id="more"></a>
<ul>
<li>tomcat_home/bin/catalina.sh<br>inject one line<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">JAVA_OPTS=&quot;$JAVA_OPTS -Dfile.encoding=UTF-8 -Dsun.jnu.encoding=UTF-8&quot;</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>tomcat</category>
      </categories>
      <tags>
        <tag>tomcat</tag>
        <tag>中文乱码</tag>
      </tags>
  </entry>
  <entry>
    <title>tomcat context path</title>
    <url>/2019/07/31/tomcat/tomcat-context-path/</url>
    <content><![CDATA[<p>tomcat容器结构简介。<br>通过配置context(工程)的相对地址，在浏览器可以免去输入工程名访问。</p>
<a id="more"></a>
<p>This config lead you to visit your web site without figuring out project name.<br>before: <a href="http://localhost:8080/project_name" target="_blank" rel="noopener">http://localhost:8080/project_name</a><br>now: <a href="http://localhost:8080" target="_blank" rel="noopener">http://localhost:8080</a></p>
<h3 id="1-tomcat容器结构"><a href="#1-tomcat容器结构" class="headerlink" title="1. tomcat容器结构 "></a><strong>1. tomcat容器结构 </strong></h3><p>tomcat容器组成在server.xml里可以看到。<br>一个tomcat实例只有一个server。<br>server可以包含多个service。<br>一个service可以包含多个connector，多个executor，一个engine container。</p>
<p>connector是连接器，可以根据监听不同的接口，并把请求转发到engine。所以不同的协议可以使用不同的connector。</p>
<p>engine，是container的子类，engine可以包含其他多个host container。<br>host，host是engine的子类，可以包含多个context。host可以配置访问域名估计是。<br>context是host的子类，可以包含多个wrapper。<br>wrapper是 context的子类，一个wrapper代表了一个servlet。context管理多个wrapper，一个context对应了一个web工程。</p>
<ul>
<li>tomcat_home/config/server.xml<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Host</span> <span class="attr">autoDeploy</span>=<span class="string">"false"</span> <span class="attr">...</span> &gt;</span></span><br><span class="line">      ...</span><br><span class="line">      <span class="tag">&lt;<span class="name">Context</span> <span class="attr">path</span>=<span class="string">""</span> <span class="attr">docBase</span>=<span class="string">"project_name"</span> <span class="attr">reloadable</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">      ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">Host</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><code>autoDeploy=false</code>: A context cotext could be effective only once. An update including deleting the project in docBase will make it lose effect.</p>
<p><code>docBase</code>: It can be absolute or relative path. A relative path is to <code>tomcat_home/webapps/</code>.</p>
]]></content>
      <categories>
        <category>tomcat</category>
      </categories>
      <tags>
        <tag>tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title>tomcat http2</title>
    <url>/2019/07/31/tomcat/tomcat-http2/</url>
    <content><![CDATA[<p>http2协议简介。<br>tomcat配置http2。</p>
<a id="more"></a>
<p>在http1里，浏览器对一个地址发起访问，通常建立4~6个连接，这样就可以同时请求多个资源，就能对一个页面上的多个静态文件同时加载。<br>有两个问题<br>(1) 即使是多个连接，仍然不够<br>(2) 在服务器端，一个连接对应一个线程，所以建立和销毁一个连接是非常昂贵的（握手和线程资源），而传输非常短暂，导致大量的连接/线程被反复的建立和销毁</p>
<p>http1 针对这两个问题的解决方法<br>(1) 压缩、合并静态资源，不再细分开发和传输的压缩<br>所导致的问题：<br>1、尽管压缩与合并是良好的习惯，但多文件仍然无法避免<br>(2) head of line and keep alive<br>应该减少线程的建立与销毁的耗时，复用线程是一个好主意，因此就出现了 keep alive，延长客户端和服务端连接的存活时间。<br>但是http1有个重大缺陷—head of line，所有的数据包都是按顺序发送的，如果一个包出错，这个连接里后续的包都得等着</p>
<p>http2 的解决方案<br>从http1的两个解决方法来看，第一需要多个连接的问题仍然没有解决，第二单个连接阻塞的问题没有解决。<br>而在http2，这些问题已经解决，连接复用，多个文件请求也可以快速完成。<br>(1) 在http&gt;tcp中间加一个数据的二进制分帧操作取代http1的文本传输，使数据可以乱序发送，不会再阻塞<br>(2) 因为数据的实际传输时间非常短暂，一个http1连接大部分时间都非常空闲，http2得益于二进制帧，这些空闲时间也可以被用于传输，所以可以在一个连接里传输大量数据，不再需要更多的连接。<br>(3) http2提供了头部压缩，解决http1时代的大头问题<br>(4) http2提供了服务端推送，服务器可以主动向客户端推送资源，而不用等待客户端的请求到来。</p>
<p>tomcat的配置</p>
]]></content>
      <categories>
        <category>tomcat</category>
      </categories>
      <tags>
        <tag>tomcat</tag>
        <tag>http2</tag>
      </tags>
  </entry>
  <entry>
    <title>tomcat https+domain+port 80</title>
    <url>/2019/07/31/tomcat/tomcat-https-domain-port-80/</url>
    <content><![CDATA[<p>为tomcat配置域名。<br>tomcat的host可以配置域名。</p>
<a id="more"></a>
<p>(1) generate ssl certificate</p>
<p><code>keytool -genkeypair -alias &quot;tomcat&quot; -keyalg &quot;RSA&quot; -keystore &quot;/home/admin/tomcat.keystore&quot;</code><br>Notice : remeber first name and last name and password during the generating.</p>
<p>(2)tomcat_home/config/server.xml</p>
<ul>
<li><p>https and port 80</p>
<p>1) Port <code>80</code> is the default port for http connection. Config  <code>Connector</code> <code>port</code> to 80. And then you don’t need to specify the port in your website.</p>
<p>2) https service need port <code>443</code>. So, redirect your http connection to port 443 (original setting is 8443). Config the <code>Connector</code> <code>redirectPort</code> to 443.<br>Default setting about the 443 Connector is commented and you have to uncomment it.<br>Other connectors’ <code>redirectPort=8443</code> also need to be changed to 443. </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">"80"</span> <span class="attr">URIEncoding</span>=<span class="string">"UTF-8"</span> <span class="attr">protocol</span>=<span class="string">"HTTP/1.1"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">connectionTimeout</span>=<span class="string">"20000"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">redirectPort</span>=<span class="string">"443"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Connector</span></span></span><br><span class="line"><span class="tag">           <span class="attr">protocol</span>=<span class="string">"org.apache.coyote.http11.Http11NioProtocol"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">port</span>=<span class="string">"443"</span> <span class="attr">maxThreads</span>=<span class="string">"150"</span> <span class="attr">URIEncoding</span>=<span class="string">"UTF-8"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">scheme</span>=<span class="string">"https"</span> <span class="attr">secure</span>=<span class="string">"true"</span> <span class="attr">SSLEnabled</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">keystoreFile</span>=<span class="string">"server.keystore"</span> <span class="attr">keystorePass</span>=<span class="string">"test123"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">clientAuth</span>=<span class="string">"false"</span> <span class="attr">sslProtocol</span>=<span class="string">"TLS"</span>/&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>(3) domain</p>
<p>Domain is specified in <code>Host</code>.<br>And if you want to visit project without specifying project name, a <code>Conext</code> is required.</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Host</span> <span class="attr">name</span>=<span class="string">"www.abc.com"</span> <span class="attr">appBase</span>=<span class="string">"webapps"</span> <span class="attr">unpackWARs</span>=<span class="string">"true"</span> <span class="attr">autoDeploy</span>=<span class="string">"true"</span> <span class="attr">xmlValidation</span>=<span class="string">"false"</span> <span class="attr">xmlNamespaceAware</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="name">Context</span> <span class="attr">path</span>=<span class="string">""</span> <span class="attr">docBase</span>=<span class="string">"project1"</span> <span class="attr">reloadble</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Context</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">Host</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><code>docBase</code>: absolute path or relative path to <code>tomcat_home/webapps</code>.</p>
]]></content>
      <categories>
        <category>tomcat</category>
      </categories>
      <tags>
        <tag>tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title>tomcat readonly jsp注入</title>
    <url>/2019/07/31/tomcat/tomcat-readonly-jsp%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<p>tomcat readonly bug导致put和delete注入攻击。</p>
<a id="more"></a>
<p>在tomcat的conf/web.xml中<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>default<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.apache.catalina.servlets.DefaultServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>这个节点下可以配置readonly(该参数默认true，可能是拒绝put和delete请求)<br>true即防止注入。现在改为false。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;init-param&gt;</span><br><span class="line">        &lt;param-name&gt;readonly&lt;/param-name&gt;</span><br><span class="line">        &lt;param-value&gt;false&lt;/param-value&gt;</span><br><span class="line">&lt;/init-param&gt;</span><br></pre></td></tr></table></figure></p>
<p>这样就可以配置put/delete请求，具体可以通过chrome或者firefox的调试工具或者插件模拟，也可以用curl或者nc等命令行工具模拟。<br>使用chrome restlet配置一个注入：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//以下在webapps/ROOT/目录下创建test.txt，填入body指定的内容</span><br><span class="line">//可以指定其他工程的某个目录，上传一个jsp，之后就能直接访问</span><br><span class="line">METHOD: PUT</span><br><span class="line">http://localhost:8080/test.txt  </span><br><span class="line">Content-Length:  11</span><br><span class="line">Accept-Language: en-US</span><br><span class="line">BODY:  hello world</span><br></pre></td></tr></table></figure></p>
<p>使用chrome restlet配置一次删除:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">//删除指定工程下某个html</span><br><span class="line">METHOD: DELETE</span><br><span class="line">http://localhost:8080/testproject/test.html</span><br><span class="line">Content-Length:  11</span><br><span class="line">Accept-Language: en-US</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>tomcat</category>
      </categories>
      <tags>
        <tag>tomcat</tag>
        <tag>注入</tag>
      </tags>
  </entry>
  <entry>
    <title>tomcat shared.loader common jars in tomcat</title>
    <url>/2019/07/31/tomcat/tomcat-shared-loader-common-jars-in-tomcat/</url>
    <content><![CDATA[<p>tomcat项目jar包共享目录设置。</p>
<a id="more"></a>
<p>You can put your jars in a specified directory. Instead of packaging them into wars.</p>
<p>We set a jar scope as provided in a maven web project. This jar will not be packaged in to the war during install. And we specify a dir for shared.loader in catalina.properties.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">shared.loader=/home/admin/testlib,/home/admin/testlib/*.jar</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>tomcat</category>
      </categories>
      <tags>
        <tag>tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title>Manage Kernels not in dpkg list</title>
    <url>/2019/07/29/ubuntu/Manage-Kernels-not-in-dpkg-list/</url>
    <content><![CDATA[<p>管理不在dpkg列表里的内核。<br>通过源码安装的内核并不在dpkg管理范围内，管理的方式也不同。<br>另一篇里介绍过dpkg管理内核。</p>
<a id="more"></a>
<h3 id="1-delete-manully"><a href="#1-delete-manully" class="headerlink" title="1. delete manully"></a><strong>1. delete manully</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo rm /boot/abi-4.x-generic</span><br><span class="line">~:sudo rm /boot/config-4.x-generic</span><br><span class="line">~:sudo rm /boot/initrd.img-4.x-generic</span><br><span class="line">~:sudo rm /boot/System.map-4.x-generic</span><br><span class="line">~:sudo rm /boot/vmlinuz-4.x-generic</span><br><span class="line">~:sudo rm -rf /lib/modules/4.x-generic</span><br></pre></td></tr></table></figure>
<p>You need to remove image( /boot/ ) and modules(/lib/modules/).<br>Because we install image and modules in Updating;</p>
<h3 id="2-update-grub"><a href="#2-update-grub" class="headerlink" title="2. update grub"></a><strong>2. update grub</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo update-grub2</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
        <tag>kernel</tag>
        <tag>内核</tag>
      </tags>
  </entry>
  <entry>
    <title>build ko for kernel</title>
    <url>/2019/07/29/ubuntu/build-ko-for-kernel/</url>
    <content><![CDATA[<p>为内核添加新的驱动。</p>
<a id="more"></a>
<p>之前使用linux kernel源码编译新的内核替换旧内核。<br>现在，为内核添加设备驱动。<br>驱动程序作为内核模块，被内核加载。编译驱动源码生成ko，然后加载到内核里。</p>
<p>有两种方式生成ko<br>(1) 编译驱动源码时，使用kernel源码</p>
<p>(2) 编译驱动源码时，使用当前系统的kernel。<br>make menuconfig等命令</p>
<p>最后安装驱动模块(xxx.ko)</p>
]]></content>
      <categories>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
        <tag>kernel</tag>
        <tag>内核</tag>
        <tag>驱动</tag>
      </tags>
  </entry>
  <entry>
    <title>Manage kernels in dpkg list</title>
    <url>/2019/07/29/ubuntu/Manage-kernels-in-dpkg-list/</url>
    <content><![CDATA[<p>系统可以安装多内核，但开机只会加载默认的那个。<br>开机grub界面可以选择内核，不过单系统需要设置grub开机可见。<br>通过grub设置可以设置默认内核。通过dpkg删除多余的内核（通过dpkg安装的内核才可以使用dpkg管理）</p>
<a id="more"></a>
<h3 id="1-select-boot-kernel"><a href="#1-select-boot-kernel" class="headerlink" title="1. select boot kernel"></a><strong>1. select boot kernel</strong></h3><ul>
<li><h4 id="1-1-select-in-grub"><a href="#1-1-select-in-grub" class="headerlink" title="1.1 select in grub"></a>1.1 select in grub</h4><p>  When boot-up choose in grub <code>Advance Option</code>.<br>  <strong>Note:</strong> In sigle system,  grub will skipped when boot-up.<br>  The following steps will make it visiable.</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo vim /etc/default/grub</span><br></pre></td></tr></table></figure>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#GRUB_HIDDEN_TIMEOUT=0</span><br></pre></td></tr></table></figure>
<p>  This will make grub visible.</p>
</li>
</ul>
<h3 id="2-select-grub-boot-selection"><a href="#2-select-grub-boot-selection" class="headerlink" title="2. select grub boot selection"></a><strong>2. select grub boot selection</strong></h3><ul>
<li><h4 id="2-1-show-kernels"><a href="#2-1-show-kernels" class="headerlink" title="2.1 show kernels"></a>2.1 show kernels</h4></li>
<li><h4 id="2-2-change-grub"><a href="#2-2-change-grub" class="headerlink" title="2.2 change grub"></a>2.2 change grub</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo vim /etc/default/grub</span><br></pre></td></tr></table></figure>
<p>  /etc/default/grub</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GRUB_DEFAULT=0</span><br></pre></td></tr></table></figure>
<p>  change the number to which you want.</p>
</li>
<li><h4 id="2-3-update-grub"><a href="#2-3-update-grub" class="headerlink" title="2.3 update grub"></a>2.3 update grub</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo update-grub2</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-3-reboot-system"><a href="#2-3-reboot-system" class="headerlink" title="2.3 reboot system"></a>2.3 reboot system</h4></li>
</ul>
<h3 id="3-delete-old-kernel"><a href="#3-delete-old-kernel" class="headerlink" title="3. delete old kernel"></a><strong>3. delete old kernel</strong></h3><ul>
<li><h4 id="3-1-list-images"><a href="#3-1-list-images" class="headerlink" title="3.1 list images"></a>3.1 list images</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:dpkg -l|grep linux</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="3-2-remove"><a href="#3-2-remove" class="headerlink" title="3.2 remove"></a>3.2 remove</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo dpkg --purge linux-image-4.x-generic</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="3-3-update-grub"><a href="#3-3-update-grub" class="headerlink" title="3.3 update grub"></a>3.3 update grub</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo update-grub2</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <categories>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
        <tag>kernel</tag>
        <tag>内核</tag>
        <tag>grub</tag>
      </tags>
  </entry>
  <entry>
    <title>compile and install kernel</title>
    <url>/2019/07/29/ubuntu/compile-and-install-kernel/</url>
    <content><![CDATA[<p>linux内核源码编译和安装。<br>该过程可以向linux内核添加驱动，以及修改默认的内核配置。比如某些特殊网卡需要的内核配置。</p>
<a id="more"></a>
<h3 id="1-dependencies"><a href="#1-dependencies" class="headerlink" title="1. dependencies"></a><strong>1. dependencies</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo apt-get insall build-essential</span><br><span class="line"># install make-kpkg</span><br><span class="line">~:sudo apt-get install kernel-package</span><br><span class="line">~:sudo apt-get install libncurses5-dev</span><br><span class="line">~:sudo apt-get install bison flex libssl-dev</span><br></pre></td></tr></table></figure>
<h3 id="2-download-source-code"><a href="#2-download-source-code" class="headerlink" title="2. download source code"></a><strong>2. download source code</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo tar zJvf linux-kernel.tar.xz -C /usr/src</span><br><span class="line">~:cd /usr/src</span><br><span class="line">~:sudo ln -s linux-kernel/ linux</span><br></pre></td></tr></table></figure>
<h3 id="3-clean-scripts-and-config"><a href="#3-clean-scripts-and-config" class="headerlink" title="3. clean scripts and .config"></a><strong>3. clean scripts and .config</strong></h3><p>You need do this when you compile failed.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:cd linux</span><br><span class="line">~:sudo make mrproper</span><br></pre></td></tr></table></figure></p>
<h3 id="4-menuconfig"><a href="#4-menuconfig" class="headerlink" title="4. menuconfig"></a><strong>4. menuconfig</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo make menuconfig</span><br></pre></td></tr></table></figure>
<p>just save</p>
<h3 id="5-compile"><a href="#5-compile" class="headerlink" title="5. compile"></a><strong>5. compile</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo make-kpkg clean</span><br><span class="line">~:sudo make-kpkg --initrd --append-to-version=pcname kernel-image kernel-headers</span><br></pre></td></tr></table></figure>
<p><strong>Note:</strong> pcname must be characters in a-z and 0-9<br><strong>Note:</strong> Waiting for finishing.</p>
<h3 id="6-install-kernel"><a href="#6-install-kernel" class="headerlink" title="6. install kernel"></a><strong>6. install kernel</strong></h3><pre><code>~:cd /usr/src
~:sudo dpkg -i linux-image-xxx
~:sudo dpkg -i linux-headers-xxx
</code></pre><p>After install kernel, reboot system.</p>
]]></content>
      <categories>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
        <tag>kernel</tag>
        <tag>内核</tag>
      </tags>
  </entry>
  <entry>
    <title>max_user_watches</title>
    <url>/2019/07/29/ubuntu/max-user-watches/</url>
    <content><![CDATA[<p>max_user_watches参数限制了系统对活动文件监测数量的上限。<br>如果数值过小，ide工具(vscode等)可能失去对文件变化的监听，比如文件变化引起的git状态变化和webpack等工具的热加载。</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo vim /etc/sysctl.conf</span><br><span class="line">fs.inotify.max_user_watches=524288</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
        <tag>vscode</tag>
      </tags>
  </entry>
  <entry>
    <title>my ubuntu</title>
    <url>/2019/07/29/ubuntu/my-ubuntu/</url>
    <content><![CDATA[<p>本文介绍了ubuntu18的安装，报货单系统安装， 以及和win10并存的双系统安装。<br>一些常用的界面美化配置和常用软件，以及开发环境的安装。</p>
<a id="more"></a>
<h3 id="1-Install-Ubuntu-16-04-x64-under-UEFI"><a href="#1-Install-Ubuntu-16-04-x64-under-UEFI" class="headerlink" title="1. Install Ubuntu 16.04 x64 under UEFI"></a><strong>1. Install Ubuntu 16.04 x64 under UEFI</strong></h3><h4 id="1-1-windows-uefi-install-ubuntu"><a href="#1-1-windows-uefi-install-ubuntu" class="headerlink" title="1.1 windows uefi install ubuntu"></a><strong>1.1 windows uefi install ubuntu</strong></h4><h5 id="1-1-1-BIOS-settings"><a href="#1-1-1-BIOS-settings" class="headerlink" title="1.1.1 BIOS settings"></a><strong>1.1.1 BIOS settings</strong></h5><ul>
<li><h6 id="1-disable-secure-boot"><a href="#1-disable-secure-boot" class="headerlink" title="1. disable secure boot"></a>1. disable secure boot</h6></li>
<li><h6 id="2-usb-bootstrap"><a href="#2-usb-bootstrap" class="headerlink" title="2. usb bootstrap"></a>2. usb bootstrap</h6></li>
</ul>
<h5 id="1-1-2-reboot-and-install"><a href="#1-1-2-reboot-and-install" class="headerlink" title="1.1.2 reboot and install"></a><strong>1.1.2 reboot and install</strong></h5><ul>
<li><h6 id="1-install-ubuntu"><a href="#1-install-ubuntu" class="headerlink" title="1. install ubuntu"></a>1. install ubuntu</h6></li>
<li><h6 id="2-partition"><a href="#2-partition" class="headerlink" title="2. partition"></a>2. partition</h6>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">efi or biosgrub 1G</span><br><span class="line">/	 50G</span><br><span class="line">swap	 8G</span><br><span class="line">/home	 70G</span><br></pre></td></tr></table></figure>
</li>
<li><h6 id="3-install-to-biosgrub"><a href="#3-install-to-biosgrub" class="headerlink" title="3. install to biosgrub"></a>3. install to biosgrub</h6></li>
<li><h6 id="4-high-resolution-of-grub2"><a href="#4-high-resolution-of-grub2" class="headerlink" title="4. high resolution of grub2"></a>4. high resolution of grub2</h6><p>  sudo vim /etc/default/grub</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GRUB_TERMINAL=gfxterm</span><br><span class="line">GRUB_GFXMODE=1920x1080</span><br></pre></td></tr></table></figure>
<p>  sudo update-grub<br>  reboot</p>
</li>
</ul>
<h4 id="1-2-ubuntu-only"><a href="#1-2-ubuntu-only" class="headerlink" title="1.2 ubuntu only"></a><strong>1.2 ubuntu only</strong></h4><ul>
<li><h6 id="1-bios-gt-secure-boot-disable-bios-gt-boot-uefi-only"><a href="#1-bios-gt-secure-boot-disable-bios-gt-boot-uefi-only" class="headerlink" title="1. bios-&gt;secure boot disable, bios-&gt;boot uefi only"></a>1. bios-&gt;secure boot disable, bios-&gt;boot uefi only</h6></li>
<li><h6 id="2-partition-1"><a href="#2-partition-1" class="headerlink" title="2. partition"></a>2. partition</h6>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">efi partition 1G</span><br><span class="line">/	 50G</span><br><span class="line">swap	 8G</span><br><span class="line">/home	 70G</span><br></pre></td></tr></table></figure>
</li>
<li><h6 id="3-install-to-efi-partition"><a href="#3-install-to-efi-partition" class="headerlink" title="3. install to efi partition"></a>3. install to efi partition</h6></li>
</ul>
<h3 id="2-Install-Softwares"><a href="#2-Install-Softwares" class="headerlink" title="2. Install Softwares"></a><strong>2. Install Softwares</strong></h3><h4 id="2-1-oh-my-zsh"><a href="#2-1-oh-my-zsh" class="headerlink" title="2.1 oh my zsh"></a><strong>2.1 oh my zsh</strong></h4><ul>
<li><h6 id="1-install-zsh"><a href="#1-install-zsh" class="headerlink" title="1. install zsh"></a>1. install zsh</h6><p>  <code>~:sudo apt-get install zsh</code><br>  init zsh config<br>  <code>~:zsh</code><br>  change to zsh,no sudo<br>  <code>~:chsh -s /bin/zsh</code></p>
</li>
<li><h6 id="2-install-git"><a href="#2-install-git" class="headerlink" title="2. install git"></a>2. install git</h6><p>  <code>~:sudo apt-get install git</code><br>  clone oh my zsh<br>  <code>~:git clone git://github.com/robbyrussell/oh-my-zsh.git</code><br>  cp oh my zsh config to zsh<br>  <code>~:cp ~/oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc</code><br>  install oh my zsh<br>  <code>~:cd oh-my-zsh/tools</code><br>  <code>~:./install.sh</code><br>  <code>~:reboot</code></p>
</li>
<li><h6 id="3-powerline"><a href="#3-powerline" class="headerlink" title="3. powerline"></a>3. powerline</h6><ul>
<li><p>install pip</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo apt-get install python3-pip</span><br><span class="line">~:mkdir .pip</span><br><span class="line">~:vim .pip/pip.conf</span><br><span class="line">[global]</span><br><span class="line">timeout = 6000</span><br><span class="line">index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">trusted-host = pypi.tuna.tsinghua.edu.cn</span><br></pre></td></tr></table></figure>
</li>
<li><p>install powerline (not necessary)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#~:sudo apt-get install powerline</span><br><span class="line">#~:pip3  install powerline-status</span><br><span class="line">#~:sudo pacman -S powerline</span><br><span class="line">#~:sudo pacman -S powerline-fonts</span><br><span class="line">#~:sudo pacman -S powerline-vim</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<ul>
<li><p>install powerline for zsh</p>
<p>zsh install powerlevel9k plugin</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:cd ~/.oh-my-zsh/custom/themes</span><br><span class="line">~:git clone https://github.com/bhilburn/powerlevel9k.git</span><br><span class="line">~:cd ~</span><br><span class="line">~:vim .zshrc</span><br><span class="line"></span><br><span class="line">ZSH_THEME=&quot;powerlevel9k/powerlevel9k&quot;</span><br></pre></td></tr></table></figure>
<p>source .zshrc</p>
</li>
<li><p>zsh history time stamp</p>
<p>.vimrc</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">HIST_STAMPS=&quot;mm/dd/yyyy&quot;</span><br></pre></td></tr></table></figure>
</li>
<li><p>install gnome-tweak</p>
</li>
<li><p>install dash to dock</p>
</li>
<li><p>install powerline for vim</p>
<p><strong>==&gt;</strong> download powerline fonts<br><code>https://github.com/powerline/fonts</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:cd /user/share/fonts</span><br><span class="line">~sudo :mkdir myfonts</span><br><span class="line">~:cd myfonts</span><br><span class="line">~:sudo  cp ~/Download/Noto Mono for Powerline.ttf ./</span><br><span class="line">~:sudo mkfontscale</span><br><span class="line">~:sudo mkfontdir</span><br><span class="line">~:sudo fc-cache -fv</span><br></pre></td></tr></table></figure>
<p><strong>==&gt;</strong> install vundle plugin</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~: cd .vim/bundle</span><br><span class="line">~:git clone https://github.com/VundleVim/Vundle.vim.git</span><br><span class="line">~:cd ~</span><br><span class="line">~:vim .vimrc</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">set nocompatible              &quot; be iMproved, required</span><br><span class="line">filetype off                  &quot; required</span><br><span class="line"></span><br><span class="line">&quot; set the runtime path to include Vundle and initialize</span><br><span class="line">set rtp+=~/.vim/bundle/Vundle.vim</span><br><span class="line">call vundle#begin()</span><br><span class="line">&quot; alternatively, pass a path where Vundle should install plugins</span><br><span class="line">&quot;call vundle#begin(&apos;~/some/path/here&apos;)</span><br><span class="line"></span><br><span class="line">&quot; let Vundle manage Vundle, required</span><br><span class="line">Plugin &apos;VundleVim/Vundle.vim&apos;</span><br><span class="line"></span><br><span class="line">&quot; The following are examples of different formats supported.</span><br><span class="line">&quot; Keep Plugin commands between vundle#begin/end.</span><br><span class="line">&quot; plugin on GitHub repo</span><br><span class="line">Plugin &apos;tpope/vim-fugitive&apos;</span><br><span class="line">&quot; plugin from http://vim-scripts.org/vim/scripts.html</span><br><span class="line">&quot; Plugin &apos;L9&apos;</span><br><span class="line">&quot; Git plugin not hosted on GitHub</span><br><span class="line">Plugin &apos;git://git.wincent.com/command-t.git&apos;</span><br><span class="line">&quot; git repos on your local machine (i.e. when working on your own plugin)</span><br><span class="line">Plugin &apos;file:///home/gmarik/path/to/plugin&apos;</span><br><span class="line">&quot; The sparkup vim script is in a subdirectory of this repo called vim.</span><br><span class="line">&quot; Pass the path to set the runtimepath properly.</span><br><span class="line">Plugin &apos;rstacruz/sparkup&apos;, &#123;&apos;rtp&apos;: &apos;vim/&apos;&#125;</span><br><span class="line">&quot; Install L9 and avoid a Naming conflict if you&apos;ve already installed a</span><br><span class="line">&quot; different version somewhere else.</span><br><span class="line">&quot; Plugin &apos;ascenator/L9&apos;, &#123;&apos;name&apos;: &apos;newL9&apos;&#125;</span><br><span class="line"></span><br><span class="line">Plugin &apos;vim-airline/vim-airline&apos;</span><br><span class="line"></span><br><span class="line">&quot; All of your Plugins must be added before the following line</span><br><span class="line">call vundle#end()            &quot; required</span><br><span class="line">filetype plugin indent on    &quot; required</span><br><span class="line">&quot; To ignore plugin indent changes, instead use:</span><br><span class="line">&quot;filetype plugin on</span><br><span class="line">&quot;</span><br><span class="line">&quot; Brief help</span><br><span class="line">&quot; :PluginList       - lists configured plugins</span><br><span class="line">&quot; :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate</span><br><span class="line">&quot; :PluginSearch foo - searches for foo; append `!` to refresh local cache</span><br><span class="line">&quot; :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal</span><br><span class="line">&quot;</span><br><span class="line">&quot; see :h vundle for more details or wiki for FAQ</span><br><span class="line">&quot; Put your non-Plugin stuff after this line</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:vim</span><br><span class="line"></span><br><span class="line">:PluginInstall</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:vim .vimrc</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">let g:airline_powerline_fonts = 1</span><br></pre></td></tr></table></figure>
</li>
<li><p>install powerline for vscode</p>
<p>You have installed mono for powerline fonts before. Now change settings for vscode.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ctrl+shift+p=&gt;open user settings</span><br><span class="line">setting.json =&gt; &quot;terminal.integrated.fontFamily&quot;: &quot;Noto Mono for Powerline&quot;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="2-2-vim"><a href="#2-2-vim" class="headerlink" title="2.2 vim"></a><strong>2.2 vim</strong></h4><ul>
<li><h5 id="1-install"><a href="#1-install" class="headerlink" title="1. install"></a>1. install</h5><p>  <code>~:sudo apt-get install vim</code></p>
</li>
</ul>
<h4 id="2-3-sogou-input"><a href="#2-3-sogou-input" class="headerlink" title="2.3 sogou input"></a><strong>2.3 sogou input</strong></h4><ul>
<li><h5 id="1-install-fcitx"><a href="#1-install-fcitx" class="headerlink" title="1. install fcitx"></a>1. install fcitx</h5><p>  <code>1) system setting-&gt;language support</code><br>  <code>2) change keyboard input method system</code><br>  <code>3) choose fcitx</code></p>
</li>
<li><h5 id="2-install-sogou-input"><a href="#2-install-sogou-input" class="headerlink" title="2. install sogou input"></a>2. install sogou input</h5><p>  <code>~:sudo dpkg -i sogou.deb</code><br>  If dependencies error occured, force install<br>  <code>~:sudo apt-get -f install</code><br>  restart system<br>  <code>~:reboot</code><br>  change language at status bar<br>  <strong>Note:</strong> Ubuntu 18.04 configure input method at keyboard icon.</p>
</li>
</ul>
<h4 id="2-4-theme-and-icons"><a href="#2-4-theme-and-icons" class="headerlink" title="2.4 theme and icons"></a><strong>2.4 theme and icons</strong></h4><ul>
<li><h5 id="1-install-unity-tweak-tool"><a href="#1-install-unity-tweak-tool" class="headerlink" title="1. install unity-tweak-tool"></a>1. install unity-tweak-tool</h5><p>  <code>~:sudo apt-get install unity-tweak-tool</code><br>  <strong>Note:</strong> workspace in unity-tweak-tool didn’t work on Ubuntu 18.04.</p>
</li>
<li><h5 id="2-install-numix-icon-theme-circle"><a href="#2-install-numix-icon-theme-circle" class="headerlink" title="2. install numix icon-theme-circle"></a>2. install numix icon-theme-circle</h5><p>  <code>~:sudo add-apt-repository ppa:numix/ppa</code><br>  <code>~:sudo apt-get update</code><br>  <strong>Note:</strong> maybe you need to reboot system or you can’t tab for numix-icon-theme-circle<br>  <code>~:sudo apt-get install numix-icon-theme-circle</code></p>
<p>  If ppa is not available,<br>  install manually:<br>  icons:</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># folder icons soft link source</span><br><span class="line">~:git clone https://github.com/numixproject/numix-icon-theme.git</span><br><span class="line">~:sudo cp -r numix-icon-theme/Numix /usrshar/icons</span><br><span class="line">~:git clone https://github.com/numixproject/numix-icon-theme-circle.git</span><br><span class="line">~:sudo cp -r numix-icon-theme-circle/Numix-Circle /usr/share/icons</span><br></pre></td></tr></table></figure>
<p>  change folder icon color</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:~:git clone https://github.com/numixproject/numix-folders.git</span><br><span class="line">~:cd numix-folders</span><br><span class="line">~:sudo ./numix-folders</span><br></pre></td></tr></table></figure>
<p>  You can config colors yourself in README.MD</p>
</li>
<li><h5 id="3-install-arc—theme"><a href="#3-install-arc—theme" class="headerlink" title="3. install arc—theme"></a>3. install arc—theme</h5><p>  <code>~:sudo apt-get install arc-theme</code></p>
<p>  install manually:</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:git clone https://github.com/horst3180/arc-theme.git</span><br><span class="line">~:./autogen.sh --prefix=/usr</span><br><span class="line">~:sudo make install</span><br></pre></td></tr></table></figure>
<p>  more info on github.</p>
</li>
<li><h5 id="4-install-papirus-icon-theme"><a href="#4-install-papirus-icon-theme" class="headerlink" title="4. install  papirus-icon-theme"></a>4. install  papirus-icon-theme</h5>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:papirus/papirus</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install papirus-icon-theme</span><br></pre></td></tr></table></figure>
<p>  If ppa is not available,<br>  install manually:</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:git clone https://github.com/PapirusDevelopmentTeam/papirus-icon-theme.git</span><br><span class="line">~:sudo cp -r Papirus-Dark /usr/share/icons</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="2-5-lantern"><a href="#2-5-lantern" class="headerlink" title="2.5 lantern"></a><strong>2.5 lantern</strong></h4><ul>
<li><h5 id="1-download-lantern"><a href="#1-download-lantern" class="headerlink" title="1. download lantern"></a>1. download lantern</h5></li>
<li><h5 id="2-install"><a href="#2-install" class="headerlink" title="2. install"></a>2. install</h5><p>  <code>~:sudo dpkg -i lantern.deb</code></p>
</li>
</ul>
<h4 id="2-6-chrome"><a href="#2-6-chrome" class="headerlink" title="2.6 chrome"></a><strong>2.6 chrome</strong></h4><ul>
<li><h5 id="1-download-chrome-dev"><a href="#1-download-chrome-dev" class="headerlink" title="1. download chrome dev"></a>1. download chrome dev</h5></li>
<li><h5 id="2-install-chrome"><a href="#2-install-chrome" class="headerlink" title="2. install chrome"></a>2. install chrome</h5><p>  <code>~:sudo dpkg -l chrome.deb</code><br>  <strong>Note:</strong> dependencies error, command instead with<br>  <code>~:sudo apt-get -f install</code></p>
</li>
<li><h5 id="3-plugins-need-lantern"><a href="#3-plugins-need-lantern" class="headerlink" title="3. plugins need lantern"></a>3. plugins need lantern</h5></li>
<li><h5 id="4-Advanced-Rest-Client-restful-client"><a href="#4-Advanced-Rest-Client-restful-client" class="headerlink" title="4. Advanced Rest Client restful client"></a>4. <code>Advanced Rest Client</code> restful client</h5><p>  install from source<br>  <strong>==&gt;</strong></p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:git clone https://github.com/advanced-rest-client/arc-electron.git</span><br><span class="line">~:cd arc-electron</span><br><span class="line">~:npm i</span><br></pre></td></tr></table></figure>
<p>  <strong>&lt;==</strong></p>
</li>
<li><h5 id="5-vimium-vim"><a href="#5-vimium-vim" class="headerlink" title="5. vimium vim"></a>5. <code>vimium</code> vim</h5><p>  Install from source<br>  <strong>==&gt;</strong> build</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:git clone https://github.com/philc/vimium.git</span><br><span class="line">~:sudo npm install -g coffeescript@1.12.7</span><br><span class="line">~:cd vimium</span><br><span class="line"># 2020-04-04 更新,构建脚本已经改变,依托与coffeescirpt 1.x, 然后直接使用目录中的js脚本构建</span><br><span class="line"># ~:cake build</span><br><span class="line">~:./make.js build</span><br></pre></td></tr></table></figure>
<p>  chrome浏览器开启开发者模式,然后把 build过的 vimium文件夹打包成插件,然后拖动到chrome里安装.<br>  chrome developer mode <strong>==&gt;</strong> package the directory into an extension and install<br>  <strong>&lt;==</strong></p>
</li>
<li><h5 id="6-React-Developer-Tool"><a href="#6-React-Developer-Tool" class="headerlink" title="6. React Developer Tool"></a>6. React Developer Tool</h5><p>  install from source<br>  <strong>==&gt;</strong></p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:git clone https://github.com/facebook/react-devtools.git</span><br><span class="line">~:cd react-devtools</span><br><span class="line">~:npm i</span><br><span class="line">~:npm run build:extension:chrome</span><br></pre></td></tr></table></figure>
<p>  shells/chrome/build/unpacked<br>  <strong>&lt;==</strong></p>
</li>
<li><h5 id="7-fehelper-json-format"><a href="#7-fehelper-json-format" class="headerlink" title="7. fehelper json format"></a>7. <code>fehelper</code> json format</h5></li>
<li><h5 id="8-qrcode"><a href="#8-qrcode" class="headerlink" title="8. qrcode"></a>8. <code>qrcode</code></h5></li>
</ul>
<h4 id="2-7-vsftpd"><a href="#2-7-vsftpd" class="headerlink" title="2.7 vsftpd"></a><strong>2.7 vsftpd</strong></h4><p>ftp server</p>
<ul>
<li><h5 id="1-install-1"><a href="#1-install-1" class="headerlink" title="1. install"></a>1. install</h5><p>  <code>~:sudo apt-get install vsftpd</code></p>
</li>
<li><h5 id="2-add-user"><a href="#2-add-user" class="headerlink" title="2. add user"></a>2. add user</h5><p>  create root dir for this user<br>  <code>~:sudo makdir -p /home/ftp</code><br>  add new user and specify root dir<br>  <code>~:sudo useradd -d /home/ftp -s /bin/bash my_ftp</code><br>  set password for new user<br>  <code>~:sudo passwd my_ftp</code></p>
</li>
<li><h5 id="3-vsftpd-config"><a href="#3-vsftpd-config" class="headerlink" title="3. vsftpd config"></a>3. vsftpd config</h5><p>  <code>~:sudo vim /etc/vsftpd.conf</code><br>  when userlist_enable=YES and userlist_deny=NO, ftp will only acccpt users in userlist file, and will eject users in /etc/ftpusers.</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># enable userlist</span><br><span class="line"># ftp server will only accept connections from users who are in userlist file</span><br><span class="line">userlist_enable=YES</span><br><span class="line"># close userlist deny</span><br><span class="line">userlist_deny=NO</span><br><span class="line"># figure list file</span><br><span class="line">userlist_file=/etc/vsftpd_allowed_users</span><br><span class="line"># close sandbox</span><br><span class="line">seccomp_sandbox=NO</span><br></pre></td></tr></table></figure>
<p>  add user to userlist file<br>  <code>~:sudo vim /etc/vsftpd_allowed_users</code></p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">my_ftp</span><br></pre></td></tr></table></figure>
<p>  eject users<br>  <code>~:sudo vim /etc/ftpusers</code></p>
</li>
</ul>
<h4 id="2-8-nginx"><a href="#2-8-nginx" class="headerlink" title="2.8 nginx"></a><strong>2.8 nginx</strong></h4><h5 id="2-8-1-install-dependencies"><a href="#2-8-1-install-dependencies" class="headerlink" title="2.8.1 install dependencies"></a><strong>2.8.1 install dependencies</strong></h5><ul>
<li><h6 id="1-install-openssl"><a href="#1-install-openssl" class="headerlink" title="1. install openssl"></a>1. install openssl</h6><p>  <code>~:sudo apt-get install oepnssl</code></p>
</li>
<li><h5 id="2-install-pcre"><a href="#2-install-pcre" class="headerlink" title="2. install pcre"></a>2. install pcre</h5><p>  <code>~:sudo apt-get install libpcre3 libpcre3-dev</code></p>
</li>
<li><h5 id="3-install-zlib"><a href="#3-install-zlib" class="headerlink" title="3. install zlib"></a>3. install zlib</h5><p>  <code>~:sudo apt-get install zlib1g-dev</code></p>
</li>
</ul>
<h5 id="2-8-2-install-nginx"><a href="#2-8-2-install-nginx" class="headerlink" title="2.8.2 install nginx"></a><strong>2.8.2 install nginx</strong></h5><ul>
<li><h6 id="1-download-nginx"><a href="#1-download-nginx" class="headerlink" title="1. download nginx"></a>1. download nginx</h6></li>
<li><h6 id="2-unzip-and-cd-in"><a href="#2-unzip-and-cd-in" class="headerlink" title="2. unzip and cd in"></a>2. unzip and cd in</h6></li>
<li><h6 id="3-configure-and-specify-a-dir-for-install"><a href="#3-configure-and-specify-a-dir-for-install" class="headerlink" title="3. configure and specify a dir for install"></a>3. configure and specify a dir for install</h6><p>  <code>~:./configure --prefix=/usr/local/bin/nginx</code></p>
</li>
<li><h6 id="4-make-code"><a href="#4-make-code" class="headerlink" title="4. make code"></a>4. make code</h6><p>  <code>~:make</code></p>
</li>
<li><h6 id="5-install"><a href="#5-install" class="headerlink" title="5. install"></a>5. install</h6><p>  <code>~:sudo make install</code></p>
</li>
<li><h6 id="6-test"><a href="#6-test" class="headerlink" title="6. test"></a>6. test</h6><p>  <code>~:cd /usr/local/bin/nginx/sbin</code><br>  <code>~:sudo ./nginx</code><br>  <a href="http://localhost--&gt;welcome" target="_blank" rel="noopener">http://localhost--&gt;welcome</a> to nginx!</p>
</li>
</ul>
<h5 id="2-8-3-an-nginx-exmple-—-image-server"><a href="#2-8-3-an-nginx-exmple-—-image-server" class="headerlink" title="2.8.3 an nginx exmple — image server"></a><strong>2.8.3 an nginx exmple — image server</strong></h5><ul>
<li><h6 id="1-add-a-server-node-in-nginx-conf-http-node"><a href="#1-add-a-server-node-in-nginx-conf-http-node" class="headerlink" title="1. add a server node in nginx.conf http node"></a>1. add a server node in <code>nginx.conf</code> http node</h6><p>  <code>~:cd /usr/local/bin/ginx/conf</code><br>  <code>~:sudo vim nginx.conf</code></p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  img.mall.com;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        root   D:/ftp/img/;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><h6 id="2-specify-the-website-to-local-ip"><a href="#2-specify-the-website-to-local-ip" class="headerlink" title="2. specify the website to local ip"></a>2. specify the website to local ip</h6><p>  <code>~:sudo vim /etc/hosts</code></p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">127.0.0.1	img.mall.com</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="2-9-status-bar-indicator-sysmonitor"><a href="#2-9-status-bar-indicator-sysmonitor" class="headerlink" title="2.9 status bar indicator-sysmonitor"></a><strong>2.9 status bar indicator-sysmonitor</strong></h4><ul>
<li><h5 id="1-install-2"><a href="#1-install-2" class="headerlink" title="1. install"></a>1. install</h5><p>  <code>~:sudo add-apt-repository ppa:fossfreedom/indicator-sysmonitor</code><br>  <code>~:sudo apt-get update</code><br>  <code>~:sudo apt-get install indicator-sysmonitor</code><br>  <code>~:indicator-sysmonitor</code></p>
</li>
</ul>
<h4 id="2-10-mysql-mariadb-10-2-stable"><a href="#2-10-mysql-mariadb-10-2-stable" class="headerlink" title="2.10 mysql mariadb 10.2 stable"></a><strong>2.10 mysql mariadb 10.2 stable</strong></h4><p><strong>use these commands to specify the version</strong><br><strong>Note:</strong> Ubuntu 18.04<br>Any problems please see other topics of mysql( or mariadb ) in my blog.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo apt-get install software-properties-common</span><br><span class="line">~:sudo apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xF1656F24C74CD1D8</span><br><span class="line">~:sudo add-apt-repository &apos;deb [arch=amd64] http://mirrors.tuna.tsinghua.edu.cn/mariadb/repo/10.3/ubuntu bionic main&apos;</span><br><span class="line">~:sudo apt update</span><br><span class="line">~:sudo apt install mariadb-server</span><br></pre></td></tr></table></figure>
<h4 id="2-11-mysql-workbench"><a href="#2-11-mysql-workbench" class="headerlink" title="2.11 mysql workbench"></a><strong>2.11 mysql workbench</strong></h4><ul>
<li><h5 id="1-install-3"><a href="#1-install-3" class="headerlink" title="1. install"></a>1. install</h5><p>  <code>~:sudo apt-get install mysql-workbench</code></p>
</li>
</ul>
<h4 id="2-12-jdk8"><a href="#2-12-jdk8" class="headerlink" title="2.12 jdk8"></a><strong>2.12 jdk8</strong></h4><ul>
<li><h5 id="1-install-4"><a href="#1-install-4" class="headerlink" title="1. install"></a>1. install</h5><p>  <code>~:sudo tar xzvf jdk8.tar.gz -C /usr/local/lib</code></p>
</li>
<li><h5 id="2-environment-variables"><a href="#2-environment-variables" class="headerlink" title="2. environment variables"></a>2. environment variables</h5><p>  <code>~:sudo vim /etc/profile</code></p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">JAVA_HOME=/usr/local/lib/jdk1.8.0_121</span><br><span class="line">JRE_HOME=$&#123;JAVA_HOME&#125;/jre</span><br><span class="line">CLASSPATH=.:$&#123;JAVA_HOME&#125;/lib:$&#123;JRE_HOME&#125;/lib</span><br><span class="line">PATH=$&#123;JAVA_HOME&#125;/bin:$PATH</span><br><span class="line">export PATH JAVA_HOME CLASSPATH</span><br></pre></td></tr></table></figure>
<p>  or</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">export JAVA_HOME=/usr/local/lib/jdk1.8.0_121</span><br><span class="line">export CLASSPATH=.:$&#123;JAVA_HOME&#125;/lib:$&#123;JAVA_HOME&#125;/jre/lib</span><br><span class="line">export PATH=$&#123;JAVA_HOME&#125;/bin:$PATH</span><br></pre></td></tr></table></figure>
<p>  config system alternatives -&gt; some applications will use alternative command only,such like fabric.</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo update-alternatives –install /usr/local/bin/java java [your_java_home]/bin/java 0</span><br><span class="line">~:sudo update-alternatives –install /usr/local/bin/javac javac [your_java_home]/bin/javac 0</span><br><span class="line"></span><br><span class="line">~:update-alternatives --display java</span><br></pre></td></tr></table></figure>
</li>
<li><h5 id="3-reboot-system"><a href="#3-reboot-system" class="headerlink" title="3. reboot system"></a>3. reboot system</h5></li>
<li><h5 id="4-test"><a href="#4-test" class="headerlink" title="4. test"></a>4. test</h5><p>  java -version</p>
</li>
</ul>
<h4 id="2-13-maven-3-5-0"><a href="#2-13-maven-3-5-0" class="headerlink" title="2.13 maven 3.5.0"></a><strong>2.13 maven 3.5.0</strong></h4><ul>
<li><h5 id="1-install-5"><a href="#1-install-5" class="headerlink" title="1. install"></a>1. install</h5><p>  <code>~:sudo tar xzvf apache-maven.tar.gz -C /usr/local/bin</code></p>
</li>
<li><h5 id="2-environment-variables-1"><a href="#2-environment-variables-1" class="headerlink" title="2. environment variables"></a>2. environment variables</h5><p>  <code>~:sudo vim /etc/profile</code></p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MAVEN_HOME=/usr/local/bin/apache-maven-3.5.0</span><br><span class="line">PATH=$&#123;MAVEN_HOME&#125;/bin:$&#123;PATH&#125;</span><br><span class="line">export PATH</span><br></pre></td></tr></table></figure>
</li>
<li><h5 id="3-reboot-system-1"><a href="#3-reboot-system-1" class="headerlink" title="3. reboot system"></a>3. reboot system</h5></li>
</ul>
<h4 id="2-14-netease-cloud-music-deb"><a href="#2-14-netease-cloud-music-deb" class="headerlink" title="2.14 netease-cloud-music.deb"></a><strong>2.14 netease-cloud-music.deb</strong></h4><h4 id="2-15-idea-tar-gz"><a href="#2-15-idea-tar-gz" class="headerlink" title="2.15 idea.tar.gz"></a><strong>2.15 idea.tar.gz</strong></h4><h4 id="2-16-termius"><a href="#2-16-termius" class="headerlink" title="2.16 termius"></a><strong>2.16 termius</strong></h4><ul>
<li><h5 id="1-install-snapd-and-dependencies"><a href="#1-install-snapd-and-dependencies" class="headerlink" title="1. install snapd and dependencies"></a>1. install <code>snapd</code> and dependencies</h5><p>  <code>~:sudo apt install snapd</code><br>  <code>~:sudo apt install pulseaudio</code><br>  <code>~:sudo apt install snapd-xdg-open</code></p>
</li>
<li><h5 id="2-use-snapd-to-insall-termius"><a href="#2-use-snapd-to-insall-termius" class="headerlink" title="2. use snapd to insall termius"></a>2. use snapd to insall termius</h5><p>  show if there’s termius-app<br>  <code>~:snap find termius</code><br>  install termius<br>  <code>~:sudo snap install termius-app</code></p>
</li>
<li><h5 id="3-create-desktop-if-it-is-necessary"><a href="#3-create-desktop-if-it-is-necessary" class="headerlink" title="3. create desktop if it is necessary."></a>3. create desktop if it is necessary.</h5><p>  application<br>  <code>~:sudo cp /snap/termius-app/current/meta/gui/termius.desktop /usr/share/applications</code><br>  icon<br>  <code>~:sudo vim /usr/share/applications/termius.desktop</code></p>
</li>
</ul>
<h4 id="2-17-filezilla"><a href="#2-17-filezilla" class="headerlink" title="2.17 filezilla"></a><strong>2.17 filezilla</strong></h4><ul>
<li><h5 id="1-install-6"><a href="#1-install-6" class="headerlink" title="1. install"></a>1. install</h5><p>  <code>~:sudo apt-get install filezilla</code></p>
</li>
</ul>
<h4 id="2-18-shutter"><a href="#2-18-shutter" class="headerlink" title="2.18 shutter"></a><strong>2.18 shutter</strong></h4><ul>
<li><h5 id="1-install-7"><a href="#1-install-7" class="headerlink" title="1. install"></a>1. install</h5><p>  <code>~:sudo apt-get install shutter</code></p>
</li>
<li><h5 id="2-shotcut"><a href="#2-shotcut" class="headerlink" title="2. shotcut"></a>2. shotcut</h5>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">keyboard:ctrl+alt+a -&gt; shutter -s</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="2-19-gcc-g"><a href="#2-19-gcc-g" class="headerlink" title="2.19 gcc g++"></a><strong>2.19 gcc g++</strong></h4><ul>
<li><h5 id="1-install-8"><a href="#1-install-8" class="headerlink" title="1. install"></a>1. install</h5>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo apt-get install build-essential</span><br><span class="line">~:sudo apt-get install g++-8</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="2-20-cmake"><a href="#2-20-cmake" class="headerlink" title="2.20 cmake"></a><strong>2.20 cmake</strong></h4><ul>
<li><h5 id="1-download-cmake-tar-gz"><a href="#1-download-cmake-tar-gz" class="headerlink" title="1. download cmake.tar.gz"></a>1. download cmake.tar.gz</h5></li>
<li><h5 id="2-unzip"><a href="#2-unzip" class="headerlink" title="2. unzip"></a>2. unzip</h5></li>
<li><h5 id="3-make-soft-link"><a href="#3-make-soft-link" class="headerlink" title="3. make soft link"></a>3. make soft link</h5>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo ln -s cmake_home/bin/cmake /usr/local/bin/cmake</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="2-21-nodejs"><a href="#2-21-nodejs" class="headerlink" title="2.21 nodejs"></a><strong>2.21 nodejs</strong></h4><ul>
<li><h5 id="1-download-cmake-tar-xz"><a href="#1-download-cmake-tar-xz" class="headerlink" title="1. download cmake.tar.xz"></a>1. download cmake.tar.xz</h5></li>
<li><h5 id="2-unzip-1"><a href="#2-unzip-1" class="headerlink" title="2. unzip"></a>2. unzip</h5></li>
<li><h5 id="3-make-soft-link-1"><a href="#3-make-soft-link-1" class="headerlink" title="3. make soft link"></a>3. make soft link</h5>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo ln -s node_home/bin/node /usr/local/bin/node</span><br><span class="line">~:sudo ln -s node_home/bin/npm /usr/local/bin/npm</span><br></pre></td></tr></table></figure>
</li>
<li><h5 id="4-use-taobao-mirror"><a href="#4-use-taobao-mirror" class="headerlink" title="4. use taobao mirror"></a>4. use taobao mirror</h5>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:npm config get registry</span><br><span class="line">~:npm config set registry &quot;https://registry.npm.taobao.org&quot;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="2-22-vscodes"><a href="#2-22-vscodes" class="headerlink" title="2.22 vscodes"></a><strong>2.22 vscodes</strong></h4><ul>
<li><h5 id="1-install-9"><a href="#1-install-9" class="headerlink" title="1. install"></a>1. install</h5>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo dpkg -i vscode.deb</span><br></pre></td></tr></table></figure>
</li>
<li><h5 id="2-install-plug-in"><a href="#2-install-plug-in" class="headerlink" title="2. install plug-in"></a>2. install plug-in</h5><p>  <a href="https://www.jianshu.com/p/3041871f6024" target="_blank" rel="noopener">插件目录</a></p>
</li>
</ul>
<h4 id="2-23-Ubuntu-18-nvidia-driver"><a href="#2-23-Ubuntu-18-nvidia-driver" class="headerlink" title="2.23 Ubuntu 18 nvidia driver"></a><strong>2.23 Ubuntu 18 nvidia driver</strong></h4><pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo ubuntu-drivers autoinstall</span><br></pre></td></tr></table></figure>

This could stop the fan noise.
</code></pre>]]></content>
      <categories>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>rabbitMQ</title>
    <url>/2019/07/29/ubuntu/rabbitMQ/</url>
    <content><![CDATA[<p>rabiitMQ在ubuntu上的安装和配置</p>
<a id="more"></a>
<h3 id="1-install"><a href="#1-install" class="headerlink" title="1. install"></a><strong>1. install</strong></h3><ul>
<li><h4 id="1-1-install"><a href="#1-1-install" class="headerlink" title="1.1 install"></a>1.1 install</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo dpkg -i rabbitMQ.deb</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-2-enable-management-plugin"><a href="#2-2-enable-management-plugin" class="headerlink" title="2.2 enable management plugin"></a>2.2 enable management plugin</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo rabbitmq-plugins enable rabbitmq_management</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-3-list-users"><a href="#2-3-list-users" class="headerlink" title="2.3 list users"></a>2.3 list users</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo rabbitmqctl list_users</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-4-add-user"><a href="#2-4-add-user" class="headerlink" title="2.4 add user"></a>2.4 add user</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># username admin, password admin123</span><br><span class="line">~:sudo rabbitmqctl add_user admin admin123 </span><br><span class="line"># set admin as administrator</span><br><span class="line">~:sudo rabbitmqctl set_user_tags admin administrator</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-5-html-gui"><a href="#2-5-html-gui" class="headerlink" title="2.5 html gui"></a>2.5 html gui</h4><p>  <a href="http://localhost:15672" target="_blank" rel="noopener">http://localhost:15672</a><br>  guest/guest</p>
</li>
</ul>
]]></content>
      <categories>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
        <tag>rabbitMQ</tag>
      </tags>
  </entry>
  <entry>
    <title>redis</title>
    <url>/2019/07/29/ubuntu/redis/</url>
    <content><![CDATA[<p>redis的安装。单机和集群的配置。</p>
<a id="more"></a>
<h3 id="1-install"><a href="#1-install" class="headerlink" title="1. install"></a><strong>1. install</strong></h3><ul>
<li><h4 id="1-1-install"><a href="#1-1-install" class="headerlink" title="1.1 install"></a>1.1 install</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo apt-get install redis-server</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="2-single-node"><a href="#2-single-node" class="headerlink" title="2. single node"></a><strong>2. single node</strong></h3><ul>
<li><h4 id="2-1-config"><a href="#2-1-config" class="headerlink" title="2.1 config"></a>2.1 config</h4><p>  <strong>/etc/redis/redis.conf</strong></p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">requirepass root</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-2-start-amp-amp-restart-amp-amp-stop"><a href="#2-2-start-amp-amp-restart-amp-amp-stop" class="headerlink" title="2.2 start &amp;&amp; restart &amp;&amp; stop"></a>2.2 start &amp;&amp; restart &amp;&amp; stop</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo systemctl restart redis-server</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-3-connect"><a href="#2-3-connect" class="headerlink" title="2.3 connect"></a>2.3 connect</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:redis-cli</span><br><span class="line">~:ping</span><br><span class="line">~:auth root</span><br><span class="line">~:set test_key test_value</span><br><span class="line">~:get test_key</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-4-change-db"><a href="#2-4-change-db" class="headerlink" title="2.4 change db"></a>2.4 change db</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:select 4</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="3-cluster"><a href="#3-cluster" class="headerlink" title="3. cluster"></a><strong>3. cluster</strong></h3><p><strong>3 main</strong><br><strong>3 slaves</strong></p>
<ul>
<li><h4 id="3-1-install-redis-trib-rb"><a href="#3-1-install-redis-trib-rb" class="headerlink" title="3.1 install redis-trib.rb"></a>3.1 install redis-trib.rb</h4><p>  this module is in redis source.<br>  Download redis sorce package and install redis-trib.</p>
</li>
</ul>
]]></content>
      <categories>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>shutdown</title>
    <url>/2019/07/29/ubuntu/shutdown/</url>
    <content><![CDATA[<p>ubuntu经常会有无法关机的情况。<br>因为关机时无法关掉一些守护进程，比如mysql。</p>
<a id="more"></a>
<h3 id="1-由于某些进程无法结束-导致无法关机"><a href="#1-由于某些进程无法结束-导致无法关机" class="headerlink" title="1. 由于某些进程无法结束,导致无法关机"></a><strong>1. 由于某些进程无法结束,导致无法关机</strong></h3><p>比如 mysql, 需要关掉mariadb和mysql服务<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo systemctl stop mariadb</span><br><span class="line">sudo systemctl sotp mysql</span><br></pre></td></tr></table></figure></p>
<h3 id="2-禁止服务开机启动"><a href="#2-禁止服务开机启动" class="headerlink" title="2. 禁止服务开机启动"></a><strong>2. 禁止服务开机启动</strong></h3><ul>
<li><h4 id="2-1-对于mariadb这类native服务"><a href="#2-1-对于mariadb这类native服务" class="headerlink" title="2.1 对于mariadb这类native服务"></a>2.1 对于mariadb这类native服务</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo systemctl disable mariadb</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-2-对于mariadb的mysql这种非navtive服务"><a href="#2-2-对于mariadb的mysql这种非navtive服务" class="headerlink" title="2.2 对于mariadb的mysql这种非navtive服务"></a>2.2 对于mariadb的mysql这种非navtive服务</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo /lib/systemd/systemd-sysv-install disable mysql</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <categories>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
        <tag>关机</tag>
        <tag>守护进程</tag>
        <tag>无法关机</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu 18.04 update kernel to 4.16</title>
    <url>/2019/07/29/ubuntu/ubuntu-18-04-update-kernel-to-4-16/</url>
    <content><![CDATA[<p>本文介绍了ubuntu内核更新过程以及一些依赖的包，不过使用的是内核源码。需要参照内核源码编译安装过程。当然后续还会有文章直接安装编译好的内核。</p>
<a id="more"></a>
<p><strong>Note:</strong> nvidia driver 390 didn’t work on kernel 4.16.<br>If you want to keep fans silent, use kernel 4.15.</p>
<h3 id="1-dependencies"><a href="#1-dependencies" class="headerlink" title="1. dependencies"></a><strong>1. dependencies</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GNU C                  3.2              gcc --version</span><br><span class="line">GNU make               3.81             make --version</span><br><span class="line">binutils               2.20             ld -v</span><br><span class="line">flex                   2.5.35           flex --version</span><br><span class="line">bison                  2.0              bison --version</span><br><span class="line">util-linux             2.10o            fdformat --version</span><br><span class="line">module-init-tools      0.9.10           depmod -V</span><br><span class="line">e2fsprogs              1.41.4           e2fsck -V</span><br><span class="line">not require ==&gt; jfsutils               1.1.3            fsck.jfs -V</span><br><span class="line">not require ==&gt; reiserfsprogs          3.6.3            reiserfsck -V</span><br><span class="line">not require ==&gt; xfsprogs               2.6.0            xfs_db -V</span><br><span class="line">squashfs-tools         4.0              mksquashfs -version</span><br><span class="line">not require ==&gt; btrfs-progs            0.18             btrfsck</span><br><span class="line">pcmciautils            004              pccardctl -V</span><br><span class="line">not require ==&gt; quota-tools            3.09             quota -V</span><br><span class="line">PPP                    2.4.0            pppd --version</span><br><span class="line">miss ==&gt; isdn4k-utils           3.1pre1          isdnctrl 2&gt;&amp;1|grep version</span><br><span class="line">miss ==&gt; nfs-utils              1.0.5            showmount --version</span><br><span class="line">procps                 3.2.0            ps --version</span><br><span class="line">not require ==&gt; oprofile               0.9              oprofiled --version</span><br><span class="line">udev                   081              udevd --version</span><br><span class="line">grub                   0.93             grub --version || grub-install --version</span><br><span class="line">miss ==&gt; mcelog                 0.6              mcelog --version</span><br><span class="line">iptables               1.4.2            iptables -V</span><br><span class="line">openssl &amp; libcrypto    1.0.0            openssl version</span><br><span class="line">bc                     1.06.95          bc --version</span><br><span class="line">not require ==&gt; Sphinx\ [#f1]_         1.3              sphinx-build --version</span><br></pre></td></tr></table></figure>
<ul>
<li><h4 id="install-sphinx"><a href="#install-sphinx" class="headerlink" title="install sphinx"></a>install sphinx</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo pip3 install sphinx</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="2-compile-and-install-kernel"><a href="#2-compile-and-install-kernel" class="headerlink" title="2. compile and install kernel"></a><strong>2. compile and install kernel</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:cd /usr/src/linux-4.x</span><br></pre></td></tr></table></figure>
<ul>
<li><h4 id="2-1-clean-old-config"><a href="#2-1-clean-old-config" class="headerlink" title="2.1 clean old config"></a>2.1 clean old config</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo make mrproper</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-2-generate-new-config"><a href="#2-2-generate-new-config" class="headerlink" title="2.2 generate new config"></a>2.2 generate new config</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo make menuconfig</span><br></pre></td></tr></table></figure>
<p>  Save and Exit.</p>
</li>
<li><h4 id="2-3-compile"><a href="#2-3-compile" class="headerlink" title="2.3 compile"></a>2.3 compile</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo make -j4</span><br></pre></td></tr></table></figure>
<p>  Use 4 threads. (About 40 minutes on i5-7400 4 cores 4 threads.)</p>
</li>
<li><h4 id="2-4-install"><a href="#2-4-install" class="headerlink" title="2.4 install"></a>2.4 install</h4>  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:sudo make modules_install</span><br><span class="line">~:sudo make install</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="2-5-reboot-system"><a href="#2-5-reboot-system" class="headerlink" title="2.5 reboot system"></a>2.5 reboot system</h4></li>
</ul>
]]></content>
      <categories>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
        <tag>kernel</tag>
        <tag>内核</tag>
      </tags>
  </entry>
  <entry>
    <title>teminal sound重复</title>
    <url>/2019/07/29/ubuntu/teminal-sound%E9%87%8D%E5%A4%8D/</url>
    <content><![CDATA[<p>ubuntu18安装之后可能有terminal提示音多个音效重复的问题。<br>经过测试，是主题文件里某些引用出了问题（默认音效无法取消和可选新增的音效重叠）。<br>删除默认音效即可。</p>
<a id="more"></a>
<h3 id="1-gnome-alert和Ubuntu-streo-bell重复"><a href="#1-gnome-alert和Ubuntu-streo-bell重复" class="headerlink" title="1. gnome alert和Ubuntu streo bell重复"></a><strong>1. gnome alert和Ubuntu streo bell重复</strong></h3><p><code>mv /usr/share/sounds/ubuntu/streo/bell.ogg /usr/share/sounds/ubuntu/streo/bell.ogg.bak</code></p>
]]></content>
      <categories>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>zsh-antigen</title>
    <url>/2019/07/29/ubuntu/zsh-antigen/</url>
    <content><![CDATA[<p>antigen是zsh的一个插件，可以方便的管理zsh的各种插件，比如oh-my-zsh和一些主题，比如pwerlevel9k。<br>插件只需要提供git仓库名即可。</p>
<a id="more"></a>
<p><strong>env: zsh installed</strong></p>
<h3 id="1-下载-antigen-zsh"><a href="#1-下载-antigen-zsh" class="headerlink" title="1. 下载 antigen.zsh"></a><strong>1. 下载 antigen.zsh</strong></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">~:pwd</span><br><span class="line">/home/user1</span><br><span class="line">~:curl -L git.io/antigen &gt; antigen.zsh</span><br></pre></td></tr></table></figure>
<h3 id="2-新建-zshrc"><a href="#2-新建-zshrc" class="headerlink" title="2. 新建.zshrc"></a><strong>2. 新建.zshrc</strong></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">POWERLEVEL9K_INSTALLATION_PATH=$ANTIGEN_BUNDLES/bhilburn/powerlevel9k</span><br><span class="line">HIST_STAMPS="yyyy-mm-dd"</span><br><span class="line"></span><br><span class="line">source /home/nomq/antigen.zsh</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 加载oh-my-zsh库</span></span><br><span class="line">antigen use oh-my-zsh</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 加载原版oh-my-zsh中的功能(robbyrussell<span class="string">'s oh-my-zsh).</span></span></span><br><span class="line">antigen bundle git</span><br><span class="line">antigen bundle heroku</span><br><span class="line">antigen bundle pip</span><br><span class="line">antigen bundle lein</span><br><span class="line">antigen bundle command-not-found</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 语法高亮功能</span></span><br><span class="line">antigen bundle zsh-users/zsh-syntax-highlighting</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 代码提示功能</span></span><br><span class="line">antigen bundle zsh-users/zsh-autosuggestions</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 自动补全功能</span></span><br><span class="line">antigen bundle zsh-users/zsh-completions</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 加载主题</span></span><br><span class="line">antigen theme robbyrussell</span><br><span class="line"></span><br><span class="line">antigen theme bhilburn/powerlevel9k powerlevel9k</span><br><span class="line"><span class="meta">#</span><span class="bash"> 保存更改</span></span><br><span class="line">antigen apply</span><br></pre></td></tr></table></figure>
<h3 id="3-使用antigen下载并应用以上插件和主题"><a href="#3-使用antigen下载并应用以上插件和主题" class="headerlink" title="3. 使用antigen下载并应用以上插件和主题"></a><strong>3. 使用antigen下载并应用以上插件和主题</strong></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:zsh</span><br></pre></td></tr></table></figure>
<h3 id="4-生成"><a href="#4-生成" class="headerlink" title="4. 生成"></a><strong>4. 生成</strong></h3>]]></content>
      <categories>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
        <tag>zsh</tag>
        <tag>antigen</tag>
      </tags>
  </entry>
  <entry>
    <title>使用kernel deb包更新内核</title>
    <url>/2019/07/29/ubuntu/%E4%BD%BF%E7%94%A8kernel-deb%E5%8C%85%E6%9B%B4%E6%96%B0%E5%86%85%E6%A0%B8/</url>
    <content><![CDATA[<p>安装官方编译好的deb格式内核。安装后可以使用dpkg管理。<br>更新内核可以降低风扇噪音等问题。<br>其他几篇内核相关文章介绍了使用源码编译和安装内核。</p>
<a id="more"></a>
<h3 id="1-下载"><a href="#1-下载" class="headerlink" title="1. 下载"></a><strong>1. 下载</strong></h3><p><a href="https://kernel.ubuntu.com/~kernel-ppa/mainline/" target="_blank" rel="noopener">https://kernel.ubuntu.com/~kernel-ppa/mainline/</a><br>在这个网址选择内核版本<br>下载以下文件<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">linux-headers-4.xx_all.deb</span><br><span class="line">linux-headers-4.xx-generic_xx_amd64.deb</span><br><span class="line">linux-image-unsigned-4.xx-generic_xx_amd64.deb</span><br><span class="line">linux-modules-4.xx-generic_xx_amd64.deb</span><br></pre></td></tr></table></figure></p>
<h3 id="2-按照以上列表第一个开始安装"><a href="#2-按照以上列表第一个开始安装" class="headerlink" title="2. 按照以上列表第一个开始安装"></a><strong>2. 按照以上列表第一个开始安装</strong></h3>]]></content>
      <categories>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
        <tag>kernel</tag>
        <tag>内核</tag>
      </tags>
  </entry>
  <entry>
    <title>linux maven nexus</title>
    <url>/2019/07/31/%E4%B8%AD%E9%97%B4%E4%BB%B6/linux-maven-nexus/</url>
    <content><![CDATA[<p>集团内部的jar包可能需要架设私有maven仓库。</p>
<a id="more"></a>
<p>(1) install</p>
<p>tar nexus.tar.gz -C ~/app/</p>
<p>(2) config port </p>
<p>cd nexus_home/<br>vim etc/nexus-default.properties</p>
<p>(3) config java home</p>
<p>vim nexus/home/bin/nexus<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">INSTALL4J_JAVA_HOME_OVERRIDE=&quot;/home/admin/lib/jdk&quot;</span><br></pre></td></tr></table></figure></p>
<p>(4) start nexus</p>
<p>cd nexus_home/bin<br>nexus start</p>
<p>(5) login</p>
<p><a href="http://localhost:8081" target="_blank" rel="noopener">http://localhost:8081</a><br>admin/admin123</p>
<p>(6) upload jar<br>1) config maven setting.xml<br>add nexus user<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>3rdParty<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">username</span>&gt;</span>admin<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">password</span>&gt;</span>admin123<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">servers</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>2) use mvn command to up</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mvn deploy:deploy-file -DgroupId=xxx.xxx -DartifactId=xxx -Dversion=0.0.2 -Dpackaging=jar -Dfile=D:\xxx.jar -Durl=http://xxx.xxx.xxx.xxx:8081/repository/3rdParty/ -DrepositoryId=3rdParty</span><br></pre></td></tr></table></figure>
<p>(7) clean task</p>
<p>clean old versions of jar<br>==&gt; tasks ==&gt; create task ==&gt; maven delete snapshot task</p>
]]></content>
      <categories>
        <category>中间件</category>
      </categories>
      <tags>
        <tag>中间件</tag>
        <tag>maven</tag>
        <tag>nexus</tag>
      </tags>
  </entry>
  <entry>
    <title>init a java web system</title>
    <url>/2019/07/31/%E4%B8%AD%E9%97%B4%E4%BB%B6/init-a-java-web-system/</url>
    <content><![CDATA[<p>在linux上配置一个java web开发环境。<br>包括为tomcat和zookeeper指定jdk环境。<br>这些中间件可能并不使用全局配置中的jdk。</p>
<a id="more"></a>
<p>(1) install mysql</p>
<p>(2) install jdk =&gt; jdk.tar.gz</p>
<p>(3) tomcat</p>
<p>tomcat_home/bin/catalina.sh<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">JAVA_HOME=/home/username/jdk1.8.x_x</span><br><span class="line">...</span><br><span class="line">JAVA_OPTS=&quot;$JAVA_OPTS -Dfile.encoding=UTF-8 -Dsun.jnu.encoding=UTF-8&quot;</span><br></pre></td></tr></table></figure></p>
<p>(4) zookeeper</p>
<p>1) config</p>
<pre><code>cd zookeeper_home
cp conf/zoo_sample.cfg conf/zoo.cfg
vim conf/zoo.cfg
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dataDir=zookeeper_home/data</span><br><span class="line">dataLogDir=zookeeper_home/logs</span><br></pre></td></tr></table></figure>

mkdir data
mkdir logs
</code></pre><p>2) environment</p>
<pre><code>vim bin/zkEnv.sh
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">JAVA_HOME=/home/username/jdk1.8.x_x</span><br></pre></td></tr></table></figure>
</code></pre><p>3) command</p>
<pre><code>./bin/zkServer.sh start/stop/status
</code></pre>]]></content>
      <categories>
        <category>中间件</category>
      </categories>
      <tags>
        <tag>tomcat</tag>
        <tag>中间件</tag>
        <tag>zookeeper</tag>
      </tags>
  </entry>
  <entry>
    <title>tomcat specify jre</title>
    <url>/2019/07/31/%E4%B8%AD%E9%97%B4%E4%BB%B6/tomcat-specify-jre/</url>
    <content><![CDATA[<p>为tomcat指定jdk。比如测试机全局配置jdk1.8，并且已经有多个tomcat实例。要部署一个jdk1.6的tomcat6。<br>可以按本文配置修改tomcat的jdk。</p>
<a id="more"></a>
<p>tomcat_home/bin/catalina.sh<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># top line</span><br><span class="line">JAVA_HOME=/home/username/jdk1.8.x_x</span><br><span class="line">...</span><br><span class="line">JAVA_OPTS=&quot;$JAVA_OPTS -Dfile.encoding=UTF-8 -Dsun.jnu.encoding=UTF-8&quot;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>中间件</category>
      </categories>
      <tags>
        <tag>tomcat</tag>
        <tag>中间件</tag>
      </tags>
  </entry>
  <entry>
    <title>zookeeper specify jre</title>
    <url>/2019/07/31/%E4%B8%AD%E9%97%B4%E4%BB%B6/zookeeper-specify-jre/</url>
    <content><![CDATA[<p>zookeeper也可以修改运行需要的jdk或jre环境</p>
<a id="more"></a>
<p>vim bin/zkEnv.sh<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">JAVA_HOME=/home/username/jdk1.8.x_x</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>中间件</category>
      </categories>
      <tags>
        <tag>中间件</tag>
        <tag>zookeeper</tag>
      </tags>
  </entry>
  <entry>
    <title>(3) quick start (3) html pages with javascript</title>
    <url>/2019/07/23/nodejs/(3)%20quick%20start%20(3)%20html%20pages%20with%20javascript/</url>
    <content><![CDATA[<p>react 快速开始<br>对于webpack来说，html也是资源文件的一种，需要为webpack引入相关插件，webpack才会识别html，并且可以在编译时注入相关的js<br>webpack4</p>
<a id="more"></a>
<p>The following steps will show you how to use webpack to compile html pages.<br>We have built <code>bundle.js</code> in <a href="/p/71e4b19c1264">quick start (2) webpack config</a>, now we use it in html pages.</p>
<p>The final tree without node_modules:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── package.json</span><br><span class="line">├── package-lock.json</span><br><span class="line">├── public</span><br><span class="line">│   └── index.html</span><br><span class="line">├── src</span><br><span class="line">│   └── index.js</span><br><span class="line">└── webpack.config.js</span><br></pre></td></tr></table></figure>
<h3 id="1-install-html-webpack-plugin"><a href="#1-install-html-webpack-plugin" class="headerlink" title="1. install html-webpack-plugin"></a><strong>1. install html-webpack-plugin</strong></h3><p>This plugin will use your html pages source files as templates to create pages in buiding step.<br><code>~:npm install --save-dev html-webpack-plugin</code></p>
<h3 id="2-code-sources"><a href="#2-code-sources" class="headerlink" title="2. code sources"></a><strong>2. code sources</strong></h3><p><strong>2.1 make direcotry for public items</strong></p>
<pre><code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~:cd lesson1</span><br><span class="line">~:mkdir public</span><br></pre></td></tr></table></figure>
</code></pre><p><strong>2.2. code html</strong></p>
<ul>
<li><h5 id="2-2-1-index-html"><a href="#2-2-1-index-html" class="headerlink" title="2.2.1 index.html"></a>2.2.1 index.html</h5>  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><strong>2.3 code javascript</strong><br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// console.log('Hello, this is a test!');</span></span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">"hello, this is a test!"</span>);</span><br></pre></td></tr></table></figure></p>
<h3 id="3-html-config-in-webpack-config-js"><a href="#3-html-config-in-webpack-config-js" class="headerlink" title="3. html config in webpack.config.js"></a><strong>3. html config in webpack.config.js</strong></h3><p>This config will use public/index.html as a template to create build/index.html and inject <code>bundle.js</code> into build/index.html.</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry:  path.resolve(__dirname,<span class="string">'src/index.js'</span>),</span><br><span class="line">    output: &#123;</span><br><span class="line">        path: path.resolve(__dirname, <span class="string">'build/static/js'</span>),</span><br><span class="line">        filename: <span class="string">'bundle.js'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    plugins:[</span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">            inject: <span class="literal">true</span>, </span><br><span class="line">            template: path.resolve(__dirname, <span class="string">'public/index.html'</span>),</span><br><span class="line">            filename: path.resolve(__dirname,<span class="string">'build/index.html'</span>),</span><br><span class="line">            minify:&#123;</span><br><span class="line">                removeAttributeQuotes: <span class="literal">true</span>,</span><br><span class="line">                collapseWhitespace: <span class="literal">true</span>,</span><br><span class="line">                removeRedundantAttributes: <span class="literal">true</span>,</span><br><span class="line">                useShortDoctype: <span class="literal">true</span>,</span><br><span class="line">                removeEmptyAttributes: <span class="literal">true</span>,</span><br><span class="line">                removeStyleLinkTypeAttributes: <span class="literal">true</span>,</span><br><span class="line">                keepClosingSlash: <span class="literal">true</span>,</span><br><span class="line">                minifyJS: <span class="literal">true</span>,</span><br><span class="line">                minifyCSS: <span class="literal">true</span>,</span><br><span class="line">                minifyURLs: <span class="literal">true</span>,</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;),</span><br><span class="line">    ],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>inject:<code>true</code> means inject all js at the bottom of the <body></body></p>
<h3 id="4-build-project"><a href="#4-build-project" class="headerlink" title="4. build project"></a><strong>4. build project</strong></h3><ul>
<li><h4 id="4-1-command"><a href="#4-1-command" class="headerlink" title="4.1 command"></a>4.1 command</h4><p>  <code>~:npm run build</code></p>
</li>
<li><h4 id="4-2-open-build-index-html-in-browser"><a href="#4-2-open-build-index-html-in-browser" class="headerlink" title="4.2 open build/index.html in browser"></a>4.2 open build/index.html in browser</h4></li>
</ul>
]]></content>
      <categories>
        <category>node</category>
        <category>react</category>
      </categories>
      <tags>
        <tag>react</tag>
        <tag>node</tag>
      </tags>
  </entry>
  <entry>
    <title>redux dispatch router入门</title>
    <url>/2019/12/20/reactjs/redux/redux-dispatch-router%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<p>在引入了saga之后，系统可以处理异步流程，但是仅仅在同一个页面渲染数据是不够的。<br>有时候还需要根据结果自动跳转到不同的route，此处引入 <code>connected-react-router</code> 组件，使dispatch包括saga的put，支持route跳转。</p>
<a id="more"></a>
<p>(1) 安装 connected-react-router</p>
<p><code>npm i connected-react-router -S</code></p>
<p>(2) 配置</p>
<ul>
<li>reducer 改造</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; combineReducers &#125; <span class="keyword">from</span> <span class="string">"redux"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; connectRouter &#125; <span class="keyword">from</span> <span class="string">"connected-react-router"</span>;</span><br><span class="line"><span class="keyword">const</span> reducers = <span class="function">(<span class="params">history: any</span>) =&gt;</span></span><br><span class="line">  combineReducers(&#123;</span><br><span class="line">    router: connectRouter(history),</span><br><span class="line">    <span class="comment">// ... 其他reducer</span></span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> reducers;</span><br></pre></td></tr></table></figure>
<ul>
<li>store改造</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createStore <span class="keyword">as</span> _createStore, applyMiddleware, compose &#125; <span class="keyword">from</span> <span class="string">"redux"</span>;</span><br><span class="line"><span class="keyword">import</span> createSagaMiddleware <span class="keyword">from</span> <span class="string">"redux-saga"</span>;</span><br><span class="line"><span class="keyword">import</span> reducers <span class="keyword">from</span> <span class="string">"./modules/reducer"</span>;</span><br><span class="line"><span class="keyword">import</span> rootSaga <span class="keyword">from</span> <span class="string">"./rootSaga"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; createBrowserHistory &#125; <span class="keyword">from</span> <span class="string">"history"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; routerMiddleware &#125; <span class="keyword">from</span> <span class="string">"connected-react-router"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> sagaMiddleware = createSagaMiddleware();</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> history = createBrowserHistory();</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> <span class="title">createStore</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> store = _createStore(</span><br><span class="line">    reducers(history),</span><br><span class="line">    compose(</span><br><span class="line">      applyMiddleware(</span><br><span class="line">        routerMiddleware(history),</span><br><span class="line">        sagaMiddleware</span><br><span class="line">      )</span><br><span class="line">    )</span><br><span class="line">  );</span><br><span class="line">  sagaMiddleware.run(rootSaga);</span><br><span class="line">  <span class="keyword">return</span> store;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>根组件改造<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">"react"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; BrowserRouter <span class="keyword">as</span> Router, Link &#125; <span class="keyword">from</span> <span class="string">"react-router-dom"</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">"./App.less"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Layout, Menu, Icon &#125; <span class="keyword">from</span> <span class="string">"antd"</span>;</span><br><span class="line"><span class="keyword">import</span> getRoutes <span class="keyword">from</span> <span class="string">"./routes"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; ConnectedRouter &#125; <span class="keyword">from</span> <span class="string">"connected-react-router"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;history&#125; <span class="keyword">from</span> <span class="string">"./redux/create"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; Header, Content, Footer, Sider &#125; = Layout;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = getRoutes();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> App: React.FC = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;ConnectedRouter history=&#123;history&#125;&gt;</span><br><span class="line">      ...</span><br><span class="line">    &lt;<span class="regexp">/ConnectedRouter&gt;</span></span><br><span class="line"><span class="regexp">  );</span></span><br><span class="line"><span class="regexp">&#125;;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">export default App;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>(3) 使用</p>
<ul>
<li>在 saga中使用</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; push &#125; <span class="keyword">from</span> <span class="string">"connected-react-router"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; put, call, takeLatest &#125; <span class="keyword">from</span> <span class="string">"redux-saga/effects"</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span>* <span class="title">saveTask</span>(<span class="params">action: TaskCreateAction</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> data = <span class="keyword">yield</span> call(</span><br><span class="line">      fetchApi,</span><br><span class="line">      <span class="string">"saveTask"</span>,</span><br><span class="line">      <span class="built_in">JSON</span>.stringify(action.taskDetail)</span><br><span class="line">    );</span><br><span class="line">    <span class="comment">// todo 此处可以直接push数据</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"saga save task success,"</span>, data.task);</span><br><span class="line">    <span class="keyword">yield</span> put(&#123; <span class="attr">type</span>: createActionType.SAVE_SUCCESS, <span class="attr">taskDetail</span>: data &#125;);</span><br><span class="line">    <span class="keyword">let</span> path = &#123; <span class="attr">pathname</span>: <span class="string">"/saved_detail/"</span>, <span class="attr">state</span>: data &#125;;</span><br><span class="line">    <span class="keyword">yield</span> put(push(path));</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    <span class="keyword">yield</span> put(&#123; <span class="attr">type</span>: createActionType.SAVE_FAIL, <span class="attr">error</span>: e.message &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span>* <span class="title">taskSaga</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">yield</span> takeLatest(createActionType.SAVE, saveTask);</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注意: 此处 push 是带参数的形式，注意route写法</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;Route path=<span class="string">"/saved_detail"</span> component=&#123;TaskDetail&#125;&gt;<span class="xml"><span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>获取数据<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">this</span>.props.location.state</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>reactjs</category>
      </categories>
      <tags>
        <tag>react</tag>
        <tag>redux</tag>
        <tag>router</tag>
        <tag>saga</tag>
      </tags>
  </entry>
  <entry>
    <title>redux-saga入门</title>
    <url>/2019/12/20/reactjs/redux/redux-saga%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<p>使用了redux之后，数据的管理交给了redux，但是与服务端交互一般都是多流程的异步请求。<br>一个请求开始后，应当自动根据请求结果成功或失败渲染新的内容，在没使用redux之前，该过程在组件内部完成，因为state由组件自己管理。但是现在state由redux管理，所以该过程应该由redux控制。<br>redux-saga就是这样一个异步请求的redux插件。</p>
<a id="more"></a>
<p>(1) 安装redux-saga</p>
<p><code>npm i redux-saga -S</code></p>
<p>redux-saga 使用了generator。<br>函数基本上就是 带*号的函数，这种函数可以在函数内部任意地方执行返回，然后再从这个地方继续执行。<br>并且 提供了 async await这样的异步编程语法糖。不用再写promise的then链。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>* <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    yeild <span class="string">"value1"</span>;</span><br><span class="line">    yeild <span class="string">"value2"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"value3"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> x = test();</span><br><span class="line"><span class="built_in">console</span>.log(x.next()); <span class="comment">// value1</span></span><br><span class="line"><span class="built_in">console</span>.log(x.next()); <span class="comment">// value2;</span></span><br><span class="line"><span class="built_in">console</span>.log(x.next()); <span class="comment">// value3</span></span><br><span class="line"><span class="built_in">console</span>.log(x.next()); <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure>
<p>该函数会返回一个iterator。这是es6提供的一种异步方案。</p>
<p>(2) 配置</p>
<p>然还需要一些额外的代码引入saga</p>
<ol>
<li>在 createStore处 或者是在 combinereducer的地方</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">import</span> &#123;createStore, applyMiddleware&#125; <span class="keyword">from</span> <span class="string">"redux"</span>;</span><br><span class="line"><span class="keyword">import</span> createSagaMiddleware <span class="keyword">from</span> <span class="string">"redux-saga"</span>;</span><br><span class="line"><span class="keyword">import</span> saga <span class="keyword">from</span> <span class="string">"./saga"</span>;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> sagaMiddleware = createSagaMiddleware();</span><br><span class="line"><span class="keyword">const</span> store = createStore(</span><br><span class="line">    reducer,</span><br><span class="line">    applyMiddleware(sagaMiddleware)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">sagaMiddleware.run(saga);</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>redux-saga分模块</p>
<p>最终可以使用 all 接口创建 rootSaga 对象</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;all&#125; <span class="keyword">from</span> <span class="string">"redux-saga/effects"</span>;</span><br><span class="line"><span class="keyword">import</span> getTaskList <span class="keyword">from</span> <span class="string">"./task"</span>;</span><br><span class="line"><span class="keyword">import</span> getDetail <span class="keyword">from</span> <span class="string">"./detail"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> all([</span><br><span class="line">    getTaskList(),</span><br><span class="line">    getDetail()</span><br><span class="line">])</span><br></pre></td></tr></table></figure>
<p>(3) 在redux中使用</p>
<ul>
<li>saga.js</li>
</ul>
<p><code>put</code>相当于 redux的dispatch，所以参数也是action<br>根据结果不同执行不同的put<br>最后，要把函数注册到redux上</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; call, put, takeEvery, taskLatest &#125; <span class="keyword">from</span> <span class="string">"redux-saga/effects"</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span>* <span class="title">getTaskList</span>(<span class="params">action</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="keyword">const</span> data = <span class="keyword">yield</span> fetch(<span class="string">"http://localhost:8080/task/list"</span>);</span><br><span class="line">        <span class="keyword">yield</span> put(&#123;<span class="attr">type</span>: <span class="string">"LOAD_SUCCESS"</span>, <span class="attr">promise</span>: data&#125;);</span><br><span class="line">    &#125;<span class="keyword">catch</span>(e)&#123;</span><br><span class="line">        <span class="keyword">yield</span> put(&#123;<span class="attr">type</span>: <span class="string">"LOAD_FAIL"</span>, <span class="attr">error</span>: e.message&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// takeEvery 并发执行，允许多个相同的action同时执行</span></span><br><span class="line"><span class="comment">// takeLatest 只允许最后一个action执行，前边的会被放弃</span></span><br><span class="line"><span class="comment">// 这两个接口构建在 take和fork之上</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span>* <span class="title">mySaga</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">yield</span> takeEvery(<span class="string">"LOAD"</span>, getTaskList);</span><br><span class="line">    <span class="comment">// 其他的 异步接口，但是这样写不够优雅</span></span><br><span class="line">    <span class="keyword">yield</span> takeLast(<span class="string">"detail_load"</span>, getDetail);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>reactjs</category>
      </categories>
      <tags>
        <tag>react</tag>
        <tag>redux</tag>
        <tag>redux-saga</tag>
      </tags>
  </entry>
  <entry>
    <title>log4j2配置解析</title>
    <url>/2019/12/19/spring/%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/log4j2%E9%85%8D%E7%BD%AE%E8%A7%A3%E6%9E%90/</url>
    <content><![CDATA[<p>log4j2 xml 配置解析<br>springboot,gradle 集成 log4j2</p>
<a id="more"></a>
<h3 id="1-log4j2-xml-解析"><a href="#1-log4j2-xml-解析" class="headerlink" title="(1) log4j2 xml 解析"></a>(1) log4j2 xml 解析</h3><ul>
<li>配置文件</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--日志文件名前缀--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Properties</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--日志格式--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"log.pattern"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">value</span>=<span class="string">"%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; %-5p %c&#123;2&#125; : - %m%n"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Properties</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--控制台appender--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appenders</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">console</span> <span class="attr">name</span>=<span class="string">"Console"</span> <span class="attr">target</span>=<span class="string">"SYSTEM_OUT"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">PatternLayout</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;log.pattern&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">PatternLayout</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">console</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appenders</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">loggers</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--根策略--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"DEBUG"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"Console"</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--        &lt;appender-ref ref="fileInfoLog"/&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--    其他策略，默认会包含根策略--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--    &lt;logger name="org.springframework.boot" level="INFO"/&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--    &lt;logger name="com.fc.test" level="debug"/&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">loggers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>日志格式 Layout</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">PatternLayout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>"%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; %-5p %c&#123;2&#125; : - %m%n"<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">PatternLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><code>%d</code>    打印日期，后边的中括号限定了日期格式<br><code>%p</code>    打印日志级别，-5 表示最多5个字符，左对齐不足5个字符补空格<br><code>%c</code>    打印日志的类的路径，中括号表示路径级别取舍。默认全路径，比如 com.fc.test.TestController, {2} 表示 test.TestController<br><code>%m</code>    日志内容<br><code>%n</code>    当前系统平台的换行符</p>
<p>其他常用<br><code>%T</code>    调用log的线程id<br><code>$X{xxx}</code>   打印用户指定的内容</p>
<h3 id="2-springboot-gradle-集成-log4j2"><a href="#2-springboot-gradle-集成-log4j2" class="headerlink" title="(2) springboot gradle 集成 log4j2"></a>(2) springboot gradle 集成 log4j2</h3><ul>
<li><p>全面替换，应该把每个模块的logback 禁用，并引入log4j2</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">configurations &#123;</span><br><span class="line">    all*.exclude group: &apos;org.springframework.boot&apos;, module: &apos;spring-boot-starter-logging&apos;</span><br><span class="line">&#125;</span><br><span class="line">dependencies &#123;</span><br><span class="line">    compile &apos;org.springframework.boot:spring-boot-starter-log4j2&apos;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>lombok使用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Slf</span>4j</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="3-集成-sleuth"><a href="#3-集成-sleuth" class="headerlink" title="(3) 集成 sleuth"></a>(3) 集成 sleuth</h3><ul>
<li><p>入口模块的 gradle配置，比如web模块</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ext &#123;</span><br><span class="line">    set(&apos;springCloudVersion&apos;, &quot;Hoxton.RELEASE&quot;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencyManagement &#123;</span><br><span class="line">    imports &#123;</span><br><span class="line">        mavenBom &quot;org.springframework.cloud:spring-cloud-dependencies:$&#123;springCloudVersion&#125;&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    compile &apos;org.springframework.cloud:spring-cloud-starter-sleuth&apos;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>log4j2 配置文件，日志格式制定trace相关</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">PatternLayout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>"%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%T,%X&#123;X-B3-TraceId&#125;,%X&#123;X-B3-SpanId&#125;,%X&#123;X-B3-ParentSpanId&#125;,%X&#123;X-Span-Export&#125;] %-5p %c&#123;2&#125; : - %m%n"<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">PatternLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><code>X-B3-TraceId</code> 即 traceId，表示当前链路的id，同一条链路，traceId相同。<br><code>X-B3-SpanId</code>   即 spanId，表示当前系统的任务id。<br><code>X-B3-ParentSpanId</code>  当前任务的 父id，<br><code>X-Span-Export</code> 是否输出到日志收集系统比如zipkin</p>
]]></content>
      <categories>
        <category>spring</category>
      </categories>
      <tags>
        <tag>spring</tag>
        <tag>java</tag>
        <tag>log4j</tag>
        <tag>sleuth</tag>
      </tags>
  </entry>
  <entry>
    <title>redux入门</title>
    <url>/2019/07/31/reactjs/redux/redux%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<p>redux可以理解为数据源，用来解决组件通信问题。在原始的react项目中，组件通讯使用树结构，这导致状态变化数据的传递非常复杂。</p>
<a id="more"></a>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">inc</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> &#123; <span class="attr">type</span> : <span class="string">'INCREMENT'</span>&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dec</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> &#123; <span class="attr">type</span> : <span class="string">'DECREMENT'</span>&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">reducer</span>(<span class="params">state, action</span>)</span>&#123;</span><br><span class="line">      state = state || &#123; <span class="attr">counter</span> : <span class="number">0</span>&#125;;</span><br><span class="line">      <span class="keyword">switch</span> (action.type)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'INCREMENT'</span> :</span><br><span class="line">                      <span class="keyword">return</span> &#123; <span class="attr">counter</span> : state.counter + <span class="number">1</span>&#125;;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'DECREMENT'</span> :</span><br><span class="line">                      <span class="keyword">return</span> &#123; <span class="attr">counter</span> : state.counter - <span class="number">1</span>&#125;;</span><br><span class="line">            <span class="keyword">default</span> :</span><br><span class="line">                      <span class="keyword">return</span> state;</span><br><span class="line">      &#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">const</span> store = createStore(reducer);</span><br><span class="line">consloe.log(store.getState());</span><br><span class="line"></span><br><span class="line">store.dispatch(inc());</span><br><span class="line">consloe.log(store.getState());</span><br><span class="line">store.dispatch(dec());</span><br><span class="line">consloe.log(store.getState());</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>reactjs</category>
      </categories>
      <tags>
        <tag>redux</tag>
        <tag>reactjs</tag>
      </tags>
  </entry>
</search>
